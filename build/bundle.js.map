{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/config.js","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/data/storage.js","../../src/components/Cover.svelte","../../src/components/QuickNav.svelte","../../src/components/SearchBar/Clock.svelte","../../src/components/SearchBar/RandomGithub.svelte","../../src/components/SearchBar/SearchBar.svelte","../../src/data/tools.js","../../src/components/SpeedDial.svelte","../../src/components/Settings/SettingsForm.svelte","../../src/components/Settings/CustomBackgrounds.svelte","../../src/components/Settings/Backgrounds.svelte","../../src/components/Settings/PagesImageModal.svelte","../../src/components/Settings/PagesGroupModal.svelte","../../src/components/Settings/Pages.svelte","../../src/components/Settings/ImportExport.svelte","../../src/components/Settings/SearchEngine.svelte","../../src/components/Settings/About.svelte","../../src/components/Settings/Settings.svelte","../../src/components/Notes/Note.svelte","../../src/components/Notes/Notes.svelte","../../src/components/Entertainment.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*Default settings*/\r\nexport const yourName = \"New Tab\";\r\nexport const showCover = true;\r\nexport const clockBackground = true;\r\nexport const clock24Hour = true;\r\nexport const darkMode = false;\r\nexport const isBackgroundSolid = false;\r\nexport const backgroundSolidColor = \"#3a99ff\";\r\nexport const backgroundImage = \"sl1\";\r\nexport const tileZoom = true;\r\nexport const tileGrow = false;\r\nexport const tileMinWidth = 28;\r\nexport const tileHeight = 18;\r\nexport const tileGap = 2;\r\nexport const tileBorder = 0;\r\nexport const tileBorderRadius = 1.5;\r\nexport const tileBorderColor = { r: 58, g: 153, b: 255 };\r\nexport const groupTileGap = 1;\r\nexport const groupTileBorderRadius = 1.5;\r\nexport const groupTileGrow = true;\r\nexport const navbarOpacity = 0;\r\nexport const navbarColor = { r: 58, g: 153, b: 255 };\r\nexport const coverColor = { r: 58, g: 153, b: 255 };\r\nexport const coverTextColor = { r: 255, g: 255, b: 255 };\r\n\r\nexport const searchEngine = \"google\";\r\nexport const searchEngineList = [\r\n  {\r\n    name: \"google\",\r\n    label: \"Google\",\r\n    link: \"https://www.google.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"bing\",\r\n    label: \"Bing\",\r\n    link: \"https://www.bing.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"duckduckgo\",\r\n    label: \"DuckDuckGo\",\r\n    link: \"https://duckduckgo.com/?q=\",\r\n  },\r\n  {\r\n    name: \"bravesearch\",\r\n    label: \"Brave Search\",\r\n    link: \"https://search.brave.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"yahoo\",\r\n    label: \"Yahoo\",\r\n    link: \"https://search.yahoo.com/search?p=\",\r\n  },\r\n  {\r\n    name: \"startpage\",\r\n    label: \"Startpage\",\r\n    link: \"https://www.startpage.com/do/dsearch?query=\",\r\n  },\r\n  {\r\n    name: \"ecosia\",\r\n    label: \"Ecosia\",\r\n    link: \"https://www.ecosia.org/search?q=\",\r\n  },\r\n  {\r\n    name: \"aol\",\r\n    label: \"AOL\",\r\n    link: \"https://search.aol.com/aol/search?q=\",\r\n  },\r\n  {\r\n    name: \"yandex\",\r\n    label: \"Yandex\",\r\n    link: \"https://yandex.com/search/?text=\",\r\n  },\r\n  {\r\n    name: \"baidu\",\r\n    label: \"Baidu\",\r\n    link: \"https://www.baidu.com/s?wd=\",\r\n  },\r\n  {\r\n    name: \"naver\",\r\n    label: \"Naver\",\r\n    link: \"https://search.naver.com/search.naver?query=\",\r\n  },\r\n  {\r\n    name: \"swisscows\",\r\n    label: \"Swisscows\",\r\n    link: \"https://swisscows.com/web?query=\",\r\n  },\r\n  {\r\n    name: \"qwant\",\r\n    label: \"Qwant\",\r\n    link: \"https://www.qwant.com/?q=\",\r\n  },\r\n  {\r\n    name: \"perplexity\",\r\n    label: \"Perplexity AI\",\r\n    link: \"https://www.perplexity.ai/search/new?q=\",\r\n  }\r\n];\r\n\r\nexport const notes = [];\r\n\r\nexport const pages = [\r\n  {\r\n    link: \"https://www.google.com\",\r\n    imageName: \"google\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Google\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.facebook.com\",\r\n    imageName: \"facebook\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Facebook\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.youtube.com\",\r\n    imageName: \"youtube\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"YouTube\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.yahoo.com\",\r\n    imageName: \"yahoo\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Yahoo\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.reddit.com\",\r\n    imageName: \"reddit\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Reddit\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.netflix.com/browse\",\r\n    imageName: \"netflix\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Netflix\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.twitter.com\",\r\n    imageName: \"twitter\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Twitter\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    name: \"Shopping\",\r\n    isGroup: true,\r\n    isActive: true,\r\n    pages: [\r\n      {\r\n        link: \"https://www.amazon.com\",\r\n        imageName: \"amazon\",\r\n        isActive: true,\r\n        tileImageType: 'predefined',\r\n        tileName: \"Amazon\",\r\n        backgroundColor: \"#3a99ff\",\r\n        textColor: \"#ffffff\"\r\n      },\r\n      {\r\n        link: \"https://www.bestbuy.com\",\r\n        imageName: \"bestbuy\",\r\n        isActive: true,\r\n        tileImageType: 'predefined',\r\n        tileName: \"Bestbuy\",\r\n        backgroundColor: \"#3a99ff\",\r\n        textColor: \"#ffffff\"\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const entertainmentData = [\r\n  {\r\n    name: \"Hangman Game\",\r\n    link: \"https://klibrdm.github.io/hangman-game-react\",\r\n    img: \"hangman-game-icon.avif\",\r\n  },\r\n  {\r\n    name: \"Business Club\",\r\n    link: \"https://klibrdm.github.io/business-club-game\",\r\n    img: \"business-club-icon.avif\",\r\n  },\r\n];\r\n\r\nexport const backgrounds = [\r\n  {\r\n    name: \"bg1\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg2\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg3\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg4\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg5\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg6\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg7\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg8\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg9\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg10\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg11\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg12\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg13\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg14\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg15\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg16\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg17\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg18\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg19\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg20\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg21\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg22\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg23\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg24\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg25\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg26\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg27\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg28\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg29\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg30\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"sl1\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl2\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl3\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl4\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl5\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl6\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl7\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl8\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl9\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl10\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl11\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl12\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl13\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl14\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl15\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl16\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl17\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl18\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl19\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl20\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl21\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl22\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl23\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl24\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl25\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl26\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl27\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl28\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl29\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl30\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl31\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl32\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl33\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl34\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl35\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n];\r\n\r\nexport const sourceDetails = new Map([\r\n  ['pixabay', {\r\n    name: 'pixabay',\r\n    label: 'Pixabay',\r\n    url: 'https://pixabay.com/'\r\n  }],\r\n  ['starline-freepik', {\r\n    name: 'starline-freepik',\r\n    label: 'starline on Freepik',\r\n    url: 'https://www.freepik.com/author/starline'\r\n  }],\r\n]);\r\n\r\n//Known pages are the ones that have a thumbnail image\r\nexport const knownPages = [\r\n  //V1.0\r\n  \"google\",\r\n  \"facebook\",\r\n  \"youtube\",\r\n  \"yahoo\",\r\n  \"reddit\",\r\n  \"netflix\",\r\n  \"github\",\r\n  \"emag\",\r\n  \"pcg\",\r\n  \"pcgarage\",\r\n  \"amazon\",\r\n  \"ebay\",\r\n  \"craigslist\",\r\n  \"twitch\",\r\n  \"9gag\",\r\n  \"accuweather\",\r\n  \"yr\",\r\n  \"twitter\",\r\n  \"vk\",\r\n  \"gmail\",\r\n  \"maps.google\",\r\n  \"docs.google\",\r\n  \"translate.google\",\r\n  \"drive.google\",\r\n  \"onedrive\",\r\n  \"onedrive.live\",\r\n  \"instagram\",\r\n  \"pinterest\",\r\n  \"tumblr\",\r\n  \"stackoverflow\",\r\n  \"codecademy\",\r\n  \"w3schools\",\r\n  \"php\",\r\n  \"thepiratebay\",\r\n  \"piratebay\",\r\n  \"pirateship\",\r\n  \"pirateproxy\",\r\n  \"filelist\",\r\n  \"kickass\",\r\n  \"kat\",\r\n  \"katcr\",\r\n  \"aliexpress\",\r\n  \"alibaba\",\r\n  \"paypal\",\r\n  \"olx\",\r\n  \"baidu\",\r\n  \"wikipedia\",\r\n  \"tmall\",\r\n  \"live\",\r\n  \"microsoft\",\r\n  \"list.tmall\",\r\n  \"office\",\r\n  \"msn\",\r\n  \"pages.tmall\",\r\n  \"yandex\",\r\n  \"whatsapp\",\r\n  \"spotify\",\r\n  \"linkedin\",\r\n  \"csdn\",\r\n  \"bing\",\r\n\r\n  //V2.0 (1)\r\n  \"meet.google\",\r\n  \"classroom.google\",\r\n  \"teams.microsoft\",\r\n  \"web.whatsapp\",\r\n  \"skype\",\r\n  \"web.skype\",\r\n  \"zoom\",\r\n  \"tiktok\",\r\n  \"wish\",\r\n  \"discord\",\r\n  \"discordapp\",\r\n  //V2.0 (2)\r\n  \"g2a\",\r\n  \"instant-gaming\",\r\n  \"kinguin\",\r\n  \"eneba\",\r\n  \"cdkeys\",\r\n  \"gamivo\",\r\n  \"hrkgame\",\r\n  //V2.0 (3)\r\n  \"qq\",\r\n  \"mail\",\r\n  \"duckduckgo\",\r\n  \"ok\",\r\n  \"okru\",\r\n  \"sogou\",\r\n  \"globo\",\r\n  \"taobao\",\r\n  \"naver\",\r\n  \"quora\",\r\n  \"imdb\",\r\n  \"uol\",\r\n  \"bbc\",\r\n  \"cnn\",\r\n  \"booking\",\r\n  \"cricbuzz\",\r\n  \"jd\",\r\n  \"bilibili\",\r\n  \"youtu\",\r\n  \"imgur\",\r\n  \"foxnews\",\r\n  \"rakuten\",\r\n  \"viber\",\r\n  \"weather\",\r\n  \"walmart\",\r\n  \"costco\",\r\n  \"walgreens\",\r\n  \"homedepot\",\r\n  \"target\",\r\n  \"lowes\",\r\n  \"albertsons\",\r\n  \"bestbuy\",\r\n  \"ikea\",\r\n  \"jysk\",\r\n  \"newegg\",\r\n  \"gamestop\",\r\n\r\n  //V2.1\r\n  \"localhost\",\r\n  \"calendar.google\",\r\n  \"photos.google\",\r\n  \"figma\",\r\n\r\n  //V2.2\r\n  \"chatgpt\",\r\n  \"chat.openai\",\r\n  \"openai\",\r\n  \"platform.openai\",\r\n];\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const userData = writable({});\r\n","import * as CONFIG from \"./config\";\r\nimport { userData } from \"../store\";\r\n\r\nexport const saveConfig = (data) => {\r\n  localStorage.setItem(\"ft\", true);\r\n  localStorage.setItem(\"yourName\", data.yourName);\r\n  localStorage.setItem(\"showCover\", data.showCover);\r\n  localStorage.setItem(\"clockBackground\", data.clockBackground);\r\n  localStorage.setItem(\"clock24Hour\", data.clock24Hour);\r\n  localStorage.setItem(\"darkMode\", data.darkMode);\r\n  localStorage.setItem(\"isBackgroundSolid\", data.isBackgroundSolid);\r\n  localStorage.setItem(\"backgroundSolidColor\", data.backgroundSolidColor);\r\n  localStorage.setItem(\"backgroundImage\", data.backgroundImage);\r\n  localStorage.setItem(\"tileZoom\", data.tileZoom);\r\n  localStorage.setItem(\"tileGrow\", data.tileGrow);\r\n  localStorage.setItem(\"tileMinWidth\", data.tileMinWidth);\r\n  localStorage.setItem(\"tileHeight\", data.tileHeight);\r\n  localStorage.setItem(\"tileGap\", data.tileGap);\r\n  localStorage.setItem(\"tileBorder\", data.tileBorder);\r\n  localStorage.setItem(\"tileBorderRadius\", data.tileBorderRadius);\r\n  localStorage.setItem(\"tileBorderColor\", JSON.stringify(data.tileBorderColor));\r\n  localStorage.setItem(\"groupTileGap\", data.groupTileGap);\r\n  localStorage.setItem(\"groupTileBorderRadius\", data.groupTileBorderRadius);\r\n  localStorage.setItem(\"groupTileGrow\", data.groupTileGrow);\r\n  localStorage.setItem(\"navbarOpacity\", data.navbarOpacity);\r\n  localStorage.setItem(\"navbarColor\", JSON.stringify(data.navbarColor));\r\n  localStorage.setItem(\"coverColor\", JSON.stringify(data.coverColor));\r\n  localStorage.setItem(\"coverTextColor\", JSON.stringify(data.coverTextColor));\r\n  localStorage.setItem(\"notes\", JSON.stringify(data.notes));\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n  localStorage.setItem(\"searchEngine\", data.searchEngine);\r\n};\r\n\r\nexport const saveBackground = (bg) => {\r\n  localStorage.setItem(\"backgroundImage\", bg);\r\n  localStorage.setItem(\"isBackgroundSolid\", false);\r\n};\r\n\r\nexport const saveBackgroundColor = (color) => {\r\n  localStorage.setItem(\"backgroundSolidColor\", color);\r\n  localStorage.setItem(\"isBackgroundSolid\", true);\r\n};\r\n\r\nexport const saveNotes = (notes) => {\r\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n};\r\n\r\nexport const saveTileImage = (link, image) => {\r\n  localStorage.setItem(link, image);\r\n}\r\n\r\nexport const saveSearchEngine = (engine) => {\r\n  localStorage.setItem(\"searchEngine\", engine);\r\n}\r\n\r\nexport const getTileImage = (link) => {\r\n  return localStorage.getItem(link);\r\n}\r\n\r\nexport const getTileImageLinks = () => {\r\n  let links = [];\r\n  for (let key in localStorage) {\r\n    if (key.indexOf(\"http\") !== -1) {\r\n      links.push(key);\r\n    }\r\n  }\r\n  return links;\r\n}\r\n\r\n/*Load data from localstorage\r\nIf the extension can't get the item from localstorage, use the value from config\r\n(simple || if not bool, ? : if bool)*/\r\n//prettier-ignore\r\nconst data = {\r\n  yourName: \r\n    localStorage.getItem(\"yourName\") ||\r\n    CONFIG.yourName,\r\n\r\n  showCover: \r\n    localStorage.getItem(\"showCover\") === null \r\n    ? CONFIG.showCover\r\n    : localStorage.getItem(\"showCover\") === \"true\",\r\n\r\n  clockBackground:\r\n    localStorage.getItem(\"clockBackground\") === null\r\n    ? CONFIG.clockBackground\r\n    : localStorage.getItem(\"clockBackground\") === \"true\",\r\n\r\n  clock24Hour:\r\n    localStorage.getItem(\"clock24Hour\") === null\r\n    ? CONFIG.clock24Hour\r\n    : localStorage.getItem(\"clock24Hour\") === \"true\",\r\n\r\n  darkMode:\r\n    localStorage.getItem(\"darkMode\") === null\r\n    ? CONFIG.darkMode\r\n    : localStorage.getItem(\"darkMode\") === \"true\",\r\n\r\n  isBackgroundSolid:\r\n    localStorage.getItem(\"isBackgroundSolid\") === null\r\n    ? CONFIG.isBackgroundSolid\r\n    : localStorage.getItem(\"isBackgroundSolid\") === \"true\",\r\n\r\n  backgroundSolidColor:\r\n    localStorage.getItem(\"backgroundSolidColor\") ||\r\n    CONFIG.backgroundSolidColor,\r\n\r\n  backgroundImage:\r\n    localStorage.getItem(\"backgroundImage\") ||\r\n    CONFIG.backgroundImage,\r\n\r\n  tileZoom:\r\n    localStorage.getItem(\"tileZoom\") === null\r\n    ? CONFIG.tileZoom\r\n    : localStorage.getItem(\"tileZoom\") === \"true\",\r\n\r\n  tileGrow:\r\n    localStorage.getItem(\"tileGrow\") === null\r\n    ? CONFIG.tileGrow\r\n    : localStorage.getItem(\"tileGrow\") === \"true\",\r\n\r\n  tileMinWidth:\r\n    localStorage.getItem(\"tileMinWidth\") ||\r\n    CONFIG.tileMinWidth,\r\n\r\n  tileHeight:\r\n    localStorage.getItem(\"tileHeight\") ||\r\n    CONFIG.tileHeight,\r\n\r\n  tileGap:\r\n    localStorage.getItem(\"tileGap\") ||\r\n    CONFIG.tileGap,\r\n\r\n  tileBorder:\r\n    localStorage.getItem(\"tileBorder\") ||\r\n    CONFIG.tileBorder,\r\n\r\n  tileBorderRadius:\r\n    localStorage.getItem(\"tileBorderRadius\") ||\r\n    CONFIG.tileBorderRadius,\r\n\r\n  tileBorderColor:\r\n    JSON.parse(localStorage.getItem(\"tileBorderColor\")) ||\r\n    CONFIG.tileBorderColor,\r\n\r\n  groupTileGap:\r\n    localStorage.getItem(\"groupTileGap\") ||\r\n    CONFIG.groupTileGap,\r\n\r\n  groupTileBorderRadius:\r\n    localStorage.getItem(\"groupTileBorderRadius\") ||\r\n    CONFIG.groupTileBorderRadius,\r\n\r\n  groupTileGrow:\r\n    localStorage.getItem(\"groupTileGrow\") === null\r\n    ? CONFIG.groupTileGrow\r\n    : localStorage.getItem(\"groupTileGrow\") === \"true\",\r\n\r\n  navbarOpacity:\r\n    localStorage.getItem(\"navbarOpacity\") ||\r\n    CONFIG.navbarOpacity,\r\n\r\n  navbarColor:\r\n    JSON.parse(localStorage.getItem(\"navbarColor\")) ||\r\n    CONFIG.navbarColor,\r\n\r\n  coverColor:\r\n    JSON.parse(localStorage.getItem(\"coverColor\")) ||\r\n    CONFIG.coverColor,\r\n\r\n  coverTextColor:\r\n    JSON.parse(localStorage.getItem(\"coverTextColor\")) ||\r\n    CONFIG.coverTextColor,\r\n\r\n  notes:\r\n    JSON.parse(localStorage.getItem(\"notes\")) ||\r\n    CONFIG.notes,\r\n\r\n  pages:\r\n    JSON.parse(localStorage.getItem(\"pages\")) ||\r\n    CONFIG.pages,\r\n\r\n  searchEngine:\r\n    localStorage.getItem(\"searchEngine\") ||\r\n    CONFIG.searchEngine,\r\n};\r\n\r\n/*Import pages data from legacy 1.1 version\r\nData was stored in cookies instead of local storage*/\r\nlet legacyPagesCookie = getCookie(\"pages\");\r\n\r\nif (legacyPagesCookie != null) {\r\n  let oldPages = [];\r\n  let legacyPagesParsedCookie = JSON.parse(legacyPagesCookie);\r\n\r\n  //Old data also had a different format\r\n  //Therefore it has to be converted\r\n  legacyPagesParsedCookie.forEach((page, index) => {\r\n    oldPages[index] = {\r\n      link: page[0],\r\n      imageName: page[1],\r\n      isActive: page[2] ? true : false,\r\n      tileImageType: page[1].length > 1 ? 'predefined' : 'none',\r\n      tileName: page[1][0].toUpperCase() + page[1].slice(1),\r\n      backgroundColor: \"#3a99ff\",\r\n      textColor: \"#ffffff\"\r\n    };\r\n  });\r\n\r\n  data.pages = oldPages;\r\n  eraseCookie(\"pages\");\r\n  saveConfig(data);\r\n}\r\n\r\n/* Add new properties to old pages (missing on version 2.1 and before) */\r\nif (data.pages) {\r\n  data.pages.forEach(page => {\r\n    if (page.isGroup) {\r\n      return;\r\n    }\r\n\r\n    if (!page.hasOwnProperty(\"tileImageType\")) {\r\n      page.tileImageType = page.imageName.length > 1 ? 'predefined' : 'none';\r\n    }\r\n    if (!page.hasOwnProperty(\"tileName\")) {\r\n      page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n    }\r\n    if (!page.hasOwnProperty(\"backgroundColor\")) {\r\n      page.backgroundColor = \"#3a99ff\";\r\n    }\r\n    if (!page.hasOwnProperty(\"textColor\")) {\r\n      page.textColor = \"#ffffff\";\r\n    }\r\n  });\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n}\r\n\r\n//After loading the data, set it to state\r\nuserData.set(data);\r\n\r\n//Cookie management functions to restore legacy data\r\nfunction getCookie(name) {\r\n  let nameEQ = name + \"=\";\r\n  let ca = document.cookie.split(\";\");\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction eraseCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let yourName;\r\n  let showCover;\r\n  let coverColor;\r\n  let coverTextColor;\r\n\r\n  userData.subscribe((data) => {\r\n    yourName = data.yourName;\r\n    showCover = data.showCover;\r\n    coverColor = data.coverColor;\r\n    coverTextColor = data.coverTextColor;\r\n  });\r\n\r\n  //Creating a second variable for showCover\r\n  //that doesn't change when state updates\r\n  //Otherwise the cover would show when saving changes\r\n  let showCoverAtLoad = showCover;\r\n\r\n  //Any time showCoverAtLoad changes (it shouldn't)\r\n  //Hide it after 1.5 seconds\r\n  $: if (showCoverAtLoad) {\r\n    setTimeout(function () {\r\n      showCoverAtLoad = false;\r\n    }, 1500);\r\n  }\r\n</script>\r\n\r\n{#if showCoverAtLoad}\r\n  <div\r\n    id=\"cover\"\r\n    style=\"\r\n      background-color: \r\n        rgb({coverColor.r},{coverColor.g},{coverColor.b}); \r\n      color: \r\n        rgb({coverTextColor.r},{coverTextColor.g},{coverTextColor.b});\"\r\n  >\r\n    <div id=\"coverNameBox\">\r\n      <h1>{yourName}</h1>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #cover {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    animation: remove-cover-up 0.35s;\r\n    animation-fill-mode: forwards;\r\n    animation-delay: 0.8s;\r\n    z-index: 995;\r\n  }\r\n  #coverNameBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n  #coverNameBox h1 {\r\n    font-size: 9vw;\r\n    font-weight: 500;\r\n    animation: title-disappear 0.35s;\r\n    animation-delay: 0.35s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 999;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n</style>\r\n","<script>\r\n  const onClickChromeTabs = (elem) => {\r\n    chrome.tabs.create({ url: `chrome://${elem}` });\r\n  };\r\n</script>\r\n\r\n<div id=\"browserQuickNavBox\">\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"History\" on:click={() => onClickChromeTabs(\"history\")}>\r\n    <i class=\"fas fa-history browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Downloads\" on:click={() => onClickChromeTabs(\"downloads\")}>\r\n    <i class=\"fas fa-download browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Bookmarks\" on:click={() => onClickChromeTabs(\"bookmarks\")}>\r\n    <i class=\"fas fa-bookmark browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Extensions\" on:click={() => onClickChromeTabs(\"extensions\")}>\r\n    <i class=\"fas fa-puzzle-piece browserQuickNavButton\" />\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  #browserQuickNavBox {\r\n    position: absolute;\r\n    left: 2vw;\r\n    z-index: 45;\r\n  }\r\n  .browserQuickNavButton {\r\n    color: rgba(220, 220, 220, 0.75);\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    padding: 5px 10px;\r\n    transition: 0.3s;\r\n  }\r\n  .browserQuickNavButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .browserQuickNavButton {\r\n      padding: 4px 7px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let clockBackground;\r\n  let clock24Hour;\r\n\r\n  userData.subscribe((data) => {\r\n    clockBackground = data.clockBackground;\r\n    clock24Hour = data.clock24Hour;\r\n  });\r\n\r\n  let time = new Date();\r\n  let auxHours = time.getHours();\r\n  if (!clock24Hour) {\r\n    auxHours = auxHours % 12;\r\n    if (auxHours === 0) auxHours = 12;\r\n  }\r\n  let hours = (\"0\" + auxHours).slice(-2);\r\n  let minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n  let ampm = time.getHours() >= 12 ? \"PM\" : \"AM\";\r\n\r\n  //Update time every second\r\n  setInterval(() => {\r\n    time = new Date();\r\n    auxHours = time.getHours();\r\n    if (!clock24Hour) {\r\n      auxHours = auxHours % 12;\r\n      if (auxHours === 0) auxHours = 12;\r\n    }\r\n    hours = (\"0\" + auxHours).slice(-2);\r\n    minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n    ampm = time.getHours() >= 12 ? \"PM\" : \"AM\";\r\n  }, 1000);\r\n</script>\r\n\r\n<!--Use clockbg class only if clockBackground is true-->\r\n<div id=\"time\" class:clockbg={clockBackground}>\r\n  {hours}:<span id=\"minutes\">{minutes}</span>\r\n  {#if !clock24Hour}\r\n    <span id=\"ampm\">{ampm}</span>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  #time {\r\n    position: absolute;\r\n    font-size: 3em;\r\n    right: 2vw;\r\n    color: white;\r\n    border-radius: 12px;\r\n    padding: 3px 5px;\r\n    line-height: 1.2em;\r\n  }\r\n  #minutes {\r\n    font-size: 0.7em;\r\n    color: rgb(236, 236, 236);\r\n  }\r\n  #ampm {\r\n    font-size: 0.4em;\r\n    font-weight: 600;\r\n    color: rgb(236, 236, 236);\r\n    line-height: 1em;\r\n  }\r\n  .clockbg {\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #time {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 600px) {\r\n    #time {\r\n      font-size: 2.2em;\r\n      line-height: 0.8em;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  let showGithub = false;\r\n\r\n  //innerWidth will get the window innerWidth\r\n  let innerWidth = 0;\r\n\r\n  setInterval(function () {\r\n    let chance = Math.floor(Math.random() * 200);\r\n\r\n    //Only show github logo if random chance matches\r\n    //and window width is bigger than 799 pixels\r\n    if (chance === 1 && innerWidth > 799) {\r\n      showGithub = true;\r\n    } else {\r\n      showGithub = false;\r\n    }\r\n  }, 15000);\r\n</script>\r\n\r\n<svelte:window bind:innerWidth />\r\n\r\n{#if showGithub}\r\n  <div id=\"randomGithub\">\r\n    <a href=\"https://github.com/KlibrDM\">\r\n      <i class=\"fab fa-github\" style=\"color: white\" />\r\n    </a>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #randomGithub {\r\n    position: absolute;\r\n    left: 2vw;\r\n    font-size: 3vw;\r\n    animation: wobble-hor-bottom 0.8s infinite;\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #randomGithub {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import Clock from \"./Clock.svelte\";\r\n  import RandomGithub from \"./RandomGithub.svelte\";\r\n  import { userData } from \"../../store\";\r\n  import { searchEngineList } from \"../../data/config\";\r\n\r\n  let searchQuery = \"\"; //Binded to input\r\n  let navbarOpacity;\r\n  let navbarColor;\r\n  let searchEngine;\r\n\r\n  userData.subscribe((data) => {\r\n    searchEngine = data.searchEngine;\r\n    navbarOpacity = data.navbarOpacity;\r\n    navbarColor = data.navbarColor;\r\n  });\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery !== \"\") {\r\n      const selectedSearchEngine = searchEngineList.find(\r\n        (item) => item.name === searchEngine\r\n      );\r\n\r\n      if (selectedSearchEngine) {\r\n        window.location.assign(\r\n          selectedSearchEngine.link + escapeHTML(searchQuery)\r\n        );\r\n      }\r\n      else {\r\n        // Fall back to google if search engine not found\r\n        window.location.assign(\r\n          \"https://www.google.com/search?q=\" + escapeHTML(searchQuery)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n</script>\r\n\r\n<div\r\n  id=\"searchbarBox\"\r\n  style=\"background-color: rgba({navbarColor.r},{navbarColor.g},{navbarColor.b},{navbarOpacity})\"\r\n>\r\n  <RandomGithub />\r\n  <form id=\"searchbar\" on:submit={handleSearch}>\r\n    <input\r\n      id=\"searchInput\"\r\n      type=\"search\"\r\n      autocomplete=\"off\"\r\n      placeholder=\"Search\"\r\n      bind:value={searchQuery}\r\n    />\r\n    <button id=\"searchButton\" aria-label=\"Search\">\r\n      <i class=\"fas fa-search\" style=\"color: white\" />\r\n    </button>\r\n  </form>\r\n  <Clock />\r\n</div>\r\n\r\n<style>\r\n  #searchbarBox {\r\n    flex-basis: 25%;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  #searchbar {\r\n    width: 50vw;\r\n    border-radius: 100px;\r\n    border: 2px solid;\r\n    border-color: rgba(0, 0, 0, 0.4);\r\n    display: flex;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n  }\r\n  #searchbar:hover {\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n  }\r\n  #searchInput {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: white;\r\n    text-indent: calc(8px + 0.8vw);\r\n    border: 0;\r\n    min-height: 40px;\r\n    height: 7vh;\r\n    min-width: 50px;\r\n    flex-grow: 1;\r\n    font-size: calc(8px + 1.4vh);\r\n  }\r\n  #searchInput::placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput::-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:focus {\r\n    outline: none;\r\n  }\r\n  #searchInput:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 30px white inset !important;\r\n    box-shadow: 0 0 0 30px white inset !important;\r\n    border-radius: 100px;\r\n  }\r\n  #searchButton {\r\n    padding-left: calc(8px + 0.8vw);\r\n    padding-right: calc(8px + 0.8vw);\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: calc(8px + 1vh);\r\n  }\r\n  #searchButton:focus {\r\n    border-radius: 100px;\r\n    outline: none !important;\r\n    outline-style: none;\r\n    box-shadow: none;\r\n    border-color: transparent;\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #searchbar {\r\n      width: 75vw;\r\n    }\r\n  }\r\n</style>\r\n","import { backgrounds } from \"./config\";\r\n\r\nexport const getBackgroundFormat = (bg) => {\r\n  const backgroundImageElem = backgrounds.find((background) => background.name === bg);\r\n  let backgroundImageFormat = \"avif\";\r\n  if(backgroundImageElem){\r\n    backgroundImageFormat = backgroundImageElem.format;\r\n  }\r\n  return backgroundImageFormat;\r\n}\r\n\r\nexport const toHex = (color) => {\r\n  let hex = \"#\" + ((1 << 24) + (color.r << 16) + (color.g << 8) + color.b).toString(16).slice(1);\r\n  return hex;\r\n};\r\n\r\nexport const toRGB = (hex) => {\r\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n};\r\n\r\nexport const clearOldExtension = (fileName) => {\r\n  if(fileName.lastIndexOf(\".jpg\") !== -1){\r\n    return fileName.slice(0, fileName.lastIndexOf(\".jpg\"));\r\n  }\r\n  else{\r\n    return fileName;\r\n  }\r\n}\r\n","<script>\r\n  import { getTileImage } from \"../data/storage\";\r\n  import { clearOldExtension } from \"../data/tools\";\r\n  import { userData } from \"../store\";\r\n\r\n  let pages = [];\r\n  let tileZoom;\r\n  let tileGrow;\r\n  let tileMinWidth;\r\n  let tileHeight;\r\n  let tileGap;\r\n  let tileBorder;\r\n  let tileBorderRadius;\r\n  let tileBorderColor;\r\n  let groupTileGap;\r\n  let groupTileBorderRadius;\r\n  let groupTileGrow;\r\n\r\n  userData.subscribe((data) => {\r\n    pages = data.pages;\r\n    tileZoom = data.tileZoom;\r\n    tileGrow = data.tileGrow;\r\n    tileMinWidth = data.tileMinWidth;\r\n    tileHeight = data.tileHeight;\r\n    tileGap = data.tileGap;\r\n    tileBorder = data.tileBorder;\r\n    tileBorderRadius = data.tileBorderRadius;\r\n    tileBorderColor = data.tileBorderColor;\r\n    groupTileGap = data.groupTileGap;\r\n    groupTileBorderRadius = data.groupTileBorderRadius;\r\n    groupTileGrow = data.groupTileGrow;\r\n  });\r\n</script>\r\n\r\n<!--This will show the pages!!!-->\r\n<div class=\"speedDial\">\r\n  <div class=\"speedDialBox\">\r\n    <div class=\"buttons\" style=\"gap: {tileGap}vh\">\r\n      {#each pages as page}\r\n        {#if page.isActive}\r\n          {#if !page.isGroup}\r\n\r\n            <!-- svelte-ignore a11y-missing-content -->\r\n            <a\r\n              href={page.link}\r\n              class=\"pageButton\"\r\n              aria-label={page.link}\r\n              style=\"{\r\n                  page.tileImageType === 'custom' && getTileImage(page.link)\r\n                  ? 'background-image: url(' + (getTileImage(page.link) || '') + ')'\r\n                  : page.tileImageType !== 'none'\r\n                    ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(page.imageName) + '.avif\")'\r\n                    : ''\r\n                };\r\n                background-color: {page.backgroundColor};\r\n                color: {page.textColor};\r\n                font-size: {tileMinWidth / (page.tileName.length * 0.8 <= 1.8 ? 1.8 : page.tileName.length * 0.8)}vh;\r\n                flex-grow: {tileGrow ? 1 : 0};\r\n                min-width: {tileMinWidth}vh;\r\n                height: {tileHeight}vh;\r\n                border: {tileBorder}px solid rgb({tileBorderColor.r},{tileBorderColor.g},{tileBorderColor.b});\r\n                border-radius: {tileBorderRadius}vh;\r\n                {tileHeight < tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n                {!tileZoom ? \"animation: none !important\" : ''}\r\n                \"\r\n            >\r\n              {page.tileImageType === 'none' ? page.tileName : ''}\r\n            </a>\r\n\r\n          {:else if page.isGroup && page.pages.length > 0}\r\n\r\n            <div class=\"pageGroup\" style=\"\r\n              gap: {groupTileGap}vh;\r\n              flex-grow: {tileGrow ? 1 : 0};\r\n              min-width: {tileMinWidth}vh;\r\n              height: {tileHeight}vh;\r\n              {!groupTileGrow ? 'display: grid;' : 'display: flex; flex-wrap: wrap;'}\r\n              {!groupTileGrow ? `\r\n                grid-template-columns: ${\r\n                tileMinWidth < tileHeight\r\n                  ? page.pages.length <= 2\r\n                    ? \"1fr\"\r\n                    : page.pages.length <= 6\r\n                      ? \"1fr 1fr\"\r\n                      : page.pages.length <= 12\r\n                        ? \"1fr 1fr 1fr\"\r\n                        : \"1fr 1fr 1fr 1fr\"\r\n                  : page.pages.length === 1\r\n                    ? \"1fr\"\r\n                    : page.pages.length === 2 && tileMinWidth - tileHeight < tileMinWidth / 4\r\n                      ? \"1fr\"\r\n                      : page.pages.length <= 3\r\n                        ? \"1fr 1fr\"\r\n                        : page.pages.length <= 9\r\n                          ? \"1fr 1fr 1fr\"\r\n                          : page.pages.length <= 12\r\n                            ? \"1fr 1fr 1fr 1fr\"\r\n                            : \"1fr 1fr 1fr 1fr 1fr\"\r\n                };\r\n              ` : ''}\r\n            \">\r\n              {#each page.pages as subpage}\r\n                {#if subpage.isActive}\r\n                  <a\r\n                    href={subpage.link}\r\n                    class=\"pageButton\"\r\n                    aria-label={subpage.link}\r\n                    style=\"{\r\n                        subpage.tileImageType === 'custom' && getTileImage(subpage.link)\r\n                        ? 'background-image: url(' + (getTileImage(subpage.link) || '') + ')'\r\n                        : subpage.tileImageType !== 'none'\r\n                          ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(subpage.imageName) + '.avif\")'\r\n                          : ''\r\n                      };\r\n                      background-color: {subpage.backgroundColor};\r\n                      color: {subpage.textColor};\r\n                      font-size: {\r\n                        tileMinWidth\r\n                        / (subpage.tileName.length * 0.8 <= 1.8 ? 1.8 : subpage.tileName.length * 0.8)\r\n                        / (\r\n                          page.pages.length <= 2\r\n                          ? 1.5\r\n                          : page.pages.length <= 9\r\n                            ? 2.5\r\n                            : page.pages.length <= 12\r\n                              ? 3.2\r\n                              : 4.2\r\n                        )\r\n                      }vh;\r\n                      border: {tileBorder}px solid rgb({tileBorderColor.r},{tileBorderColor.g},{tileBorderColor.b});\r\n                      border-radius: {groupTileBorderRadius}vh;\r\n                      min-width: 40px;\r\n                      {tileHeight < tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n                      {!tileZoom ? \"animation: none !important\" : ''}\r\n                      {groupTileGrow ? `\r\n                        flex-grow: 1;\r\n                        flex-basis: ${\r\n                          tileMinWidth < tileHeight\r\n                          ? page.pages.length <= 2\r\n                            ? \"100%\"\r\n                            : page.pages.length <= 6\r\n                              ? \"40%\"\r\n                              : page.pages.length <= 12\r\n                                ? \"28%\"\r\n                                : \"21%\"\r\n                          : page.pages.length === 2 && tileMinWidth - tileHeight < tileMinWidth / 4\r\n                            ? \"100%\"\r\n                            : page.pages.length <= 3\r\n                              ? \"40%\"\r\n                              : page.pages.length <= 9\r\n                                ? \"28%\"\r\n                                : page.pages.length <= 12\r\n                                  ? \"21%\"\r\n                                  : \"15%\"\r\n                        };\r\n                      ` : ''}\r\n                  \">\r\n                    {subpage.tileImageType === 'none' ? subpage.tileName : ''}\r\n                  </a>\r\n                {/if}\r\n              {/each}\r\n            </div>\r\n\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .speedDialBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n    overflow-x: hidden;\r\n    padding-top: 2em;\r\n    padding-bottom: 2em;\r\n    box-sizing: border-box;\r\n  }\r\n  .buttons {\r\n    width: 75vw;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 0px;\r\n  }\r\n  .pageButton {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    min-width: 180px;\r\n    background-position: center;\r\n    background-size: cover;\r\n    z-index: 0;\r\n    flex-basis: 0;\r\n    line-height: 0;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  .pageButton:hover {\r\n    animation: pop-out 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 2;\r\n  }\r\n  .pageButton:not(:hover) {\r\n    animation: pop-back 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 1;\r\n    transition: z-index 0.25s;\r\n  }\r\n  .pageGroup {\r\n    flex-basis: 0;\r\n    line-height: 0;\r\n  }\r\n</style>\r\n","<script>\r\n  import { toHex, toRGB } from \"../../data/tools\";\r\n\r\n  export let settingsData;\r\n  export let saveSettings;\r\n  export let resetVisuals;\r\n  export let unsavedSettings;\r\n\r\n  // Keep dark mode separate and apply only when saving\r\n  let darkMode = settingsData.darkMode;\r\n\r\n  let tileBorderColor = toHex(settingsData.tileBorderColor);\r\n  let navbarColor = toHex(settingsData.navbarColor);\r\n  let coverColor = toHex(settingsData.coverColor);\r\n  let coverTextColor = toHex(settingsData.coverTextColor);\r\n\r\n  const resetLocalVisuals = () => {\r\n    darkMode = settingsData.darkMode;\r\n    tileBorderColor = toHex(settingsData.tileBorderColor);\r\n    navbarColor = toHex(settingsData.navbarColor);\r\n    coverColor = toHex(settingsData.coverColor);\r\n    coverTextColor = toHex(settingsData.coverTextColor);\r\n  }\r\n</script>\r\n\r\n<h2>Visuals</h2>\r\n<form\r\n  id=\"settingsForm\"\r\n  on:submit={(e) => {\r\n    //Convert colors from HEX to RGB\r\n    settingsData.tileBorderColor = toRGB(tileBorderColor);\r\n    settingsData.navbarColor = toRGB(navbarColor);\r\n    settingsData.coverColor = toRGB(coverColor);\r\n    settingsData.coverTextColor = toRGB(coverTextColor);\r\n\r\n    settingsData.darkMode = darkMode;\r\n\r\n    saveSettings(settingsData, e);\r\n    unsavedSettings = false;\r\n  }}\r\n>\r\n  <div class=\"settingsFormGroup\" class:darkModifier={settingsData.darkMode}>\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_your_name.png\" alt=\"Set your name\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_yourName\">Your name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"set_yourName\"\r\n          name=\"set_yourName\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={settingsData.yourName}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_show_cover.png\" alt=\"Set show cover\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_showCover\">Show cover</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_showCover\"\r\n          name=\"set_showCover\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.showCover}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_clock_background.png\" alt=\"Set clock background\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_clockBackground\">Clock background</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_clockBackground\"\r\n          name=\"set_clockBackground\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.clockBackground}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_clock_24_hour.png\" alt=\"Set 24 hour clock\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_clock24Hour\">24 hour clock</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_clock24Hour\"\r\n          name=\"set_clock24Hour\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.clock24Hour}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_dark_mode.png\" alt=\"Set dark panels\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_darkMode\">Dark panels</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_darkMode\"\r\n          name=\"set_darkMode\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={darkMode}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_zoom.png\" alt=\"Set tile zoom on hover\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileZoom\">Tile zoom on hover</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_tileZoom\"\r\n          name=\"set_tileZoom\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.tileZoom}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_fill_space.png\" alt=\"Set tile fill space\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileGrow\">Tile fill space</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_tileGrow\"\r\n          name=\"set_tileGrow\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.tileGrow}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_minimum_width.png\" alt=\"Set tile minimum width\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileMinimumWidth\">Tile minimum width</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"150\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileMinWidth}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"10\"\r\n            max=\"150\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileMinimumWidth\"\r\n            name=\"set_tileMinimumWidth\"\r\n            bind:value={settingsData.tileMinWidth}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_height.png\" alt=\"Set tile height\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileHeight\">Tile height</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"5\"\r\n            max=\"80\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileHeight}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"5\"\r\n            max=\"80\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileHeight\"\r\n            name=\"set_tileHeight\"\r\n            bind:value={settingsData.tileHeight}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_gap.png\" alt=\"Set tile gap\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileGap\">Tile gap</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileGap\"\r\n            name=\"set_tileGap\"\r\n            bind:value={settingsData.tileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border_radius.png\" alt=\"Set tile border radius\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorderRadius\">Tile border radius</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileBorderRadius\"\r\n            name=\"set_tileBorderRadius\"\r\n            bind:value={settingsData.tileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border.png\" alt=\"Set tile border\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorder\">Tile border size</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileBorder}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileBorder\"\r\n            name=\"set_tileBorder\"\r\n            bind:value={settingsData.tileBorder}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border_color.png\" alt=\"Set tile border color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorderColor\">Tile border color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_tileBorderColor\"\r\n          name=\"set_tileBorderColor\"\r\n          bind:value={tileBorderColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_fill_space.png\" alt=\"Set group tile fill space\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileGrow\">Group tile fill space</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_groupTileGrow\"\r\n          name=\"set_groupTileGrow\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.groupTileGrow}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_gap.png\" alt=\"Set group tile gap\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileGap\">Group tile gap</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.groupTileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_groupTileGap\"\r\n            name=\"set_groupTileGap\"\r\n            bind:value={settingsData.groupTileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_border_radius.png\" alt=\"Set group tile border radius\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileBorderRadius\">Group tile border radius</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.groupTileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_groupTileBorderRadius\"\r\n            name=\"set_groupTileBorderRadius\"\r\n            bind:value={settingsData.groupTileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_navbar_opacity.png\" alt=\"Set navbar opacity\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_navbarOpacity\">Navbar opacity</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.navbarOpacity}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_navbarOpacity\"\r\n            name=\"set_navbarOpacity\"\r\n            bind:value={settingsData.navbarOpacity}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_navbar_color.png\" alt=\"Set navbar color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_navbarColor\">Navbar color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_navbarColor\"\r\n          name=\"set_navbarColor\"\r\n          bind:value={navbarColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_cover_color.png\" alt=\"Set cover color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_coverColor\">Cover color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_coverColor\"\r\n          name=\"set_coverColor\"\r\n          bind:value={coverColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_cover_text_color.png\" alt=\"Set cover text color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_coverTextColor\">Cover text color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_coverTextColor\"\r\n          name=\"set_coverTextColor\"\r\n          bind:value={coverTextColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"settingBottomSection\">\r\n    <div class=\"settingsButtonWithError\">\r\n      <button type=\"submit\" class=\"saveSettingsButton\">Save</button>\r\n\r\n      {#if unsavedSettings}\r\n        <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n      {/if}\r\n    </div>\r\n\r\n    <div class=\"settingsResetButton\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"resetSettingsButton\"\r\n        on:click={() => {\r\n          resetVisuals();\r\n          resetLocalVisuals();\r\n          unsavedSettings = false;\r\n        }}\r\n      >\r\n        Reset to default settings\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  hr {\r\n    width: 90%;\r\n    border: 0;\r\n    border-top: 1px solid lightgray;\r\n  }\r\n  .settingsFormGroup.darkModifier hr {\r\n    border-color: #3a99ff;\r\n  }\r\n  #settingsForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsFormGroup {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 15px;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsInput {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border: 1px solid lightgray;\r\n    border-radius: 15px;\r\n    flex-grow: 1;\r\n    max-width: 500px;\r\n    flex-basis: 24%;\r\n  }\r\n  .settingsFormGroup.darkModifier .settingsInput {\r\n    border-color: #3a99ff;\r\n  }\r\n  .imagePlaceholder {\r\n    width: 250px;\r\n    min-height: 125px;\r\n  }\r\n  .settingsInput img {\r\n    width: 250px;\r\n    display: block;\r\n  }\r\n  .settingsInputGroup {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0px 15px 10px 15px;\r\n    width: calc(100% - 30px);\r\n  }\r\n  .settingsInput label {\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n  }\r\n  .settingsInput input:out-of-range {\r\n    background-color: rgba(255, 0, 0, 0.15);\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    max-width: 120px;\r\n  }\r\n  .settingsNumberInput {\r\n    padding: 3px 5px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    width: 40px;\r\n  }\r\n  .settingsNumberSliderGroup {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    gap: 5px;\r\n  }\r\n  .settingsSlider {\r\n    width: 50px;\r\n    flex-grow: 1;\r\n  }\r\n  .settingsSlider::-webkit-slider-thumb {\r\n    cursor: pointer;\r\n  }\r\n  .settingsCheckbox {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n  .settingsColorInput {\r\n    padding: 1px 3px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .settingsColorInput:hover {\r\n    background-color: rgb(225, 225, 225);\r\n  }\r\n  .settingBottomSection{\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .settingsButtonWithError {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .resetSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: #000;\r\n    background-color: #fff;\r\n    transition: 0.3s;\r\n  }\r\n  .resetSettingsButton:hover {\r\n    background-color: #f3f3f3;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n</style>\r\n","<script>\r\n  export let changeBackground;\r\n  let bg, fileinput;\r\n\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      changeBackground(bg);\r\n    };\r\n  };\r\n</script>\r\n\r\n<div id=\"customBackgrounds\">\r\n  <h4>Custom background image</h4>\r\n  <button\r\n    class=\"chan\"\r\n    on:click={() => {\r\n      fileinput.click();\r\n    }}\r\n  >\r\n    Upload image\r\n  </button>\r\n  <input\r\n    style=\"display:none\"\r\n    type=\"file\"\r\n    accept=\".jpg, .jpeg, .png, .webp, .avif\"\r\n    on:change={(e) => onFileSelected(e)}\r\n    bind:this={fileinput}\r\n  />\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  button {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  button:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { backgrounds, sourceDetails } from \"../../data/config\";\r\n  import { getBackgroundFormat } from \"../../data/tools\";\r\n  import CustomBackgrounds from \"./CustomBackgrounds.svelte\";\r\n\r\n  export let changeBackground;\r\n  export let changeBackgroundColor;\r\n\r\n  let backgroundImage;\r\n  let savedBackgroundSolidColor;\r\n  let newBackgroundSolidColor;\r\n  let isBackgroundSolid;\r\n  let backgroundSolidColorChanged = false;\r\n  let backgroundSources = new Set();\r\n\r\n  //Add sources to set\r\n  backgrounds.forEach((bg) => {\r\n    if(sourceDetails.get(bg.source)){\r\n      backgroundSources.add(sourceDetails.get(bg.source));\r\n    }\r\n  });\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    savedBackgroundSolidColor = data.backgroundSolidColor;\r\n    newBackgroundSolidColor = data.backgroundSolidColor;\r\n    isBackgroundSolid = data.isBackgroundSolid;\r\n  });\r\n\r\n  $: backgroundImageUrl = \"static/images/bg/thumbnails/\" + backgroundImage + \".\" + getBackgroundFormat(backgroundImage);\r\n</script>\r\n\r\n<h2>Background</h2>\r\n<div id=\"currentBackgroundImageContainer\">\r\n  <h4>Current background image</h4>\r\n  <div\r\n    id=\"currentBackgroundImage\"\r\n    style={ isBackgroundSolid\r\n    ? \"border: 1px solid lightgray; background-color: \" + savedBackgroundSolidColor + \";\"\r\n    : \"\" }\r\n  >\r\n    {#if !isBackgroundSolid}\r\n    <img\r\n      src=\"{backgroundImage.length > 5 ? backgroundImage : backgroundImageUrl}\"\r\n      alt=\"Current background\"\r\n    />\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"customBackgroundsContainer\">\r\n  <CustomBackgrounds {changeBackground} />\r\n  <div>\r\n    <h4>Custom background color</h4>\r\n    <div id=\"customBackgroundColorGroup\">\r\n      <input\r\n        type=\"color\"\r\n        class=\"settingsBackgroundColorInput\"\r\n        id=\"set_backgroundColor\"\r\n        name=\"set_backgroundColor\"\r\n        bind:value={newBackgroundSolidColor}\r\n        on:input={() => {\r\n          backgroundSolidColorChanged = true;\r\n        }}\r\n      />\r\n      {#if backgroundSolidColorChanged || !isBackgroundSolid}\r\n        <button\r\n          class=\"settingsBackgroundColorButton\"\r\n          on:click={() => {\r\n            backgroundSolidColorChanged = false;\r\n            changeBackgroundColor(newBackgroundSolidColor);\r\n          }}>\r\n          Apply\r\n        </button>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<h2>Gallery</h2>\r\n{#each [...backgroundSources] as source}\r\n  <small>\r\n    Background images provided by <a href=\"{source.url}\">{source.label}</a>\r\n  </small>\r\n  <div class=\"settingsBackgrounds\">\r\n    {#each backgrounds as bg, index}\r\n      {#if bg.source === source.name}\r\n        <div class=\"backgroundImageSelectorPlaceholder\">\r\n          <img\r\n            src=\"static/images/bg/thumbnails/{bg.name}.{bg.format}\"\r\n            alt=\"Background {index + 1}\"\r\n            class=\"backgroundImageSelector\"\r\n            on:click={() => changeBackground(bg.name)}\r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n{/each}\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  #currentBackgroundImageContainer img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    display: block;\r\n  }\r\n  #currentBackgroundImage {\r\n    width: 200px;\r\n    min-height: 125px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n  }\r\n  #customBackgroundsContainer {\r\n    display: flex;\r\n    gap: 5vw;\r\n  }\r\n  #customBackgroundColorGroup {\r\n    display: flex;\r\n    gap: 5px;\r\n  }\r\n  .settingsBackgroundColorInput {\r\n    margin-top: 8px;\r\n    width: 120px;\r\n    height: 32px;\r\n    padding: 4px 10px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsBackgroundColorButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .settingsBackgrounds {\r\n    display: flex;\r\n    gap: 3px;\r\n    padding: 15px;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 10px;\r\n  }\r\n  .backgroundImageSelectorPlaceholder {\r\n    width: 180px;\r\n    min-height: 115px;\r\n    max-width: 220px;\r\n    flex-grow: 1;\r\n  }\r\n  .backgroundImageSelector {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    display: block;\r\n  }\r\n  .backgroundImageSelector:hover {\r\n    filter: drop-shadow(0px 0px 2px rgb(80, 80, 80));\r\n    transform: scale(1.1);\r\n    z-index: 2;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #customBackgroundsContainer {\r\n      flex-direction: column;\r\n      gap: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { getTileImage, saveTileImage } from \"../../data/storage\";\r\n  import { clearOldExtension } from \"../../data/tools\";\r\n\r\n  export let page;\r\n  export let settingsData;\r\n  export let unsavedPages;\r\n  export let modalActive = false;\r\n\r\n  let bg, fileinput;\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      try {\r\n        saveTileImage(page.link, bg);\r\n        page.tileImageType = \"custom\";\r\n        unsavedPages = true;\r\n      } catch {\r\n        alert(\r\n          \"Tile image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n        );\r\n      }\r\n    };\r\n  };\r\n</script>\r\n\r\n<div id=\"settingsPageImageTypeModalContainer\" on:click={(e) => { e.stopImmediatePropagation(); modalActive = false; }}>\r\n  <div id=\"settingsPageImageTypeModal\" class:darkModifier={settingsData.darkMode} on:click={(e) => { e.stopImmediatePropagation() }}>\r\n    <div id=\"imageTypeButtonGroup\">\r\n      <h4>Tile image type</h4>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'predefined' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'predefined'; unsavedPages = true; }}\r\n      >\r\n        Predefined\r\n      </button>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'custom' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'custom'; unsavedPages = true; }}\r\n      >\r\n        Custom\r\n      </button>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'none' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'none'; unsavedPages = true; }}\r\n      >\r\n        Text\r\n      </button>\r\n    </div>\r\n\r\n    {#if page.tileImageType === 'custom' }\r\n      <div id=\"customImage\">\r\n        <h4>Custom background image</h4>\r\n        <button\r\n          class=\"customImageButton\"\r\n          on:click={() => {\r\n            fileinput.click();\r\n          }}\r\n        >\r\n          Upload image\r\n        </button>\r\n        <input\r\n          style=\"display:none\"\r\n          type=\"file\"\r\n          accept=\".jpg, .jpeg, .png, .webp, .avif\"\r\n          on:change={(e) => onFileSelected(e)}\r\n          bind:this={fileinput}\r\n        />\r\n      </div>\r\n    {/if}\r\n\r\n    {#if page.tileImageType === 'none' }\r\n      <div id=\"solidBackgroundSettings\">\r\n        <h4>Settings</h4>\r\n        <p>Tile name</p>\r\n        <input\r\n          type=\"text\"\r\n          id=\"set_pageTileName\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.tileName}\r\n          on:change={() => { unsavedPages = true; }}\r\n          placeholder=\"Page tile text\"\r\n          maxlength=\"20\"\r\n          required={true}\r\n        />\r\n        <p>Background color</p>\r\n        <input\r\n          type=\"color\"\r\n          id=\"set_pageBackgroundColor\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.backgroundColor}\r\n          on:change={() => { unsavedPages = true; }}\r\n          required={true}\r\n        />\r\n        <p>Text color</p>\r\n        <input\r\n          type=\"color\"\r\n          id=\"set_pageTextColor\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.textColor}\r\n          on:change={() => { unsavedPages = true; }}\r\n          required={true}\r\n        />\r\n      </div>\r\n    {/if}\r\n\r\n    <h4>Preview</h4>\r\n    <div\r\n      id=\"tilePreview\"\r\n      style=\"\r\n        {\r\n          page.tileImageType === 'custom' && getTileImage(page.link)\r\n          ? 'background-image: url(' + (getTileImage(page.link) || '') + ')'\r\n          : page.tileImageType !== 'none'\r\n            ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(page.imageName) + '.avif\")'\r\n            : ''\r\n        };\r\n        background-color: {page.backgroundColor};\r\n        color: {page.textColor};\r\n        font-size: {settingsData.tileMinWidth / (page.tileName.length * 0.8 <= 1.8 ? 1.8 : page.tileName.length * 0.8)}vh;\r\n        width: {settingsData.tileMinWidth}vh;\r\n        height: {settingsData.tileHeight}vh;\r\n        border: {settingsData.tileBorder}px solid rgb({settingsData.tileBorderColor.r},{settingsData.tileBorderColor.g},{settingsData.tileBorderColor.b});\r\n        border-radius: {settingsData.tileBorderRadius}vh;\r\n        {settingsData.tileHeight < settingsData.tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n        {!settingsData.tileZoom ? \"animation: none !important\" : ''}\r\n      \"\r\n    >\r\n      {page.tileImageType === 'none' ? page.tileName : ''}\r\n    </div>\r\n    <div id=\"returnButtonContainer\">\r\n      <button\r\n        id=\"returnButton\"\r\n        on:click={(e) => { e.stopImmediatePropagation(); modalActive = false }}>\r\n        Return\r\n      </button>\r\n      {#if unsavedPages}\r\n        <small>After closing this window do not forget to save your changes.</small>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  #settingsPageImageTypeModalContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #settingsPageImageTypeModal {\r\n    width: 600px;\r\n    background-color: #fff;\r\n    padding: 40px;\r\n    border-radius: 10px;\r\n  }\r\n  #settingsPageImageTypeModal.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n  }\r\n  .imageTypeButton {\r\n    padding: 8px 20px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: white;\r\n    border: 1px solid #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .buttonSelected {\r\n    background-color: #3a99ff !important;\r\n    color: white !important;\r\n  }\r\n  #settingsPageImageTypeModal.darkModifier .imageTypeButton {\r\n    color: white;\r\n    background-color: transparent;\r\n  }\r\n  #tilePreview {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    min-width: 40px;\r\n    background-position: center;\r\n    background-size: cover;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  #returnButtonContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    margin-top: 16px;\r\n  }\r\n  #returnButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  #returnButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  .customImageButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .customImageButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  #solidBackgroundSettings p {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n</style>\r\n","<script>\r\n  import PagesImageModal from \"./PagesImageModal.svelte\";\r\n\r\n  export let group;\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let movePage;\r\n  export let getImageNameFor;\r\n  export let checkWebsite;\r\n  export let escapeHTML;\r\n  export let unsavedPages;\r\n  let addPageInput = \"\"; //Binded to input\r\n\r\n  let allowDrag = false; // Allow drag and drop only when the mouse is over the drag handle\r\n  let draggedItem = undefined;\r\n  let draggedItemIndex = undefined;\r\n  let draggedOverIndex = undefined;\r\n\r\n  // Tile image modal\r\n  let imageModalActive = false;\r\n  let selectedImageIndex = -1;\r\n\r\n  // Group modal\r\n  export let modalActive = false;\r\n\r\n  const handleDragEnd = (index) => {\r\n    // If the dragged item is dropped on itself, return early\r\n    if (index === draggedOverIndex) {\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (draggedItemIndex !== undefined) {\r\n      // Remove the dragged item from the list\r\n      group.pages.splice(draggedItemIndex, 1);\r\n\r\n      // Insert the dragged item at the new position\r\n      group.pages.splice(draggedOverIndex, 0, draggedItem);\r\n\r\n      group.pages = [...group.pages];\r\n      unsavedPages = true;\r\n\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n    }\r\n  }\r\n</script>\r\n\r\n<div id=\"settingsPageGroupModalContainer\" on:click={() => { modalActive = false; }}>\r\n  <div id=\"settingsPageGroupModal\" class:darkModifier={settingsData.darkMode} on:click={(e) => { e.stopImmediatePropagation() }}>\r\n    <h3>{group.name}</h3>\r\n\r\n    {#if group.pages.length === 0}\r\n      <small>No pages in this group</small>\r\n    {/if}\r\n\r\n    <div id=\"settingsPagesList\">\r\n      {#each group.pages as page, index}\r\n        <div\r\n          class=\"settingsPagesListPageContainer\"\r\n          draggable={allowDrag}\r\n          on:dragstart={() => { draggedItem = page; draggedItemIndex = index; }}\r\n          on:dragend={() => handleDragEnd(index)}\r\n          on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n          on:dragenter={(e) => { e.preventDefault(); }}\r\n        >\r\n          <div\r\n            class=\"settingsPagesListPage\"\r\n            style=\"\r\n              border-color: {index === draggedItemIndex ? 'red' : index === draggedOverIndex ? '#3a99ff' : 'lightgray'};\r\n              background: {\r\n                index === draggedItemIndex ? 'linear-gradient(to right, red, transparent 50px)' :\r\n                index === draggedOverIndex ?\r\n                  draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                  'linear-gradient(135deg, #3a99ff, transparent 40px)' :\r\n                  'linear-gradient(45deg, #3a99ff, transparent 40px)' :\r\n                'unset'\r\n              };\r\n            \"\r\n          >\r\n            <div class=\"settingsPagesGroupLeft\">\r\n              <div class=\"settingsDragHandle\"\r\n                on:focus={() => { allowDrag = true; }}\r\n                on:mouseover={() => { allowDrag = true; }}\r\n                on:mouseleave={() => { allowDrag = false; }}\r\n              >\r\n                <i class=\"fa-solid fa-grip-vertical\" />\r\n              </div>\r\n              <div class=\"settingsPagesMoveButtons\">\r\n                <button\r\n                  on:click={() => {\r\n                    movePage(group.pages, index, \"up\");\r\n                    unsavedPages = true;\r\n                  }}\r\n                >\r\n                  <i class=\"fa-solid fa-angle-up\" />\r\n                </button>\r\n                <button\r\n                  on:click={() => {\r\n                    movePage(group.pages, index, \"down\");\r\n                    unsavedPages = true;\r\n                  }}\r\n                >\r\n                  <i class=\"fa-solid fa-angle-down\" />\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newLinkBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.link}\r\n                placeholder=\"Type the address of the page\"\r\n                maxlength=\"500\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.link = escapeHTML(checkWebsite(page.link));\r\n                  page.imageName = getImageNameFor(page.link);\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }}\r\n              />\r\n            </div>\r\n            <div class=\"settingsPageListButtons\">\r\n              <i on:click={() => { imageModalActive = true; selectedImageIndex = index; }} class=\"fa-solid fa-image pointer\" />\r\n              <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} on:change={() => {unsavedPages = true}} />\r\n              <input\r\n                on:click={() => {\r\n                  deletePage(group.pages, index);\r\n                  unsavedPages = true;\r\n                }}\r\n                type=\"button\"\r\n                class=\"pageDeleteButton\"\r\n                value=\"X\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  \r\n    {#if group.pages.length < 40}\r\n      <div id=\"settingsPageOptions\">\r\n        <h4>Add new page</h4>\r\n        <form\r\n          class=\"settingsPageInput\"\r\n          on:submit={(e) => {\r\n            addPage(group.pages, addPageInput, e);\r\n    \r\n            //Clear page input after adding it\r\n            addPageInput = \"\";\r\n    \r\n            unsavedPages = true;\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            id=\"set_newPageBox\"\r\n            class=\"settingsTextInput\"\r\n            bind:value={addPageInput}\r\n            placeholder=\"Type the address of the page\"\r\n            maxlength=\"500\"\r\n            required={true}\r\n          />\r\n          <button type=\"submit\" class=\"addPageButton\">Add</button>\r\n        </form>\r\n      </div>\r\n    {:else}\r\n      <small class=\"settingsPageInputWarning\">Maximum number of pages in a group reached.</small>\r\n    {/if}\r\n\r\n    <div id=\"returnButtonContainer\">\r\n      <button\r\n        id=\"returnButton\"\r\n        on:click={(e) => { e.stopImmediatePropagation(); modalActive = false }}>\r\n        Return\r\n      </button>\r\n      {#if unsavedPages}\r\n        <small>After closing this window do not forget to save your changes.</small>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n\r\n  {#if imageModalActive}\r\n    <PagesImageModal\r\n      settingsData={settingsData}\r\n      page={group.pages[selectedImageIndex]}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={imageModalActive}\r\n    />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  h3 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.8em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .pointer {\r\n    cursor: pointer;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsTextInput {\r\n    color: white;\r\n    outline: none;\r\n    border-color: #3a99ff;\r\n  }\r\n  .addPageButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .addPageButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    height: calc(100% - 180px);\r\n  }\r\n  .settingsPagesListPageContainer:not(:first-child) {\r\n    padding-top: 3px;\r\n  }\r\n  .settingsPagesListPageContainer:not(:last-child) {\r\n    padding-bottom: 2px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsPagesListPage {\r\n    border-color: #3a99ff !important;\r\n  }\r\n  .settingsDragHandle {\r\n    margin-left: 4px;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-grow: 1;\r\n    padding-right: 8px;\r\n  }\r\n  .settingsPageLinkInput {\r\n    width: 100%;\r\n    border: 0;\r\n    overflow-wrap: anywhere;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsPageLinkInput {\r\n    color: white;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    font-size: 10px;\r\n    padding: 3px 5px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsPagesMoveButtons button:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n    font-size: 1.1em;\r\n  }\r\n  .settingsPageInputWarning {\r\n    display: block;\r\n    margin-top: 12px;\r\n    margin-bottom: 55px;\r\n  }\r\n  #settingsPageGroupModalContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #settingsPageGroupModal {\r\n    width: 600px;\r\n    max-height: 70vh;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    padding: 40px;\r\n    border-radius: 10px;\r\n  }\r\n  #settingsPageGroupModal.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n  }\r\n  #returnButtonContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    margin-top: 16px;\r\n  }\r\n  #returnButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  #returnButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import PagesGroupModal from \"./PagesGroupModal.svelte\";\r\n  import PagesImageModal from \"./PagesImageModal.svelte\";\r\n\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let saveSettings;\r\n  export let movePage;\r\n  export let getImageNameFor;\r\n  export let checkWebsite;\r\n  export let escapeHTML;\r\n  export let unsavedPages;\r\n  export let createGroup;\r\n\r\n  let addPageInput = \"\"; //Binded to input\r\n  let allowDrag = false; // Allow drag and drop only when the mouse is over the drag handle\r\n  let draggedItem = undefined;\r\n  let draggedItemIndex = undefined;\r\n  let draggedOverIndex = undefined;\r\n\r\n  // Tile image modal\r\n  let imageModalActive = false;\r\n  let selectedIndex = -1;\r\n\r\n  // Group modal\r\n  let groupModalActive = false;\r\n  let selectedGroupIndex = -1;\r\n\r\n  const handleDragEnd = (index) => {\r\n    // If the dragged item is dropped on itself, return early\r\n    if (index === draggedOverIndex) {\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (draggedItemIndex !== undefined) {\r\n      // Remove the dragged item from the list\r\n      settingsData.pages.splice(draggedItemIndex, 1);\r\n\r\n      // Insert the dragged item at the new position\r\n      settingsData.pages.splice(draggedOverIndex, 0, draggedItem);\r\n\r\n      settingsData.pages = [...settingsData.pages];\r\n      unsavedPages = true;\r\n\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n    }\r\n  }\r\n</script>\r\n\r\n<h2>Pages</h2>\r\n<div id=\"settingsPages\" class:darkModifier={settingsData.darkMode}>\r\n  <div id=\"settingsPagesList\">\r\n    {#each settingsData.pages as page, index}\r\n      <div\r\n        class=\"settingsPagesListPageContainer\"\r\n        draggable={allowDrag}\r\n        on:dragstart={() => { draggedItem = page; draggedItemIndex = index; }}\r\n        on:dragend={() => handleDragEnd(index)}\r\n        on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n        on:dragenter={(e) => { e.preventDefault(); }}\r\n      >\r\n        <div\r\n          class=\"settingsPagesListPage\"\r\n          style=\"\r\n            border-color: {index === draggedItemIndex ? 'red' : index === draggedOverIndex ? '#3a99ff' : 'lightgray'};\r\n            background: {\r\n              index === draggedItemIndex ? 'linear-gradient(to right, red, transparent 50px)' :\r\n              index === draggedOverIndex ?\r\n                draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                'linear-gradient(135deg, #3a99ff, transparent 40px)' :\r\n                'linear-gradient(45deg, #3a99ff, transparent 40px)' :\r\n              'unset'\r\n            };\r\n          \"\r\n        >\r\n          <div class=\"settingsPagesGroupLeft\">\r\n            <div class=\"settingsDragHandle\"\r\n              on:focus={() => { allowDrag = true; }}\r\n              on:mouseover={() => { allowDrag = true; }}\r\n              on:mouseleave={() => { allowDrag = false; }}\r\n            >\r\n              <i class=\"fa-solid fa-grip-vertical\" />\r\n            </div>\r\n            <div class=\"settingsPagesMoveButtons\">\r\n              <button\r\n                on:click={() => {\r\n                  movePage(settingsData.pages, index, \"up\");\r\n                  unsavedPages = true;\r\n                }}\r\n              >\r\n                <i class=\"fa-solid fa-angle-up\" />\r\n              </button>\r\n              <button\r\n                on:click={() => {\r\n                  movePage(settingsData.pages, index, \"down\");\r\n                  unsavedPages = true;\r\n                }}\r\n              >\r\n                <i class=\"fa-solid fa-angle-down\" />\r\n              </button>\r\n            </div>\r\n            {#if page.isGroup}\r\n              <i class=\"fa-regular fa-folder\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newGroupNameBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.name}\r\n                placeholder=\"Type the nanme of the group\"\r\n                maxlength=\"50\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.name = escapeHTML(page.name);\r\n                }}\r\n              />\r\n            {:else}\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newLinkBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.link}\r\n                placeholder=\"Type the address of the page\"\r\n                maxlength=\"500\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.link = escapeHTML(checkWebsite(page.link));\r\n                  page.imageName = getImageNameFor(page.link);\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }}\r\n              />\r\n            {/if}\r\n          </div>\r\n          <div class=\"settingsPageListButtons\">\r\n            {#if page.isGroup}\r\n              <span>{page.pages.length} {page.pages.length === 1 ? \"page\" : \"pages\"}</span>\r\n              <button\r\n                on:click={() => { groupModalActive = true; selectedGroupIndex = index; }}\r\n                class=\"viewGroupButton\"\r\n              >\r\n                View Group\r\n              </button>\r\n            {:else}\r\n              <i on:click={() => { imageModalActive = true; selectedIndex = index; }} class=\"fa-solid fa-image pointer\" />\r\n            {/if}\r\n            <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} on:change={() => {unsavedPages = true}} />\r\n            <input\r\n              on:click={() => {\r\n                deletePage(settingsData.pages, index);\r\n                unsavedPages = true;\r\n              }}\r\n              type=\"button\"\r\n              class=\"pageDeleteButton\"\r\n              value=\"X\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <div id=\"settingsPageOptions\">\r\n    <h4>Add new page</h4>\r\n    <form\r\n      class=\"settingsPageInput\"\r\n      on:submit={(e) => {\r\n        addPage(settingsData.pages, addPageInput, e);\r\n\r\n        //Clear page input after adding it\r\n        addPageInput = \"\";\r\n\r\n        unsavedPages = true;\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        id=\"set_newPageBox\"\r\n        class=\"settingsTextInput\"\r\n        bind:value={addPageInput}\r\n        placeholder=\"Type the address of the page\"\r\n        maxlength=\"500\"\r\n        required={true}\r\n      />\r\n      <button type=\"submit\" class=\"addPageButton\">Add</button>\r\n    </form>\r\n\r\n    <div class=\"settingsActionButtonsWithError\">\r\n      <div class=\"settingsActionButtons\">\r\n        <button\r\n          on:click={(e) => {\r\n            saveSettings(settingsData, e);\r\n            unsavedPages = false;\r\n          }}\r\n          type=\"submit\"\r\n          class=\"saveSettingsButton\"\r\n        >\r\n          Save\r\n        </button>\r\n\r\n        <button\r\n          class=\"createGroupButton\"\r\n          on:click={() => {\r\n            createGroup();\r\n            unsavedPages = true;\r\n          }}\r\n        >\r\n          Create new group\r\n        </button>\r\n      </div>\r\n\r\n      {#if unsavedPages}\r\n        <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n\r\n  {#if imageModalActive}\r\n    <PagesImageModal\r\n      settingsData={settingsData}\r\n      page={settingsData.pages[selectedIndex]}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={imageModalActive}\r\n    />\r\n  {/if}\r\n\r\n  {#if groupModalActive}\r\n    <PagesGroupModal\r\n      group={settingsData.pages[selectedGroupIndex]}\r\n      settingsData={settingsData}\r\n      deletePage={deletePage}\r\n      addPage={addPage}\r\n      movePage={movePage}\r\n      getImageNameFor={getImageNameFor}\r\n      checkWebsite={checkWebsite}\r\n      escapeHTML={escapeHTML}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={groupModalActive}\r\n    />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .pointer {\r\n    cursor: pointer;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPages.darkModifier .settingsTextInput {\r\n    color: white;\r\n    outline: none;\r\n    border-color: #3a99ff;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .viewGroupButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .viewGroupButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .createGroupButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .createGroupButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  .addPageButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .addPageButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .settingsActionButtons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #settingsPages {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsPagesListPageContainer:not(:first-child) {\r\n    padding-top: 3px;\r\n  }\r\n  .settingsPagesListPageContainer:not(:last-child) {\r\n    padding-bottom: 2px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  #settingsPages.darkModifier .settingsPagesListPage {\r\n    border-color: #3a99ff !important;\r\n  }\r\n  .settingsDragHandle {\r\n    margin-left: 4px;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-grow: 1;\r\n    padding-right: 8px;\r\n  }\r\n  .settingsPageLinkInput {\r\n    width: 100%;\r\n    border: 0;\r\n    overflow-wrap: anywhere;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPages.darkModifier .settingsPageLinkInput {\r\n    color: white;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    font-size: 10px;\r\n    padding: 3px 5px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsPagesMoveButtons button:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n    font-size: 1.1em;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { getTileImage, getTileImageLinks, saveTileImage } from \"../../data/storage\";\r\n\r\n  export let settingsData;\r\n  export let saveSettings;\r\n\r\n  let settings, fileInput;\r\n  let importPages = true, importTileImages = true, importBackground = true, importVisuals = true, importNotes = true, importSearchEngine = true;\r\n  let exportPages = true, exportTileImages = true, exportBackground = true, exportVisuals = true, exportNotes = true, exportSearchEngine = true;\r\n\r\n  // Keep track of import errors\r\n  let importErrors = {\r\n    pages: false,\r\n    tileImages: false,\r\n    background: false,\r\n    visuals: false,\r\n    searchEngine: false,\r\n    notes: false,\r\n  };\r\n  let importFinishedSuccessfully = false; // False doesn't necesarily mean there were errors, just that no import was started\r\n\r\n  const clearImportErrors = () => {\r\n    importErrors = {\r\n      pages: false,\r\n      tileImages: false,\r\n      background: false,\r\n      visuals: false,\r\n      searchEngine: false,\r\n      notes: false,\r\n    };\r\n  }\r\n\r\n  const exportData = () => {\r\n    //Create export object based on what the user wants to export\r\n    let exportDataObject = {};\r\n    if(exportPages){\r\n      exportDataObject.pages = settingsData.pages;\r\n    }\r\n    if(exportNotes){\r\n      exportDataObject.notes = settingsData.notes;\r\n    }\r\n    if(exportSearchEngine){\r\n      exportDataObject.searchEngine = settingsData.searchEngine;\r\n    }\r\n    if(exportBackground){\r\n      exportDataObject.isBackgroundSolid = settingsData.isBackgroundSolid;\r\n      exportDataObject.backgroundSolidColor = settingsData.backgroundSolidColor;\r\n      exportDataObject.backgroundImage = settingsData.backgroundImage;\r\n    }\r\n    if(exportVisuals){\r\n      exportDataObject.yourName = settingsData.yourName;\r\n      exportDataObject.showCover = settingsData.showCover;\r\n      exportDataObject.clockBackground = settingsData.clockBackground;\r\n      exportDataObject.clock24Hour = settingsData.clock24Hour;\r\n      exportDataObject.darkMode = settingsData.darkMode;\r\n      exportDataObject.tileZoom = settingsData.tileZoom;\r\n      exportDataObject.tileGrow = settingsData.tileGrow;\r\n      exportDataObject.tileMinWidth = settingsData.tileMinWidth;\r\n      exportDataObject.tileHeight = settingsData.tileHeight;\r\n      exportDataObject.tileGap = settingsData.tileGap;\r\n      exportDataObject.tileBorder = settingsData.tileBorder;\r\n      exportDataObject.tileBorderRadius = settingsData.tileBorderRadius;\r\n      exportDataObject.tileBorderColor = settingsData.tileBorderColor;\r\n      exportDataObject.groupTileGap = settingsData.groupTileGap;\r\n      exportDataObject.groupTileBorderRadius = settingsData.groupTileBorderRadius;\r\n      exportDataObject.groupTileGrow = settingsData.groupTileGrow;\r\n      exportDataObject.navbarOpacity = settingsData.navbarOpacity;\r\n      exportDataObject.navbarColor = settingsData.navbarColor;\r\n      exportDataObject.coverColor = settingsData.coverColor;\r\n      exportDataObject.coverTextColor = settingsData.coverTextColor;\r\n    }\r\n    if(exportTileImages){\r\n      const links = getTileImageLinks();\r\n      links.forEach(link => {\r\n        exportDataObject[link] = getTileImage(link);\r\n      });\r\n    }\r\n\r\n    //Set the anchor tag to download the file\r\n    let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportDataObject));\r\n    let dlAnchorElem = document.getElementById('downloadAnchorElem');\r\n    dlAnchorElem.setAttribute(\"href\", dataStr);\r\n    dlAnchorElem.setAttribute(\"download\", \"metro-tab-config.json\");\r\n    dlAnchorElem.click();\r\n  }\r\n\r\n  const onFileSelected = (e) => {\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = (e) => {\r\n      try{\r\n        settings = JSON.parse(e.target.result);\r\n\r\n        clearImportErrors();\r\n        importFinishedSuccessfully = false;\r\n\r\n        //Use already existing settings and change what is needed\r\n        let settingsToSave = settingsData;\r\n\r\n        //Check pages for errors then import\r\n        if(importPages){\r\n          let errorsFound = false;\r\n\r\n          if(settings.pages){\r\n            settings.pages.forEach(page => {\r\n              if(page.isGroup){\r\n                // Handle group import\r\n                if(!page.hasOwnProperty('name') || !page.hasOwnProperty('pages') || !Array.isArray(page.pages)){\r\n                  errorsFound = true;\r\n                }\r\n\r\n                page.pages.forEach(subPage => {\r\n                  if(!subPage.hasOwnProperty('link')\r\n                    || !subPage.hasOwnProperty('imageName')\r\n                    || !subPage.hasOwnProperty('isActive')){\r\n                    errorsFound = true;\r\n                  }\r\n\r\n                  // Set defaults if missing\r\n                  if(!errorsFound && !subPage.hasOwnProperty('tileImageType')){\r\n                    subPage.tileImageType = subPage.imageName.length > 1 ? 'predefined' : 'none';\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('tileName')){\r\n                    subPage.tileName = subPage.imageName[0].toUpperCase() + subPage.imageName.slice(1);\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('backgroundColor')){\r\n                    subPage.backgroundColor = \"#3a99ff\";\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('textColor')){\r\n                    subPage.textColor = \"#ffffff\";\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                // Handle page import\r\n                if(!page.hasOwnProperty('link')\r\n                  || !page.hasOwnProperty('imageName')\r\n                  || !page.hasOwnProperty('isActive')){\r\n                  errorsFound = true;\r\n                }\r\n\r\n                // Set defaults if missing\r\n                if(!errorsFound && !page.hasOwnProperty('tileImageType')){\r\n                  page.tileImageType = page.imageName.length > 1 ? 'predefined' : 'none';\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('tileName')){\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('backgroundColor')){\r\n                  page.backgroundColor = \"#3a99ff\";\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('textColor')){\r\n                  page.textColor = \"#ffffff\";\r\n                }\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //If no errors found, add pages to settings\r\n          if(!errorsFound){\r\n            settingsToSave.pages = settings.pages;\r\n          }\r\n          else{\r\n            importErrors.pages = true;\r\n          }\r\n        }\r\n\r\n        //Check notes for errors then import\r\n        if(importNotes){\r\n          let errorsFound = false\r\n\r\n          if(settings.notes){\r\n            settings.notes.forEach(note => {\r\n              if(!note.hasOwnProperty('text') || !note.hasOwnProperty('completed')){\r\n                errorsFound = true;\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound){\r\n            settingsToSave.notes = settings.notes;\r\n          }\r\n          else{\r\n            importErrors.notes = true;\r\n          }\r\n        }\r\n\r\n        //Check search engine for errors then import\r\n        if(importSearchEngine){\r\n          let errorsFound = false;\r\n\r\n          if(settings.hasOwnProperty('searchEngine')){\r\n            if(typeof settings.searchEngine !== 'string'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound){\r\n            settingsToSave.searchEngine = settings.searchEngine;\r\n          }\r\n          else{\r\n            importErrors.searchEngine = true;\r\n          }\r\n        }\r\n\r\n        //Import all valid tile images\r\n        if(importTileImages){\r\n          for(let key in settings) {\r\n            if(key.indexOf(\"http\") !== -1) {\r\n              const image = settings[key];\r\n              if(typeof image === 'string' && image.length > 0){\r\n                saveTileImage(key, image);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        //Check backgrounds for errors then import\r\n        if(importBackground){\r\n          let errorsFound = false;\r\n\r\n          //Check if isBackgroundSolid exists and if it's the right type\r\n          if(settings.hasOwnProperty('isBackgroundSolid')){\r\n            if(typeof settings.isBackgroundSolid !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //Check if backgroundSolidColor exists and if it's the right type\r\n          if(settings.hasOwnProperty('backgroundSolidColor')){\r\n            if(typeof settings.backgroundSolidColor !== 'string' \r\n              || settings.backgroundSolidColor.length !== 7 \r\n              || settings.backgroundSolidColor.charAt(0) !== '#'\r\n              || !settings.backgroundSolidColor.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //Check if backgroundImage exists and if it's the right type\r\n          if(settings.hasOwnProperty('backgroundImage')){\r\n            if(typeof settings.backgroundImage !== 'string' || settings.backgroundImage.length === 0){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound) {\r\n            settingsToSave.isBackgroundSolid = settings.isBackgroundSolid;\r\n            settingsToSave.backgroundSolidColor = settings.backgroundSolidColor;\r\n            settingsToSave.backgroundImage = settings.backgroundImage;\r\n          }\r\n          else{\r\n            importErrors.background = true;\r\n          }\r\n        }\r\n\r\n        //Check visuals for errors then import\r\n        if(importVisuals){\r\n          let errorsFound = false;\r\n\r\n          if(settings.hasOwnProperty('yourName')){\r\n            if(typeof settings.yourName !== 'string'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('showCover')){\r\n            if(typeof settings.showCover !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('clockBackground')){\r\n            if(typeof settings.clockBackground !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('clock24Hour')){\r\n            if(typeof settings.clock24Hour !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('darkMode')){\r\n            if(typeof settings.darkMode !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileZoom')){\r\n            if(typeof settings.tileZoom !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileGrow')){\r\n            if(typeof settings.tileGrow !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileMinWidth')){\r\n            settings.tileMinWidth = parseFloat(settings.tileMinWidth);\r\n            if(typeof settings.tileMinWidth !== 'number' || settings.tileMinWidth < 10 || settings.tileMinWidth > 150){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileHeight')){\r\n            settings.tileHeight = parseFloat(settings.tileHeight);\r\n            if(typeof settings.tileHeight !== 'number' || settings.tileHeight < 5 || settings.tileHeight > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileGap')){\r\n            settings.tileGap = parseFloat(settings.tileGap);\r\n            if(typeof settings.tileGap !== 'number' || settings.tileGap < 0 || settings.tileGap > 30){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorder')){\r\n            settings.tileBorder = parseFloat(settings.tileBorder);\r\n            if(typeof settings.tileBorder !== 'number' || settings.tileBorder < 0 || settings.tileBorder > 50){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorderRadius')){\r\n            settings.tileBorderRadius = parseFloat(settings.tileBorderRadius);\r\n            if(typeof settings.tileBorderRadius !== 'number' || settings.tileBorderRadius < 0 || settings.tileBorderRadius > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileGap')){\r\n            settings.groupTileGap = parseFloat(settings.groupTileGap);\r\n            if(typeof settings.groupTileGap !== 'number' || settings.groupTileGap < 0 || settings.groupTileGap > 5){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileBorderRadius')){\r\n            settings.groupTileBorderRadius = parseFloat(settings.groupTileBorderRadius);\r\n            if(typeof settings.groupTileBorderRadius !== 'number' || settings.groupTileBorderRadius < 0 || settings.groupTileBorderRadius > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileGrow')){\r\n            if(typeof settings.groupTileGrow !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('navbarOpacity')){\r\n            settings.navbarOpacity = parseFloat(settings.navbarOpacity);\r\n            if(typeof settings.navbarOpacity !== 'number' || settings.navbarOpacity < 0 || settings.navbarOpacity > 1){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorderColor')){\r\n            if(settings.tileBorderColor.hasOwnProperty('r') && settings.tileBorderColor.hasOwnProperty('g') && settings.tileBorderColor.hasOwnProperty('b')){\r\n              settings.tileBorderColor.r = parseFloat(settings.tileBorderColor.r);\r\n              if(typeof settings.tileBorderColor.r !== 'number' || settings.tileBorderColor.r < 0 || settings.tileBorderColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.tileBorderColor.g = parseFloat(settings.tileBorderColor.g);\r\n              if(typeof settings.tileBorderColor.g !== 'number' || settings.tileBorderColor.g < 0 || settings.tileBorderColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.tileBorderColor.b = parseFloat(settings.tileBorderColor.b);\r\n              if(typeof settings.tileBorderColor.b !== 'number' || settings.tileBorderColor.b < 0 || settings.tileBorderColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('navbarColor')){\r\n            if(settings.navbarColor.hasOwnProperty('r') && settings.navbarColor.hasOwnProperty('g') && settings.navbarColor.hasOwnProperty('b')){\r\n              settings.navbarColor.r = parseFloat(settings.navbarColor.r);\r\n              if(typeof settings.navbarColor.r !== 'number' || settings.navbarColor.r < 0 || settings.navbarColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.navbarColor.g = parseFloat(settings.navbarColor.g);\r\n              if(typeof settings.navbarColor.g !== 'number' || settings.navbarColor.g < 0 || settings.navbarColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.navbarColor.b = parseFloat(settings.navbarColor.b);\r\n              if(typeof settings.navbarColor.b !== 'number' || settings.navbarColor.b < 0 || settings.navbarColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('coverColor')){\r\n            if(settings.coverColor.hasOwnProperty('r') && settings.coverColor.hasOwnProperty('g') && settings.coverColor.hasOwnProperty('b')){\r\n              settings.coverColor.r = parseFloat(settings.coverColor.r);\r\n              if(typeof settings.coverColor.r !== 'number' || settings.coverColor.r < 0 || settings.coverColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverColor.g = parseFloat(settings.coverColor.g);\r\n              if(typeof settings.coverColor.g !== 'number' || settings.coverColor.g < 0 || settings.coverColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverColor.b = parseFloat(settings.coverColor.b);\r\n              if(typeof settings.coverColor.b !== 'number' || settings.coverColor.b < 0 || settings.coverColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('coverTextColor')){\r\n            if(settings.coverTextColor.hasOwnProperty('r') && settings.coverTextColor.hasOwnProperty('g') && settings.coverTextColor.hasOwnProperty('b')){\r\n              settings.coverTextColor.r = parseFloat(settings.coverTextColor.r);\r\n              if(typeof settings.coverTextColor.r !== 'number' || settings.coverTextColor.r < 0 || settings.coverTextColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverTextColor.g = parseFloat(settings.coverTextColor.g);\r\n              if(typeof settings.coverTextColor.g !== 'number' || settings.coverTextColor.g < 0 || settings.coverTextColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverTextColor.b = parseFloat(settings.coverTextColor.b);\r\n              if(typeof settings.coverTextColor.b !== 'number' || settings.coverTextColor.b < 0 || settings.coverTextColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound) {\r\n            settingsToSave.yourName = settings.yourName;\r\n            settingsToSave.showCover = settings.showCover;\r\n            settingsToSave.clockBackground = settings.clockBackground;\r\n            settingsToSave.clock24Hour = settings.clock24Hour;\r\n            settingsToSave.darkMode = settings.darkMode;\r\n            settingsToSave.tileZoom = settings.tileZoom;\r\n            settingsToSave.tileGrow = settings.tileGrow;\r\n            settingsToSave.tileMinWidth = settings.tileMinWidth;\r\n            settingsToSave.tileHeight = settings.tileHeight;\r\n            settingsToSave.tileGap = settings.tileGap;\r\n            settingsToSave.tileBorder = settings.tileBorder;\r\n            settingsToSave.tileBorderRadius = settings.tileBorderRadius;\r\n            settingsToSave.tileBorderColor = settings.tileBorderColor;\r\n            settingsToSave.groupTileGap = settings.groupTileGap;\r\n            settingsToSave.groupTileBorderRadius = settings.groupTileBorderRadius;\r\n            settingsToSave.groupTileGrow = settings.groupTileGrow;\r\n            settingsToSave.navbarOpacity = settings.navbarOpacity;\r\n            settingsToSave.navbarColor = settings.navbarColor;\r\n            settingsToSave.coverColor = settings.coverColor;\r\n            settingsToSave.coverTextColor = settings.coverTextColor;\r\n          }\r\n          else{\r\n            importErrors.visuals = true;\r\n          }\r\n        }\r\n\r\n        if(!importErrors.pages\r\n          && !importErrors.tileImages\r\n          && !importErrors.background\r\n          && !importErrors.visuals\r\n          && !importErrors.searchEngine\r\n          && !importErrors.notes\r\n        ){\r\n          // If there are no errors, set flag for success message\r\n          importFinishedSuccessfully = true;\r\n        }\r\n\r\n        saveSettings(settingsToSave);\r\n      }\r\n      catch{\r\n        alert(\"Invalid configuration file.\");\r\n      }\r\n    };\r\n  };\r\n</script>\r\n\r\n<div class=\"IEPage\" class:darkModifier={settingsData.darkMode}>\r\n  <div class=\"IESection\">\r\n    <h2>Import Settings</h2>\r\n    \r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_pages\"\r\n        name=\"import_pages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importPages}\r\n      />\r\n      <label for=\"import_pages\">Import Pages</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_tileImages\"\r\n        name=\"import_tileImages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importTileImages}\r\n      />\r\n      <label for=\"import_tileImages\">Import Tile Images</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_background\"\r\n        name=\"import_background\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importBackground}\r\n      />\r\n      <label for=\"import_background\">Import Background</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_visuals\"\r\n        name=\"import_visuals\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importVisuals}\r\n      />\r\n      <label for=\"import_visuals\">Import Visuals</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_searchEngine\"\r\n        name=\"import_searchEngine\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importSearchEngine}\r\n      />\r\n      <label for=\"import_searchEngine\">Import Search Engine</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_notes\"\r\n        name=\"import_notes\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importNotes}\r\n      />\r\n      <label for=\"import_notes\">Import Notes</label>\r\n    </div>\r\n\r\n    <small>\r\n      * Importing notes and pages will overwrite your existing ones<br>\r\n      * Export your current settings before importing, otherwise you won't be able to revert the changes<br>\r\n      * Settings from older versions of the extension may not be fully compatible\r\n    </small>\r\n\r\n    <button\r\n      id=\"importButton\"\r\n      on:click={() => {\r\n        fileInput.click();\r\n      }}\r\n    >\r\n      Import\r\n    </button>\r\n    <input\r\n      style=\"display:none\"\r\n      type=\"file\"\r\n      accept=\".json\"\r\n      on:change={(e) => onFileSelected(e)}\r\n      bind:this={fileInput}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"IESection\">\r\n    <h2>Export Settings</h2>\r\n    \r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_pages\"\r\n        name=\"export_pages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportPages}\r\n      />\r\n      <label for=\"export_pages\">Export Pages</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_tileImages\"\r\n        name=\"export_tileImages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportTileImages}\r\n      />\r\n      <label for=\"export_tileImages\">Export Tile Images</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_background\"\r\n        name=\"export_background\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportBackground}\r\n      />\r\n      <label for=\"export_background\">Export Background</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_visuals\"\r\n        name=\"export_visuals\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportVisuals}\r\n      />\r\n      <label for=\"export_visuals\">Export Visuals</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_searchEngine\"\r\n        name=\"export_searchEngine\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportSearchEngine}\r\n      />\r\n      <label for=\"export_searchEngine\">Export Search Engine</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_notes\"\r\n        name=\"export_notes\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportNotes}\r\n      />\r\n      <label for=\"export_notes\">Export Notes</label>\r\n    </div>\r\n\r\n    <small>\r\n      * Make sure you aren't storing any sensitive information in your notes before exporting them\r\n    </small>\r\n\r\n    <button\r\n      id=\"exportButton\"\r\n      on:click={() => {\r\n        exportData();\r\n      }}\r\n    >\r\n      Export\r\n    </button>\r\n    <!-- svelte-ignore a11y-missing-content -->\r\n    <a id=\"downloadAnchorElem\" style=\"display:none\"></a>\r\n  </div>\r\n</div>\r\n\r\n{#if importFinishedSuccessfully}\r\n  <div class=\"IEAlerts\">\r\n    <div class=\"IEAlert IEAlertSuccess\">\r\n      <span>Settings imported successfully.</span>\r\n    </div>\r\n    <div class=\"IEAlert spacer\"></div>\r\n  </div>\r\n{/if}\r\n\r\n{#if importErrors.pages\r\n  || importErrors.tileImages\r\n  || importErrors.background\r\n  || importErrors.visuals\r\n  || importErrors.searchEngine\r\n  || importErrors.notes\r\n}\r\n  <div class=\"IEAlerts\">\r\n    <div class=\"IEAlert IEAlertError\">\r\n      {#if importErrors.pages}\r\n        <span>There was an error importing pages.</span>\r\n      {/if}\r\n      {#if importErrors.tileImages}\r\n        <span>There was an error importing tile images.</span>\r\n      {/if}\r\n      {#if importErrors.background}\r\n        <span>There was an error importing the background.</span>\r\n      {/if}\r\n      {#if importErrors.visuals}\r\n        <span>There was an error importing visuals.</span>\r\n      {/if}\r\n      {#if importErrors.searchEngine}\r\n        <span>There was an error importing the search engine.</span>\r\n      {/if}\r\n      {#if importErrors.notes}\r\n        <span>There was an error importing notes.</span>\r\n      {/if}\r\n      {#if importErrors.pages && importErrors.background && importErrors.visuals && importErrors.searchEngine && importErrors.notes}\r\n        <span>Please verify that the file has a supported metro-tab-config format.</span>\r\n      {:else}\r\n        <span>All of the other checked options were successfully imported.</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"IEAlert spacer\"></div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .IEPage {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: calc(32px + 0.5em);\r\n    margin-top: 32px;\r\n  }\r\n  .IEPage.darkModifier .IESection {\r\n    border-color: #3a99ff;\r\n  }\r\n  .IESection {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 4px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 10px;\r\n    padding: 10px 30px 25px 30px;\r\n    flex-grow: 1;\r\n    max-width: 25%;\r\n  }\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.6em;\r\n  }\r\n  small {\r\n    margin-top: 0.4em;\r\n    margin-bottom: 0.8em;\r\n    font-size: 0.8em;\r\n    color: gray;\r\n  }\r\n  button {\r\n    margin-top: auto;\r\n    padding: 8px 30px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    transition: 0.3s;\r\n  }\r\n  #importButton {\r\n    background-color: #0b1;\r\n    color: white;\r\n  }\r\n  #importButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #exportButton {\r\n    background-color: rgb(238, 218, 34);\r\n  }\r\n  #exportButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  .IEAlerts {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: calc(32px + 0.5em);\r\n    margin-top: 32px;\r\n  }\r\n  .IEAlert {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 4px;\r\n    padding: 15px 30px 20px 30px;\r\n    border-radius: 10px;\r\n    flex-grow: 1;\r\n    max-width: 25%;\r\n    overflow: hidden;\r\n  }\r\n  .IEAlertError {\r\n    color: rgb(115, 30, 35);\r\n    background-color: #ecc7ca;\r\n    border: 1px solid #d4a5aa;\r\n  }\r\n  .IEAlertSuccess {\r\n    color: rgb(20, 90, 35);\r\n    background-color: #d1eccf;\r\n    border: 1px solid #b5dfb5;\r\n  }\r\n  .IEAlert.spacer {\r\n    visibility: hidden;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .IEPage, .IEAlerts {\r\n      gap: 8px;\r\n    }\r\n    .IESection, .IEAlert {\r\n      max-width: unset;\r\n      flex-basis: 100%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .IEPage, .IEAlerts {\r\n      flex-direction: column;\r\n      margin-top: 16px;\r\n      gap: 16px;\r\n    }\r\n    .IESection, .IEAlert {\r\n      max-width: 100%;\r\n      flex-basis: unset;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { searchEngineList } from \"../../data/config\";\r\n\r\n  export let currentSearchEngine;\r\n  export let changeSearchEngine;\r\n  export let darkMode;\r\n</script>\r\n\r\n<h2>Search Engine</h2>\r\n<div id=\"settingsSearchEngine\">\r\n  <div id=\"itemList\">\r\n    {#each searchEngineList as searchEngine}\r\n      <div class=\"item\" class:darkModifier={darkMode}>\r\n        <p>{searchEngine.label}</p>\r\n        {#if currentSearchEngine === searchEngine.name}\r\n          <button disabled class=\"itemActive\">Active</button>\r\n        {:else}\r\n          <button\r\n            class=\"itemButton\"\r\n            on:click={() => {\r\n              currentSearchEngine = searchEngine.name;\r\n              changeSearchEngine(searchEngine.name)\r\n            }}\r\n          >\r\n            Set as active\r\n          </button>\r\n        {/if}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  #itemList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    overflow-y: auto;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 4px 4px;\r\n    border-radius: 10px;\r\n    border: 1px solid lightgray;\r\n  }\r\n  .item.darkModifier {\r\n    border-color: #3a99ff;\r\n  }\r\n  .item p {\r\n    margin: 0;\r\n    margin-left: 8px;\r\n  }\r\n  .itemActive {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .itemActive:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .itemButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .itemButton:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let darkMode = false;\r\n\r\n  userData.subscribe((data) => {\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const reviewClick = () => {\r\n    window.location.assign(\"https://chromewebstore.google.com/detail/onhhmnkghemlcnlglcnjkhebiclbklpl/reviews\");\r\n  }\r\n\r\n  const supportClick = () => {\r\n    window.location.assign(\"https://chromewebstore.google.com/detail/onhhmnkghemlcnlglcnjkhebiclbklpl/support\");\r\n  }\r\n</script>\r\n\r\n<div class=\"about\" class:darkModifier={darkMode}>\r\n  <div class=\"about-image\">\r\n    {#if darkMode}\r\n      <img src=\"static/images/about/a_hi_dark.png\" alt=\"Hi!\" />\r\n    {:else}\r\n      <img src=\"static/images/about/a_hi.png\" alt=\"Hi!\" />\r\n    {/if}\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 30px;\">\r\n    <span style=\"font-size: 4.5rem;\"><strong style=\"color: #3a99ff;\">Thank you</strong> for using this extension!</span>\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 20px;\">\r\n    <span style=\"font-size: 1.8rem;\">This project is developed by <strong style=\"color: #3a99ff;\">PatrickCC</strong>.</span>\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 20px;\">\r\n    <span style=\"font-size: 1.8rem;\">The code is open source and you can check it out <a href=\"https://github.com/KlibrDM/metro-tab/\" class=\"about-github-link\">here</a>.</span>\r\n  </div>\r\n\r\n  <div class=\"about-section\">\r\n    <h2>Review</h2>\r\n    <span>Your feedback is appreciated. You can rate this extension and write a review.</span>\r\n    <button on:click={reviewClick}>Rate & Review</button>\r\n  </div>\r\n\r\n  <div class=\"about-section\">\r\n    <h2>Support</h2>\r\n    <span>If you have any questions, issues or suggestions, feel free to use the support page.</span>\r\n    <button on:click={supportClick}>User Support</button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .about {\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: black;\r\n  }\r\n  .about.darkModifier {\r\n    color: white;\r\n  }\r\n  .about-image {\r\n    user-select: none;\r\n    pointer-events: none;\r\n    min-height: 204px;\r\n    margin-top: 20px;\r\n  }\r\n  .about-github-link {\r\n    color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .about-github-link:hover {\r\n    color: #2373c9;\r\n  }\r\n  .about-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin-top: 40px;\r\n    gap: 16px;\r\n  }\r\n  .about-section h2 {\r\n    color: #3a99ff;\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n  }\r\n  .about-section span {\r\n    font-size: 1.1rem;\r\n  }\r\n  .about-section button {\r\n    font-size: 1rem;\r\n    padding: 10px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .about-section button:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import * as CONFIG from \"../../data/config\";\r\n  import { saveConfig, saveBackground, saveBackgroundColor, saveSearchEngine } from \"../../data/storage\";\r\n\r\n  import SettingsForm from \"./SettingsForm.svelte\";\r\n  import Backgrounds from \"./Backgrounds.svelte\";\r\n  import Pages from \"./Pages.svelte\";\r\n  import ImportExport from \"./ImportExport.svelte\";\r\n  import SearchEngine from \"./SearchEngine.svelte\";\r\n  import About from \"./About.svelte\";\r\n\r\n  let settingsData = {}; //Local data for settings\r\n  let unsavedSettings = false;\r\n  let isPanelShown = false;\r\n  let isPeekPressed = false;\r\n  let tabIndex = 0;\r\n\r\n  const toggleSettingsPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  const changeTab = (index) => {\r\n    tabIndex = index;\r\n  }\r\n\r\n  //Subscribe to the entire userData\r\n  userData.subscribe((data) => {\r\n    settingsData = data;\r\n  });\r\n\r\n  const saveSettings = (settingsData, event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(settingsData.yourName);\r\n      state.showCover = settingsData.showCover;\r\n      state.clockBackground = settingsData.clockBackground;\r\n      state.clock24Hour = settingsData.clock24Hour;\r\n      state.darkMode = settingsData.darkMode;\r\n      state.tileZoom = settingsData.tileZoom;\r\n      state.tileGrow = settingsData.tileGrow;\r\n      state.tileMinWidth = settingsData.tileMinWidth;\r\n      state.tileHeight = settingsData.tileHeight;\r\n      state.tileGap = settingsData.tileGap;\r\n      state.tileBorder = settingsData.tileBorder;\r\n      state.tileBorderRadius = settingsData.tileBorderRadius;\r\n      state.tileBorderColor = settingsData.tileBorderColor;\r\n      state.groupTileGap = settingsData.groupTileGap;\r\n      state.groupTileBorderRadius = settingsData.groupTileBorderRadius;\r\n      state.groupTileGrow = settingsData.groupTileGrow;\r\n      state.navbarOpacity = settingsData.navbarOpacity;\r\n      state.navbarColor = settingsData.navbarColor;\r\n      state.coverColor = settingsData.coverColor;\r\n      state.coverTextColor = settingsData.coverTextColor;\r\n      state.pages = settingsData.pages;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const resetVisuals = () => {\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(CONFIG.yourName);\r\n      state.showCover = CONFIG.showCover;\r\n      state.clockBackground = CONFIG.clockBackground;\r\n      state.clock24Hour = CONFIG.clock24Hour;\r\n      state.darkMode = CONFIG.darkMode;\r\n      state.tileZoom = CONFIG.tileZoom;\r\n      state.tileGrow = CONFIG.tileGrow;\r\n      state.tileMinWidth = CONFIG.tileMinWidth;\r\n      state.tileHeight = CONFIG.tileHeight;\r\n      state.tileGap = CONFIG.tileGap;\r\n      state.tileBorder = CONFIG.tileBorder;\r\n      state.tileBorderRadius = CONFIG.tileBorderRadius;\r\n      state.tileBorderColor = CONFIG.tileBorderColor;\r\n      state.groupTileGap = CONFIG.groupTileGap;\r\n      state.groupTileBorderRadius = CONFIG.groupTileBorderRadius;\r\n      state.groupTileGrow = CONFIG.groupTileGrow;\r\n      state.navbarOpacity = CONFIG.navbarOpacity;\r\n      state.navbarColor = CONFIG.navbarColor;\r\n      state.coverColor = CONFIG.coverColor;\r\n      state.coverTextColor = CONFIG.coverTextColor;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const changeSearchEngine = (engine) => {\r\n    userData.update((state) => {\r\n      state.searchEngine = engine;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveSearchEngine(engine);\r\n  };\r\n\r\n  const changeBackground = (bg) => {\r\n    settingsData.backgroundImage = bg;\r\n\r\n    try {\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      saveBackground(settingsData.backgroundImage);\r\n\r\n      //Update background state IF it didn't fail saving to localstorage\r\n      userData.update((state) => {\r\n        state.backgroundImage = settingsData.backgroundImage;\r\n        state.isBackgroundSolid = false;\r\n        return state;\r\n      });\r\n    } catch {\r\n      alert(\r\n        \"Background image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeBackgroundColor = (color) => {\r\n    settingsData.backgroundSolidColor = color;\r\n\r\n    saveBackgroundColor(settingsData.backgroundSolidColor);\r\n\r\n    userData.update((state) => {\r\n      state.backgroundSolidColor = color;\r\n      state.isBackgroundSolid = true;\r\n      return state;\r\n    });\r\n  };\r\n\r\n  const createGroup = () => {\r\n    settingsData.pages.push({\r\n      name: \"New Group\",\r\n      isGroup: true,\r\n      isActive: true,\r\n      pages: [],\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  }\r\n\r\n  const addPage = (list, addPageInput, event) => {\r\n    event.preventDefault();\r\n\r\n    //Will add http:// if user didn't already do it\r\n    let linkToAdd = checkWebsite(addPageInput);\r\n    let imageName = getImageNameFor(linkToAdd);\r\n\r\n    //Update pages state\r\n    list.push({\r\n      link: escapeHTML(linkToAdd),\r\n      imageName: imageName,\r\n      isActive: true,\r\n      tileImageType: imageName.length > 1 ? 'predefined' : 'none',\r\n      tileName: imageName[0].toUpperCase() + imageName.slice(1),\r\n      backgroundColor: \"#3a99ff\",\r\n      textColor: \"#ffffff\"\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const deletePage = (list, index) => {\r\n    //Delete 1 element from specified index\r\n    list.splice(index, 1);\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const movePage = (list, index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index === 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index === list.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = list[index];\r\n\r\n    //Remove current item from old location\r\n    list.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      list.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      list.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const checkWebsite = (pageName) => {\r\n    if (pageName.substring(0, 4) === \"http\") {\r\n      return pageName;\r\n    } else {\r\n      return \"http://\" + pageName;\r\n    }\r\n  };\r\n\r\n  const getImageNameFor = (link) => {\r\n    //Get page name from provided link\r\n    let name = extractWebsiteName(link).toLowerCase();\r\n\r\n    if (CONFIG.knownPages.includes(name)) {\r\n      //Return the image name if the extension has it\r\n      return name;\r\n    } else if (\"1234567890qwertyuiopasdfghjklzxcvbnm\".includes(name[0])) {\r\n      //Return the image for the first letter\r\n      return name[0];\r\n    } else {\r\n      return \"_\";\r\n    }\r\n  };\r\n\r\n  const extractWebsiteName = (link) => {\r\n    let sitename = link;\r\n\r\n    //Remove http(s)://\r\n    sitename = sitename.substring(sitename.indexOf(\"://\") + 3);\r\n\r\n    //Remove www. if existent\r\n    if (sitename.substring(0, 3) === \"www\") {\r\n      sitename = sitename.substring(4);\r\n    }\r\n\r\n    //Remove port if existent\r\n    if (sitename.lastIndexOf(\":\") !== -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\":\"));\r\n    }\r\n\r\n    //Remove ending (.com etc) (if found)\r\n    if (sitename.lastIndexOf(\".\") !== -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    //Do it twice for those that have .co or .com\r\n    if (sitename.slice(-3) === \".co\" || sitename.slice(-4) === \".com\") {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    return sitename;\r\n  };\r\n\r\n  function escapeHTML(string) {\r\n    let entityMap = {\r\n      \"<\": \"&lt;\",\r\n      \">\": \"&gt;\",\r\n      '\"': \"&quot;\",\r\n      \"'\": \"&#39;\",\r\n      \"`\": \"&#x60;\",\r\n    };\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n\r\n  //Transition\r\n  function slide() {\r\n    return {\r\n      duration: 500,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 97.5% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n{#if isPanelShown}\r\n  <button\r\n    on:mousedown={() => {isPeekPressed = true}}\r\n    on:mouseup={() => {isPeekPressed = false}}\r\n    on:mouseleave={() => {isPeekPressed = false}}\r\n    class=\"highZIndex\"\r\n    id=\"peekButton\"\r\n    aria-label=\"Peek behind\"\r\n    class:darkModifier={settingsData.darkMode}\r\n  >\r\n    <i class=\"fas fa-eye\" />\r\n  </button>\r\n{/if}\r\n\r\n<button\r\n  on:click={toggleSettingsPanel}\r\n  id=\"settingsButton\"\r\n  aria-label=\"Settings\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={settingsData.darkMode}\r\n>\r\n  <i class=\"fas fa-sliders-h\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"settingsPanel\" transition:slide class:peekOpacity={isPeekPressed} class:darkModifier={settingsData.darkMode}>\r\n    <div id=\"settingsHeader\">\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 0}\r\n        on:click={() => {changeTab(0);}}\r\n      >\r\n        Pages\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 1}\r\n        on:click={() => {changeTab(1);}}\r\n      >\r\n        Background\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 2}\r\n        on:click={() => {changeTab(2);}}\r\n      >\r\n        Visuals\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 3}\r\n        on:click={() => {changeTab(3);}}\r\n      >\r\n        Search Engine\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 4}\r\n        on:click={() => {changeTab(4);}}\r\n      >\r\n        Import/Export\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 5}\r\n        on:click={() => {changeTab(5);}}\r\n      >\r\n        About\r\n      </button>\r\n    </div>\r\n    <hr/>\r\n    <div id=\"settingsContent\">\r\n      {#if tabIndex === 0}\r\n        <Pages {settingsData} {deletePage} {addPage} {saveSettings} {movePage} {createGroup} {getImageNameFor} {checkWebsite} {escapeHTML} bind:unsavedPages={unsavedSettings} />\r\n      {:else if tabIndex === 1}\r\n        <Backgrounds {changeBackground} {changeBackgroundColor} />\r\n      {:else if tabIndex === 2}\r\n        <SettingsForm {settingsData} {saveSettings} {resetVisuals} bind:unsavedSettings={unsavedSettings} />\r\n      {:else if tabIndex === 3}\r\n        <SearchEngine currentSearchEngine={settingsData.searchEngine} {changeSearchEngine} darkMode={settingsData.darkMode} />\r\n      {:else if tabIndex === 4}\r\n        <ImportExport {settingsData} {saveSettings} />\r\n      {:else if tabIndex === 5}\r\n        <About />\r\n      {/if}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  hr {\r\n    margin-block-start: 0.9em;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n  }\r\n  .peekOpacity {\r\n    opacity: 0;\r\n  }\r\n  #settingsButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 25px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 24;\r\n  }\r\n  #settingsButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #settingsButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #settingsButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #peekButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 65px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n  }\r\n  #peekButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #peekButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #peekButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #settingsPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 0.4s;\r\n  }\r\n  #settingsPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  #settingsHeader {\r\n    display: flex;\r\n    gap: 15px;\r\n    overflow-x: auto;\r\n  }\r\n  .settingsHeaderButton {\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: rgb(95, 95, 95);\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    font-size: 1em;\r\n  }\r\n  .settingsHeaderButton:hover {\r\n    color: black;\r\n  }\r\n  .headerSelected {\r\n    color: rgb(58, 153, 255) !important;\r\n  }\r\n  .headerSelected:hover {\r\n    color: rgb(58, 153, 255) !important;\r\n  }\r\n  #settingsPanel.darkModifier .settingsHeaderButton {\r\n    color: white;\r\n  }\r\n  #settingsPanel.darkModifier .settingsHeaderButton:hover {\r\n    color: rgb(200, 200, 200);\r\n  }\r\n  #settingsContent {\r\n    overflow-y: auto;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #settingsPanel {\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  export let note;\r\n  export let saveAllNotes;\r\n  export let deleteNote;\r\n  export let moveNote;\r\n  export let index;\r\n\r\n  let saveButtonState = 0; //local state to enable/disable save button\r\n\r\n  const showSaveButton = () => {\r\n    if (saveButtonState !== 1) {\r\n      saveButtonState = 1;\r\n    }\r\n  };\r\n\r\n  const saveNote = () => {\r\n    //Disable save button\r\n    saveButtonState = 0;\r\n    //Save the notes\r\n    saveAllNotes();\r\n  };\r\n\r\n  const strikeNote = () => {\r\n    //Toggle strike\r\n    note.completed = !note.completed;\r\n    //Activate save button\r\n    saveButtonState = 1;\r\n  };\r\n</script>\r\n\r\n<div class=\"notes\">\r\n  <div class=\"positionButtonArea\">\r\n    <button\r\n      on:click={() => {\r\n        moveNote(index, \"up\");\r\n\r\n        //Disable save button. Moving the item will save it\r\n        saveButtonState = 0;\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-angle-up\" />\r\n    </button>\r\n\r\n    <button\r\n      on:click={() => {\r\n        moveNote(index, \"down\");\r\n\r\n        //Disable save button. Moving the item will save it\r\n        saveButtonState = 0;\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-angle-down\" />\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"notesWrapper\">\r\n    <!--Using a pre with hidden visibility for auto-resizing textarea-->\r\n    <pre aria-hidden=\"true\">{note.text + \"\\n\"}</pre>\r\n    <textarea\r\n      placeholder=\"Type here...\"\r\n      bind:value={note.text}\r\n      on:input={() => {\r\n        showSaveButton();\r\n      }}\r\n      class:strikethrough={note.completed}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"actionButtonArea\">\r\n    <button\r\n      id=\"actionButtonSave\"\r\n      on:click={() => {\r\n        saveNote();\r\n      }}\r\n      disabled={!saveButtonState}\r\n    >\r\n      <i class=\"fa-solid fa-check\" />\r\n    </button>\r\n\r\n    <button\r\n      id=\"actionButtonStrike\"\r\n      on:click={() => {\r\n        strikeNote();\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-strikethrough\" />\r\n    </button>\r\n\r\n    <button\r\n      id=\"actionButtonDelete\"\r\n      on:click={() => {\r\n        deleteNote(index);\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-trash-can\" />\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .strikethrough {\r\n    text-decoration: line-through;\r\n  }\r\n  .notes {\r\n    display: flex;\r\n    gap: 5px;\r\n    padding: 5px 10px 10px 5px;\r\n    border-radius: 5px;\r\n    background-color: rgb(255, 255, 136);\r\n  }\r\n  .notesWrapper {\r\n    flex-grow: 1;\r\n    position: relative;\r\n  }\r\n  pre {\r\n    margin: 0;\r\n    color: red;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n  }\r\n  textarea {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0;\r\n    outline: 0;\r\n    resize: none;\r\n    background-color: transparent;\r\n  }\r\n  pre,\r\n  textarea {\r\n    font-family: inherit;\r\n    font-size: 1.2em;\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n    max-height: 240px;\r\n  }\r\n  .actionButtonArea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3px;\r\n  }\r\n  .actionButtonArea button {\r\n    border: 0;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    font-size: 1.1em;\r\n  }\r\n  #actionButtonSave {\r\n    color: rgb(21, 170, 21);\r\n  }\r\n  #actionButtonSave:disabled {\r\n    color: lightgray;\r\n  }\r\n  #actionButtonStrike {\r\n    color: orange;\r\n  }\r\n  #actionButtonDelete {\r\n    color: red;\r\n  }\r\n  .positionButtonArea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  }\r\n  .positionButtonArea button {\r\n    border: 0;\r\n    cursor: pointer;\r\n    padding: 0px 2px;\r\n    color: gray;\r\n    background-color: transparent;\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { saveNotes } from \"../../data/storage\";\r\n  import Note from \"./Note.svelte\";\r\n\r\n  let isPanelShown = false;\r\n  let userNotes = []; //local data for notes\r\n  let darkMode = false;\r\n\r\n  //Subscribe to notes\r\n  userData.subscribe((data) => {\r\n    userNotes = data.notes;\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const toggleNotesPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Create new empty note at the beginning of array\r\n  const createNewNote = () => {\r\n    userNotes.unshift({\r\n      text: \"\",\r\n      completed: false,\r\n    });\r\n\r\n    userData.update((state) => {\r\n      state.notes = userNotes;\r\n      return state;\r\n    });\r\n\r\n    saveNotes(userNotes);\r\n  };\r\n\r\n  const saveAllNotes = () => {\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.notes = userNotes;\r\n      return state;\r\n    });\r\n\r\n    //Save to local storage\r\n    saveNotes(userNotes);\r\n  };\r\n\r\n  const deleteNote = (index) => {\r\n    //Delete 1 note from the specified index\r\n    userNotes.splice(index, 1);\r\n\r\n    //Save changes\r\n    saveAllNotes();\r\n  };\r\n\r\n  const moveNote = (index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index === 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index === userNotes.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = userNotes[index];\r\n\r\n    //Remove current item from old location\r\n    userNotes.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      userNotes.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      userNotes.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Save changes\r\n    saveAllNotes();\r\n  };\r\n\r\n  //Transition\r\n  function notesEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 82% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleNotesPanel}\r\n  id=\"notesButton\"\r\n  aria-label=\"Notes\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={darkMode}\r\n>\r\n  <i class=\"fa-solid fa-note-sticky\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"notesPanel\" class:darkModifier={darkMode} transition:notesEntrance>\r\n    <div id=\"notesTop\">\r\n      <h2>Notes</h2>\r\n      <button on:click={createNewNote}>New</button>\r\n    </div>\r\n\r\n    <div id=\"notesBox\">\r\n      {#if userNotes.length === 0}\r\n        <p>You don't have any notes yet</p>\r\n      {/if}\r\n      {#each userNotes as note, index}\r\n        <Note {note} {saveAllNotes} {deleteNote} {moveNote} {index} />\r\n      {/each}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #notesButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 65px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 16;\r\n  }\r\n  #notesButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #notesButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #notesButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #notesPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #notesPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  #notesTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #notesTop > * {\r\n    display: inline-block;\r\n  }\r\n  #notesTop > button {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  #notesTop > button:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #notesBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #notesPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { entertainmentData } from \"../data/config\";\r\n  import { userData } from \"../store\";\r\n\r\n  let isPanelShown = false;\r\n  let darkMode = false;\r\n\r\n  userData.subscribe((data) => {\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const toggleEntertainmentPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Transition\r\n  function entertainmentEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 74% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleEntertainmentPanel}\r\n  id=\"entertainmentButton\"\r\n  aria-label=\"Entertainment\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={darkMode}\r\n>\r\n  <i class=\"fa-solid fa-gamepad\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"entertainmentPanel\" class:darkModifier={darkMode} transition:entertainmentEntrance>\r\n    <div id=\"entertainmentTop\">\r\n      <h2>Entertainment</h2>\r\n    </div>\r\n\r\n    <div id=\"entertainmentBox\">\r\n      {#each entertainmentData as data}\r\n        <a href={data.link}>\r\n          <img src=\"static/images/entertainment/{data.img}\" alt={data.name} />\r\n          <p>{data.name}</p>\r\n        </a>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #entertainmentButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 105px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 8;\r\n  }\r\n  #entertainmentButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #entertainmentButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #entertainmentButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #entertainmentPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #entertainmentPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  #entertainmentTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox > a {\r\n    width: 85px;\r\n  }\r\n  #entertainmentBox > a > img {\r\n    width: 100%;\r\n  }\r\n  #entertainmentPanel.darkModifier #entertainmentBox > a > img {\r\n    border: 2px solid white;\r\n    border-radius: 8px;\r\n  }\r\n  #entertainmentBox > a > p {\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n    font-size: 0.8em;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n  #entertainmentPanel.darkModifier #entertainmentBox > a > p {\r\n    color: white;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #entertainmentPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import \"./data/storage\";\r\n  import { userData } from \"./store\";\r\n\r\n  import Cover from \"./components/Cover.svelte\";\r\n  import QuickNav from \"./components/QuickNav.svelte\";\r\n  import SearchBar from \"./components/SearchBar/SearchBar.svelte\";\r\n  import SpeedDial from \"./components/SpeedDial.svelte\";\r\n  import Settings from \"./components/Settings/Settings.svelte\";\r\n  import Notes from \"./components/Notes/Notes.svelte\";\r\n  import Entertainment from \"./components/Entertainment.svelte\";\r\n  import { getBackgroundFormat } from \"./data/tools\";\r\n\r\n  let backgroundImage;\r\n  let isBackgroundSolid = false;\r\n  let backgroundSolidColor;\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    isBackgroundSolid = data.isBackgroundSolid;\r\n    backgroundSolidColor = data.backgroundSolidColor;\r\n  });\r\n\r\n  //Update background image url when background image changes\r\n  $: backgroundImageUrl = \"static/images/bg/\" + backgroundImage + \".\" + getBackgroundFormat(backgroundImage);\r\n</script>\r\n\r\n<!--Use the url made above if user selects image provided by the extension (bgXXX)-->\r\n<main\r\n  style={isBackgroundSolid\r\n    ? \"background-color: \" + backgroundSolidColor + \";\"\r\n    : backgroundImage.length > 5\r\n    ? \"background-image: url(\" + backgroundImage + \");\"\r\n    : \"background-image: url(\" + backgroundImageUrl + \");\"}\r\n>\r\n  <Cover />\r\n  <QuickNav />\r\n  <SearchBar />\r\n  <SpeedDial />\r\n  <Settings />\r\n  <Notes />\r\n  <Entertainment />\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n  }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","promise","flushidx","flush","saved_component","update","$$","pop","callback","has","add","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","then","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","this","$on","splice","$set","$$props","obj","$$set","keys","yourName","tileBorderColor","g","navbarColor","coverColor","coverTextColor","searchEngineList","label","link","entertainmentData","img","backgrounds","format","source","sourceDetails","knownPages","subscriber_queue","userData","stop","subscribers","new_value","run_queue","subscriber","subscribe","invalidate","writable","saveConfig","localStorage","setItem","showCover","clockBackground","clock24Hour","darkMode","isBackgroundSolid","backgroundSolidColor","backgroundImage","tileZoom","tileGrow","tileMinWidth","tileHeight","tileGap","tileBorder","tileBorderRadius","JSON","stringify","groupTileGap","groupTileBorderRadius","groupTileGrow","navbarOpacity","notes","pages","searchEngine","saveNotes","saveTileImage","image","getTileImage","getItem","CONFIG.yourName","parse","CONFIG.tileBorderColor","CONFIG.navbarColor","CONFIG.coverColor","CONFIG.coverTextColor","imageName","isActive","tileImageType","tileName","backgroundColor","textColor","isGroup","legacyPagesCookie","nameEQ","ca","cookie","charAt","substring","getCookie","oldPages","page","toUpperCase","slice","div1","div0","h1","create_if_block","showCoverAtLoad","setTimeout","$$invalidate","hasOwnProperty","div","a0","a1","a2","a3","onClickChromeTabs","elem","chrome","tabs","span","time","auxHours","getHours","hours","minutes","getMinutes","ampm","setInterval","showGithub","innerWidth","chance","floor","random","form","button","searchQuery","entityMap","escapeHTML","string","String","replace","s","preventDefault","selectedSearchEngine","find","item","location","assign","getBackgroundFormat","bg","backgroundImageElem","background","backgroundImageFormat","toHex","color","toString","toRGB","hex","result","exec","parseInt","clearOldExtension","fileName","lastIndexOf","create_if_block_2","create_if_block_1","each_value_1","a_href_value","a_aria_label_value","t0","t0_value","t_value","if_block","create_if_block_3","div2","small","div68","h2","hr0","label0","input0","div5","div3","hr1","div4","label1","input1","checked","div8","div6","hr2","div7","label2","input2","div11","div9","hr3","div10","label3","input3","div14","div12","hr4","div13","label4","input4","div17","div15","hr5","div16","label5","input5","div20","div18","hr6","div19","label6","input6","div24","div21","hr7","div23","label7","div22","input7","input8","div28","div25","hr8","div27","label8","div26","input9","input10","div32","div29","hr9","div31","label9","div30","input11","input12","div36","div33","hr10","div35","label10","div34","input13","input14","div40","div37","hr11","div39","label11","div38","input15","input16","div43","div41","hr12","div42","label12","input17","div46","div44","hr13","div45","label13","input18","div50","div47","hr14","div49","label14","div48","input19","input20","div54","div51","hr15","div53","label15","div52","input21","input22","div58","div55","hr16","div57","label16","div56","input23","input24","div61","div59","hr17","div60","label17","input25","div64","div62","hr18","div63","label18","input26","div67","div65","hr19","div66","label19","input27","div71","div69","button0","div70","button1","settingsData","saveSettings","resetVisuals","unsavedSettings","resetLocalVisuals","h4","fileinput","changeBackground","onFileSelected","files","reader","FileReader","readAsDataURL","onload","click","$$value","img_src_value","src","img_alt_value","t1_value","if_block1","h20","h40","h41","h21","savedBackgroundSolidColor","newBackgroundSolidColor","changeBackgroundColor","backgroundSolidColorChanged","backgroundSources","backgroundImageUrl","p0","p1","p2","button2","button3","t12","t12_value","stopImmediatePropagation","unsavedPages","modalActive","alert","i3","if_block0","each_value","h3","current","draggedItem","draggedItemIndex","draggedOverIndex","deletePage","addPage","movePage","getImageNameFor","checkWebsite","addPageInput","allowDrag","imageModalActive","selectedImageIndex","handleDragEnd","t2","t2_value","create_if_block_4","createGroup","selectedIndex","groupModalActive","selectedGroupIndex","create_if_block_7","tileImages","create_if_block_6","if_block2","create_if_block_5","if_block3","visuals","if_block4","if_block5","create_if_block_8","small0","small1","settings","fileInput","importPages","importTileImages","importBackground","importVisuals","importNotes","importSearchEngine","exportPages","exportTileImages","exportBackground","exportVisuals","exportNotes","exportSearchEngine","importErrors","importFinishedSuccessfully","exportData","exportDataObject","links","getTileImageLinks","dataStr","encodeURIComponent","dlAnchorElem","getElementById","file","readAsText","settingsToSave","errorsFound","isArray","subPage","note","match","parseFloat","currentSearchEngine","changeSearchEngine","span3","span4","button4","button5","hr","searchengine_changes","slide","u","isPanelShown","isPeekPressed","tabIndex","changeTab","pageName","extractWebsiteName","toLowerCase","CONFIG.knownPages","includes","sitename","state","engine","saveSearchEngine","saveBackground","saveBackgroundColor","list","linkToAdd","textarea","completed","pre","i2","saveAllNotes","deleteNote","moveNote","saveButtonState","showSaveButton","saveNote","strikeNote","each_blocks","notesEntrance","userNotes","unshift","entertainmentEntrance","main","body"],"mappings":"gCAAA,SAASA,IAAU,CACnB,MAAMC,EAAWC,GAAKA,EAetB,SAASC,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CACA,IAAIE,EACJ,SAASC,EAAcC,EAAaC,GAKhC,OAJKH,IACDA,EAAuBI,SAASC,cAAc,MAElDL,EAAqBM,KAAOH,EACrBD,IAAgBF,EAAqBM,IAChD,CAwHA,MAAMC,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAM7B,EASxD,MAAM+B,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMrB,SAAQwB,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,IACR,IAEc,IAAfN,EAAMO,MACNV,EAAIK,EACZ,CA8HA,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAUA,SAASE,EAAmBF,GACxB,IAAKA,EACD,OAAOrB,SACX,MAAMwB,EAAOH,EAAKI,YAAcJ,EAAKI,cAAgBJ,EAAKK,cAC1D,OAAIF,GAAQA,EAAKG,KACNH,EAEJH,EAAKK,aAChB,CACA,SAASE,EAAwBP,GAC7B,MAAMQ,EAAgBC,EAAQ,SAE9B,OAEJ,SAA2BT,EAAMU,GAC7BZ,EAAOE,EAAKW,MAAQX,EAAMU,EAC9B,CALIE,CAAkBV,EAAmBF,GAAOQ,GACrCA,EAAcK,KACzB,CA4BA,SAASC,EAAOf,EAAQC,EAAMe,GAC1BhB,EAAOiB,aAAahB,EAAMe,GAAU,KACxC,CASA,SAASE,EAAOjB,GACZA,EAAKkB,WAAWC,YAAYnB,EAChC,CACA,SAASoB,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,EAE5B,CACA,SAASb,EAAQiB,GACb,OAAO/C,SAASC,cAAc8C,EAClC,CAmBA,SAASC,EAAKC,GACV,OAAOjD,SAASkD,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CACA,SAASK,EAAOhC,EAAMiC,EAAOC,EAASC,GAElC,OADAnC,EAAKoC,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnC,EAAKqC,oBAAoBJ,EAAOC,EAASC,EAC1D,CA6BA,SAASG,EAAKtC,EAAMuC,EAAWC,GACd,MAATA,EACAxC,EAAKyC,gBAAgBF,GAChBvC,EAAK0C,aAAaH,KAAeC,GACtCxC,EAAK2C,aAAaJ,EAAWC,EACrC,CAiDA,SAASI,EAAUJ,GACf,MAAiB,KAAVA,EAAe,MAAQA,CAClC,CAiIA,SAASK,EAASlB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKmB,YAAclB,IACnBD,EAAKC,KAAOA,EACpB,CACA,SAASmB,EAAgBC,EAAOR,GAC5BQ,EAAMR,MAAiB,MAATA,EAAgB,GAAKA,CACvC,CASA,SAASS,EAAUjD,EAAMkD,EAAKV,EAAOW,GACnB,OAAVX,EACAxC,EAAKU,MAAM0C,eAAeF,GAG1BlD,EAAKU,MAAM2C,YAAYH,EAAKV,EAAOW,EAAY,YAAc,GAErE,CA6EA,SAASG,EAAa7C,EAASiB,EAAM6B,GACjC9C,EAAQ+C,UAAUD,EAAS,MAAQ,UAAU7B,EACjD,CAoFA,MAAM+B,EAAiB,IAAIC,IAC3B,IAoIIC,EApIAC,EAAS,EAcb,SAASC,EAAY7D,EAAM3B,EAAGC,EAAGwF,EAAUC,EAAOC,EAAMrG,EAAIsG,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,GAAKF,EAAM,CAC/B,MAAMG,EAAIhG,GAAKC,EAAID,GAAK2F,EAAKI,GAC7BD,GAAiB,IAAJC,EAAU,KAAKzG,EAAG0G,EAAG,EAAIA,OACzC,CACD,MAAMC,EAAOH,EAAY,SAASxG,EAAGW,EAAG,EAAIA,SACtCoD,EAAO,YApBjB,SAAc6C,GACV,IAAIC,EAAO,KACPjD,EAAIgD,EAAI/C,OACZ,KAAOD,KACHiD,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAWlD,GACjD,OAAOiD,IAAS,CACpB,CAc6BA,CAAKF,MAASL,IACjCS,EAAMxE,EAAmBF,IACzB2E,WAAEA,EAAUC,MAAEA,GAAUnB,EAAeoB,IAAIH,IAfrD,SAAkCA,EAAK1E,GACnC,MAAM8E,EAAO,CAAEH,WAAYpE,EAAwBP,GAAO4E,MAAO,CAAA,GAEjE,OADAnB,EAAesB,IAAIL,EAAKI,GACjBA,CACX,CAW6DE,CAAyBN,EAAK1E,GAClF4E,EAAMlD,KACPkD,EAAMlD,IAAQ,EACdiD,EAAWM,WAAW,cAAcvD,KAAQ4C,IAAQK,EAAWO,SAAS1D,SAE5E,MAAM2D,EAAYnF,EAAKU,MAAMyE,WAAa,GAG1C,OAFAnF,EAAKU,MAAMyE,UAAY,GAAGA,EAAY,GAAGA,MAAgB,KAAKzD,KAAQoC,cAAqBC,aAC3FH,GAAU,EACHlC,CACX,CACA,SAAS0D,EAAYpF,EAAM0B,GACvB,MAAM2D,GAAYrF,EAAKU,MAAMyE,WAAa,IAAIG,MAAM,MAC9CC,EAAOF,EAASG,OAAO9D,EACvB+D,GAAQA,EAAKC,QAAQhE,GAAQ,EAC7B+D,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAAS7D,OAAS+D,EAAK/D,OACnCmE,IACA3F,EAAKU,MAAMyE,UAAYI,EAAKK,KAAK,MACjChC,GAAU+B,EACL/B,GAKTzE,GAAI,KACIyE,IAEJH,EAAexF,SAAQ6G,IACnB,MAAMH,WAAEA,GAAeG,EACvB,IAAIvD,EAAIoD,EAAWO,SAAS1D,OAC5B,KAAOD,KACHoD,EAAWkB,WAAWtE,GAC1BuD,EAAKF,MAAQ,EAAE,IAEnBnB,EAAeqC,QAAO,IAZ9B,CAsFA,SAASC,EAAsBC,GAC3BrC,EAAoBqC,CACxB,CA0DA,MAAMC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB9I,GACzBwI,EAAiBO,KAAK/I,EAC1B,CACA,SAASgJ,EAAmBhJ,GACxByI,EAAgBM,KAAK/I,EACzB,CAmBA,MAAMiJ,EAAiB,IAAIrH,IAC3B,IAgDIsH,EAhDAC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBrD,EACxB,EAAG,CAGC,KAAOmD,EAAWb,EAAiBzE,QAAQ,CACvC,MAAMwE,EAAYC,EAAiBa,GACnCA,IACAf,EAAsBC,GACtBiB,EAAOjB,EAAUkB,GACpB,CAID,IAHAnB,EAAsB,MACtBE,EAAiBzE,OAAS,EAC1BsF,EAAW,EACJZ,EAAkB1E,QACrB0E,EAAkBiB,KAAlBjB,GAIJ,IAAK,IAAI3E,EAAI,EAAGA,EAAI4E,EAAiB3E,OAAQD,GAAK,EAAG,CACjD,MAAM6F,EAAWjB,EAAiB5E,GAC7BqF,EAAeS,IAAID,KAEpBR,EAAeU,IAAIF,GACnBA,IAEP,CACDjB,EAAiB3E,OAAS,CAClC,OAAayE,EAAiBzE,QAC1B,KAAO4E,EAAgB5E,QACnB4E,EAAgBe,KAAhBf,GAEJI,GAAmB,EACnBI,EAAed,QACfC,EAAsBiB,EAC1B,CACA,SAASC,EAAOC,GACZ,GAAoB,OAAhBA,EAAGK,SAAmB,CACtBL,EAAGD,SACHlJ,EAAQmJ,EAAGM,eACX,MAAMC,EAAQP,EAAGO,MACjBP,EAAGO,MAAQ,EAAE,GACbP,EAAGK,UAAYL,EAAGK,SAASnD,EAAE8C,EAAGQ,IAAKD,GACrCP,EAAGS,aAAa1J,QAAQwI,EAC3B,CACL,CAYA,SAASmB,EAAS5H,EAAM6H,EAAWC,GAC/B9H,EAAK+H,cA1XT,SAAsBC,EAAMC,GAAQC,QAAEA,GAAU,EAAKC,WAAEA,GAAa,GAAU,IAC1E,MAAMC,EAAIzJ,SAAS0J,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,EAAME,EAASC,EAAYF,GACtCG,CACX,CAsXuBG,CAAa,GAAGV,EAAY,QAAU,UAAUC,KACvE,CACA,MAAMU,EAAW,IAAIjJ,IACrB,IAAIkJ,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHjJ,EAAG,GACH0E,EAAGqE,EAEX,CACA,SAASG,KACAH,EAAOE,GACR5K,EAAQ0K,EAAO/I,GAEnB+I,EAASA,EAAOrE,CACpB,CACA,SAASyE,GAAcC,EAAOC,GACtBD,GAASA,EAAMvH,IACfiH,EAAS7I,OAAOmJ,GAChBA,EAAMvH,EAAEwH,GAEhB,CACA,SAASC,GAAeF,EAAOC,EAAO9H,EAAQmG,GAC1C,GAAI0B,GAASA,EAAMG,EAAG,CAClB,GAAIT,EAASnB,IAAIyB,GACb,OACJN,EAASlB,IAAIwB,GACbL,EAAO/I,EAAEgH,MAAK,KACV8B,EAAS7I,OAAOmJ,GACZ1B,IACInG,GACA6H,EAAMrH,EAAE,GACZ2F,IACH,IAEL0B,EAAMG,EAAEF,EACX,MACQ3B,GACLA,GAER,CACA,MAAM8B,GAAkB,CAAEpF,SAAU,GAwHpC,SAASqF,GAAgCnJ,EAAMrC,EAAIyL,EAAQC,GACvD,IAAIC,EAAS3L,EAAGqC,EAAMoJ,GAClB/E,EAAIgF,EAAQ,EAAI,EAChBE,EAAkB,KAClBC,EAAkB,KAClBC,EAAiB,KACrB,SAASC,IACDD,GACArE,EAAYpF,EAAMyJ,EACzB,CACD,SAASE,EAAKC,EAAS9F,GACnB,MAAMrC,EAAKmI,EAAQtL,EAAI+F,EAEvB,OADAP,GAAY+F,KAAKC,IAAIrI,GACd,CACHpD,EAAGgG,EACH/F,EAAGsL,EAAQtL,EACXmD,IACAqC,WACAiG,MAAOH,EAAQG,MACfC,IAAKJ,EAAQG,MAAQjG,EACrBmG,MAAOL,EAAQK,MAEtB,CACD,SAASC,EAAG5L,GACR,MAAMyF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGqG,OAAEA,EAAS3M,EAAQ4M,KAAEA,EAAO7M,EAAI8M,IAAEA,GAAQf,GAAUJ,GAC/EU,EAAU,CACZG,MAAO/K,IAAQ+E,EACfzF,KAECA,IAEDsL,EAAQK,MAAQxB,EAChBA,EAAOE,GAAK,GAEZY,GAAmBC,EACnBA,EAAkBI,GAKdS,IACAX,IACAD,EAAiB5F,EAAY7D,EAAMqE,EAAG/F,EAAGwF,EAAUC,EAAOoG,EAAQE,IAElE/L,GACA8L,EAAK,EAAG,GACZb,EAAkBI,EAAKC,EAAS9F,GAChC2C,GAAoB,IAAMmB,EAAS5H,EAAM1B,EAAG,WArmCxD,SAAc8I,GACV,IAAI3H,EACe,IAAfH,EAAMO,MACNV,EAAIK,GAEK,IAAI8G,SAAQgE,IACjBhL,EAAMgI,IAAI7H,EAAO,CAAEC,EAAG0H,EAAUxH,EAAG0K,GAAU,GAMzD,CA0lCYC,EAAKvL,IAUD,GATIwK,GAAmBxK,EAAMwK,EAAgBO,QACzCR,EAAkBI,EAAKH,EAAiB1F,GACxC0F,EAAkB,KAClB5B,EAAS5H,EAAMuJ,EAAgBjL,EAAG,SAC9B+L,IACAX,IACAD,EAAiB5F,EAAY7D,EAAMqE,EAAGkF,EAAgBjL,EAAGiL,EAAgBzF,SAAU,EAAGqG,EAAQb,EAAOe,OAGzGd,EACA,GAAIvK,GAAOuK,EAAgBS,IACvBI,EAAK/F,EAAIkF,EAAgBjL,EAAG,EAAI+F,GAChCuD,EAAS5H,EAAMuJ,EAAgBjL,EAAG,OAC7BkL,IAEGD,EAAgBjL,EAEhBoL,MAIOH,EAAgBU,MAAMtB,GACzB5K,EAAQwL,EAAgBU,MAAMvK,IAG1C6J,EAAkB,UAEjB,GAAIvK,GAAOuK,EAAgBQ,MAAO,CACnC,MAAM3F,EAAIpF,EAAMuK,EAAgBQ,MAChC1F,EAAIkF,EAAgBlL,EAAIkL,EAAgB9H,EAAI0I,EAAO/F,EAAImF,EAAgBzF,UACvEsG,EAAK/F,EAAG,EAAIA,EACf,CAEL,SAAUkF,IAAmBC,EAAgB,IAGxD,CACD,MAAO,CACH9L,IAAIY,GACIJ,EAAYoL,IAnQnBzC,IACDA,EAAUP,QAAQC,UAClBM,EAAQ2D,MAAK,KACT3D,EAAU,IAAI,KAGfA,GA8PY2D,MAAK,KAERlB,EAASA,IACTY,EAAG5L,EAAE,IAIT4L,EAAG5L,EAEV,EACD0L,MACIN,IACAH,EAAkBC,EAAkB,IACvC,EAET,CAqbA,SAASiB,GAAKzE,EAAWtE,EAAM0F,GAC3B,MAAMsD,EAAQ1E,EAAUkB,GAAGyD,MAAMjJ,QACnBkJ,IAAVF,IACA1E,EAAUkB,GAAG2D,MAAMH,GAAStD,EAC5BA,EAASpB,EAAUkB,GAAGQ,IAAIgD,IAElC,CACA,SAASI,GAAiBhC,GACtBA,GAASA,EAAMpJ,GACnB,CAIA,SAASqL,GAAgB/E,EAAWjG,EAAQgB,EAAQiK,GAChD,MAAMzD,SAAEA,EAAQ0D,SAAEA,EAAQC,WAAEA,EAAUvD,aAAEA,GAAiB3B,EAAUkB,GACnEK,GAAYA,EAAS4D,EAAEpL,EAAQgB,GAC1BiK,GAEDvE,GAAoB,KAChB,MAAM2E,EAAiBH,EAASI,IAAI3N,GAAK8H,OAAOtH,GAC5CgN,EACAA,EAAWxE,QAAQ0E,GAKnBrN,EAAQqN,GAEZpF,EAAUkB,GAAG+D,SAAW,EAAE,IAGlCtD,EAAa1J,QAAQwI,EACzB,CACA,SAAS6E,GAAkBtF,EAAW1E,GAClC,MAAM4F,EAAKlB,EAAUkB,GACD,OAAhBA,EAAGK,WACHxJ,EAAQmJ,EAAGgE,YACXhE,EAAGK,UAAYL,EAAGK,SAAS9F,EAAEH,GAG7B4F,EAAGgE,WAAahE,EAAGK,SAAW,KAC9BL,EAAGQ,IAAM,GAEjB,CACA,SAAS6D,GAAWvF,EAAWzE,IACI,IAA3ByE,EAAUkB,GAAGO,MAAM,KACnBxB,EAAiBS,KAAKV,GA10BrBQ,IACDA,GAAmB,EACnBH,EAAiBmE,KAAKzD,IA00BtBf,EAAUkB,GAAGO,MAAM+D,KAAK,IAE5BxF,EAAUkB,GAAGO,MAAOlG,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAASoI,GAAK3D,EAAW7D,EAASsJ,EAAUC,EAAiBC,EAAWhB,EAAOiB,EAAenE,EAAQ,EAAE,IACpG,MAAMoE,EAAmBlI,EACzBoC,EAAsBC,GACtB,MAAMkB,EAAKlB,EAAUkB,GAAK,CACtBK,SAAU,KACVG,IAAK,KAELiD,QACA1D,OAAQ1J,EACRoO,YACAd,MAAOjN,IAEPqN,SAAU,GACVC,WAAY,GACZY,cAAe,GACftE,cAAe,GACfG,aAAc,GACdoE,QAAS,IAAIrI,IAAIvB,EAAQ4J,UAAYF,EAAmBA,EAAiB3E,GAAG6E,QAAU,KAEtFC,UAAWpO,IACX6J,QACAwE,YAAY,EACZ9L,KAAMgC,EAAQpC,QAAU8L,EAAiB3E,GAAG/G,MAEhDyL,GAAiBA,EAAc1E,EAAG/G,MAClC,IAAI+L,GAAQ,EAkBZ,GAjBAhF,EAAGQ,IAAM+D,EACHA,EAASzF,EAAW7D,EAAQwI,OAAS,CAAE,GAAE,CAACpJ,EAAG4K,KAAQC,KACnD,MAAM5J,EAAQ4J,EAAK5K,OAAS4K,EAAK,GAAKD,EAOtC,OANIjF,EAAGQ,KAAOiE,EAAUzE,EAAGQ,IAAInG,GAAI2F,EAAGQ,IAAInG,GAAKiB,MACtC0E,EAAG+E,YAAc/E,EAAG2D,MAAMtJ,IAC3B2F,EAAG2D,MAAMtJ,GAAGiB,GACZ0J,GACAX,GAAWvF,EAAWzE,IAEvB4K,CAAG,IAEZ,GACNjF,EAAGD,SACHiF,GAAQ,EACRnO,EAAQmJ,EAAGM,eAEXN,EAAGK,WAAWmE,GAAkBA,EAAgBxE,EAAGQ,KAC/CvF,EAAQpC,OAAQ,CAChB,GAAIoC,EAAQkK,QAAS,CAEjB,MAAMC,EA33ClB,SAAkB7L,GACd,OAAO8L,MAAMC,KAAK/L,EAAQgM,WAC9B,CAy3C0BC,CAASvK,EAAQpC,QAE/BmH,EAAGK,UAAYL,EAAGK,SAASoF,EAAEL,GAC7BA,EAAMrO,QAAQgD,EACjB,MAGGiG,EAAGK,UAAYL,EAAGK,SAAS7H,IAE3ByC,EAAQkH,OACRR,GAAc7C,EAAUkB,GAAGK,UAC/BwD,GAAgB/E,EAAW7D,EAAQpC,OAAQoC,EAAQpB,OAAQoB,EAAQ6I,eAEnEjE,GACH,CACDhB,EAAsB8F,EAC1B,CAiDA,MAAMe,GACFC,WACIvB,GAAkBwB,KAAM,GACxBA,KAAKD,SAAWtP,CACnB,CACDwP,IAAI/E,EAAMZ,GACN,MAAM4E,EAAac,KAAK5F,GAAG8E,UAAUhE,KAAU8E,KAAK5F,GAAG8E,UAAUhE,GAAQ,IAEzE,OADAgE,EAAUtF,KAAKU,GACR,KACH,MAAMsD,EAAQsB,EAAUtG,QAAQ0B,IACjB,IAAXsD,GACAsB,EAAUgB,OAAOtC,EAAO,EAAE,CAErC,CACDuC,KAAKC,GA15DT,IAAkBC,EA25DNL,KAAKM,QA35DCD,EA25DkBD,EA15DG,IAA5BrP,OAAOwP,KAAKF,GAAK3L,UA25DhBsL,KAAK5F,GAAG+E,YAAa,EACrBa,KAAKM,MAAMF,GACXJ,KAAK5F,GAAG+E,YAAa,EAE5B,ECz8DE,MAAMqB,GAAW,UAeXC,GAAkB,CAAE5E,EAAG,GAAI6E,EAAG,IAAKlP,EAAG,KAKtCmP,GAAc,CAAE9E,EAAG,GAAI6E,EAAG,IAAKlP,EAAG,KAClCoP,GAAa,CAAE/E,EAAG,GAAI6E,EAAG,IAAKlP,EAAG,KACjCqP,GAAiB,CAAEhF,EAAG,IAAK6E,EAAG,IAAKlP,EAAG,KAGtCsP,GAAmB,CAC9B,CACElM,KAAM,SACNmM,MAAO,SACPC,KAAM,oCAER,CACEpM,KAAM,OACNmM,MAAO,OACPC,KAAM,kCAER,CACEpM,KAAM,aACNmM,MAAO,aACPC,KAAM,8BAER,CACEpM,KAAM,cACNmM,MAAO,eACPC,KAAM,sCAER,CACEpM,KAAM,QACNmM,MAAO,QACPC,KAAM,sCAER,CACEpM,KAAM,YACNmM,MAAO,YACPC,KAAM,+CAER,CACEpM,KAAM,SACNmM,MAAO,SACPC,KAAM,oCAER,CACEpM,KAAM,MACNmM,MAAO,MACPC,KAAM,wCAER,CACEpM,KAAM,SACNmM,MAAO,SACPC,KAAM,oCAER,CACEpM,KAAM,QACNmM,MAAO,QACPC,KAAM,+BAER,CACEpM,KAAM,QACNmM,MAAO,QACPC,KAAM,gDAER,CACEpM,KAAM,YACNmM,MAAO,YACPC,KAAM,oCAER,CACEpM,KAAM,QACNmM,MAAO,QACPC,KAAM,6BAER,CACEpM,KAAM,aACNmM,MAAO,gBACPC,KAAM,4CAiGGC,GAAoB,CAC/B,CACErM,KAAM,eACNoM,KAAM,+CACNE,IAAK,0BAEP,CACEtM,KAAM,gBACNoM,KAAM,+CACNE,IAAK,4BAIIC,GAAc,CACzB,CACEvM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,WAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,MACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,oBAEV,CACEzM,KAAM,OACNwM,OAAQ,OACRC,OAAQ,qBAICC,GAAgB,IAAI1K,IAAI,CACnC,CAAC,UAAW,CACVhC,KAAM,UACNmM,MAAO,UACPnP,IAAK,yBAEP,CAAC,mBAAoB,CACnBgD,KAAM,mBACNmM,MAAO,sBACPnP,IAAK,8CAKI2P,GAAa,CAExB,SACA,WACA,UACA,QACA,SACA,UACA,SACA,OACA,MACA,WACA,SACA,OACA,aACA,SACA,OACA,cACA,KACA,UACA,KACA,QACA,cACA,cACA,mBACA,eACA,WACA,gBACA,YACA,YACA,SACA,gBACA,aACA,YACA,MACA,eACA,YACA,aACA,cACA,WACA,UACA,MACA,QACA,aACA,UACA,SACA,MACA,QACA,YACA,QACA,OACA,YACA,aACA,SACA,MACA,cACA,SACA,WACA,UACA,WACA,OACA,OAGA,cACA,mBACA,kBACA,eACA,QACA,YACA,OACA,SACA,OACA,UACA,aAEA,MACA,iBACA,UACA,QACA,SACA,SACA,UAEA,KACA,OACA,aACA,KACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,UACA,WACA,KACA,WACA,QACA,QACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,SACA,QACA,aACA,UACA,OACA,OACA,SACA,WAGA,YACA,kBACA,gBACA,QAGA,UACA,cACA,SACA,mBCnqBIC,GAAmB,GCDlB,MAAMC,GDiBb,SAAkB/L,EAAOuH,EAAQxM,GAC7B,IAAIiR,EACJ,MAAMC,EAAc,IAAIlP,IACxB,SAASwF,EAAI2J,GACT,GAAItQ,EAAeoE,EAAOkM,KACtBlM,EAAQkM,EACJF,GAAM,CACN,MAAMG,GAAaL,GAAiB9M,OACpC,IAAK,MAAMoN,KAAcH,EACrBG,EAAW,KACXN,GAAiB5H,KAAKkI,EAAYpM,GAEtC,GAAImM,EAAW,CACX,IAAK,IAAIpN,EAAI,EAAGA,EAAI+M,GAAiB9M,OAAQD,GAAK,EAC9C+M,GAAiB/M,GAAG,GAAG+M,GAAiB/M,EAAI,IAEhD+M,GAAiB9M,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAEuD,MAAKkC,OAlBd,SAAgBtJ,GACZoH,EAAIpH,EAAG6E,GACV,EAgBq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"}