{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/config.js","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/data/storage.js","../../src/components/Cover.svelte","../../src/components/QuickNav.svelte","../../src/components/SearchBar/Clock.svelte","../../src/components/SearchBar/RandomGithub.svelte","../../src/components/SearchBar/SearchBar.svelte","../../src/components/SpeedDial.svelte","../../src/components/Settings/SettingsForm.svelte","../../src/components/Settings/CustomBackgrounds.svelte","../../src/components/Settings/Backgrounds.svelte","../../src/components/Settings/Pages.svelte","../../src/components/Settings/Settings.svelte","../../src/components/Notes/Note.svelte","../../src/components/Notes/Notes.svelte","../../src/components/Entertainment.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*Default settings*/\r\nexport const yourName = \"New Tab\";\r\nexport const isBackgroundWhite = false;\r\nexport const showCover = true;\r\nexport const clockBackground = false;\r\nexport const backgroundImage = \"bg1\";\r\nexport const tileMinWidth = 20;\r\nexport const tileHeight = 55;\r\nexport const tileGap = 0;\r\nexport const navbarOpacity = 0;\r\nexport const navbarColor = { r: 58, g: 153, b: 255 };\r\nexport const coverColor = { r: 58, g: 153, b: 255 };\r\nexport const coverTextColor = { r: 255, g: 255, b: 255 };\r\n\r\nexport const notes = [];\r\n\r\nexport const pages = [\r\n  {\r\n    link: \"https://www.google.com\",\r\n    imageName: \"google.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.facebook.com\",\r\n    imageName: \"facebook.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.youtube.com\",\r\n    imageName: \"youtube.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.yahoo.com\",\r\n    imageName: \"yahoo.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.reddit.com\",\r\n    imageName: \"reddit.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.netflix.com/browse\",\r\n    imageName: \"netflix.jpg\",\r\n    isActive: true,\r\n  },\r\n];\r\n\r\nexport const entertainmentData = [\r\n  {\r\n    name: \"Hangman Game\",\r\n    link: \"https://klibrdm.github.io/hangman-game-react\",\r\n    img: \"hangman-game-icon.png\",\r\n  },\r\n  {\r\n    name: \"Business Club\",\r\n    link: \"https://klibrdm.github.io/business-club-game\",\r\n    img: \"business-club-icon.png\",\r\n  },\r\n];\r\n\r\nexport const backgrounds = [\r\n  \"bg1\",\r\n  \"bg2\",\r\n  \"bg3\",\r\n  \"bg4\",\r\n  \"bg5\",\r\n  \"bg6\",\r\n  \"bg7\",\r\n  \"bg8\",\r\n  \"bg9\",\r\n  \"bg10\",\r\n  \"bg11\",\r\n  \"bg12\",\r\n  \"bg13\",\r\n  \"bg14\",\r\n  \"bg15\",\r\n  \"bg16\",\r\n  \"bg17\",\r\n  \"bg18\",\r\n  \"bg19\",\r\n  \"bg20\",\r\n];\r\n\r\n//Known pages are the ones that have a thumbnail image\r\nexport const knownPages = [\r\n  //V1.0\r\n  \"google\",\r\n  \"facebook\",\r\n  \"youtube\",\r\n  \"yahoo\",\r\n  \"reddit\",\r\n  \"netflix\",\r\n  \"github\",\r\n  \"emag\",\r\n  \"pcg\",\r\n  \"pcgarage\",\r\n  \"amazon\",\r\n  \"ebay\",\r\n  \"craigslist\",\r\n  \"twitch\",\r\n  \"9gag\",\r\n  \"accuweather\",\r\n  \"yr\",\r\n  \"twitter\",\r\n  \"vk\",\r\n  \"gmail\",\r\n  \"maps.google\",\r\n  \"docs.google\",\r\n  \"translate.google\",\r\n  \"drive.google\",\r\n  \"onedrive\",\r\n  \"onedrive.live\",\r\n  \"instagram\",\r\n  \"pinterest\",\r\n  \"tumblr\",\r\n  \"stackoverflow\",\r\n  \"codecademy\",\r\n  \"w3schools\",\r\n  \"php\",\r\n  \"thepiratebay\",\r\n  \"piratebay\",\r\n  \"pirateship\",\r\n  \"pirateproxy\",\r\n  \"filelist\",\r\n  \"kickass\",\r\n  \"kat\",\r\n  \"katcr\",\r\n  \"aliexpress\",\r\n  \"alibaba\",\r\n  \"paypal\",\r\n  \"olx\",\r\n  \"baidu\",\r\n  \"wikipedia\",\r\n  \"tmall\",\r\n  \"live\",\r\n  \"microsoft\",\r\n  \"list.tmall\",\r\n  \"office\",\r\n  \"msn\",\r\n  \"pages.tmall\",\r\n  \"yandex\",\r\n  \"whatsapp\",\r\n  \"spotify\",\r\n  \"linkedin\",\r\n  \"csdn\",\r\n  \"bing\",\r\n\r\n  //V2.0 (1)\r\n  \"meet.google\",\r\n  \"classroom.google\",\r\n  \"teams.microsoft\",\r\n  \"web.whatsapp\",\r\n  \"skype\",\r\n  \"web.skype\",\r\n  \"zoom\",\r\n  \"tiktok\",\r\n  \"wish\",\r\n  \"discord\",\r\n  \"discordapp\",\r\n  //V2.0 (2)\r\n  \"g2a\",\r\n  \"instant-gaming\",\r\n  \"kinguin\",\r\n  \"eneba\",\r\n  \"cdkeys\",\r\n  \"gamivo\",\r\n  \"hrkgame\",\r\n  //V2.0 (3)\r\n  \"qq\",\r\n  \"mail\",\r\n  \"duckduckgo\",\r\n  \"ok\",\r\n  \"okru\",\r\n  \"sogou\",\r\n  \"globo\",\r\n  \"taobao\",\r\n  \"naver\",\r\n  \"quora\",\r\n  \"imdb\",\r\n  \"uol\",\r\n  \"bbc\",\r\n  \"cnn\",\r\n  \"booking\",\r\n  \"cricbuzz\",\r\n  \"jd\",\r\n  \"bilibili\",\r\n  \"youtu\",\r\n  \"imgur\",\r\n  \"foxnews\",\r\n  \"rakuten\",\r\n  \"viber\",\r\n  \"weather\",\r\n  \"walmart\",\r\n  \"costco\",\r\n  \"walgreens\",\r\n  \"homedepot\",\r\n  \"target\",\r\n  \"lowes\",\r\n  \"albertsons\",\r\n  \"bestbuy\",\r\n  \"ikea\",\r\n  \"jysk\",\r\n  \"newegg\",\r\n  \"gamestop\",\r\n];\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const userData = writable({});\r\n","import * as CONFIG from \"./config\";\r\nimport { userData } from \"../store\";\r\n\r\nexport const saveConfig = (data) => {\r\n  localStorage.setItem(\"ft\", true);\r\n  localStorage.setItem(\"yourName\", data.yourName);\r\n  localStorage.setItem(\"isBackgroundWhite\", data.isBackgroundWhite);\r\n  localStorage.setItem(\"showCover\", data.showCover);\r\n  localStorage.setItem(\"clockBackground\", data.clockBackground);\r\n  localStorage.setItem(\"backgroundImage\", data.backgroundImage);\r\n  localStorage.setItem(\"tileMinWidth\", data.tileMinWidth);\r\n  localStorage.setItem(\"tileHeight\", data.tileHeight);\r\n  localStorage.setItem(\"tileGap\", data.tileGap);\r\n  localStorage.setItem(\"navbarOpacity\", data.navbarOpacity);\r\n  localStorage.setItem(\"navbarColor\", JSON.stringify(data.navbarColor));\r\n  localStorage.setItem(\"coverColor\", JSON.stringify(data.coverColor));\r\n  localStorage.setItem(\"coverTextColor\", JSON.stringify(data.coverTextColor));\r\n  localStorage.setItem(\"notes\", JSON.stringify(data.notes));\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n};\r\n\r\nexport const saveBackground = (bg) => {\r\n  localStorage.setItem(\"backgroundImage\", bg);\r\n};\r\n\r\nexport const saveNotes = (notes) => {\r\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n};\r\n\r\n/*Load data from localstorage\r\nIf the extension can't get the item from localstorage, use the value from config\r\n(simple || if not bool, ? : if bool)*/\r\n//prettier-ignore\r\nconst data = {\r\n  yourName: \r\n    localStorage.getItem(\"yourName\") ||\r\n    CONFIG.yourName,\r\n\r\n  isBackgroundWhite:\r\n    localStorage.getItem(\"isBackgroundWhite\") === null\r\n    ? CONFIG.isBackgroundWhite\r\n    : localStorage.getItem(\"isBackgroundWhite\") === \"true\",\r\n\r\n  showCover: \r\n    localStorage.getItem(\"showCover\") === null \r\n    ? CONFIG.showCover\r\n    : localStorage.getItem(\"showCover\") === \"true\",\r\n\r\n  clockBackground:\r\n    localStorage.getItem(\"clockBackground\") === null\r\n    ? CONFIG.clockBackground\r\n    : localStorage.getItem(\"clockBackground\") === \"true\",\r\n\r\n  backgroundImage:\r\n    localStorage.getItem(\"backgroundImage\") ||\r\n    CONFIG.backgroundImage,\r\n\r\n  tileMinWidth:\r\n    localStorage.getItem(\"tileMinWidth\") ||\r\n    CONFIG.tileMinWidth,\r\n\r\n  tileHeight:\r\n    localStorage.getItem(\"tileHeight\") ||\r\n    CONFIG.tileHeight,\r\n\r\n  tileGap:\r\n    localStorage.getItem(\"tileGap\") ||\r\n    CONFIG.tileGap,\r\n\r\n  navbarOpacity:\r\n    localStorage.getItem(\"navbarOpacity\") ||\r\n    CONFIG.navbarOpacity,\r\n\r\n  navbarColor:\r\n    JSON.parse(localStorage.getItem(\"navbarColor\")) ||\r\n    CONFIG.navbarColor,\r\n\r\n  coverColor:\r\n    JSON.parse(localStorage.getItem(\"coverColor\")) ||\r\n    CONFIG.coverColor,\r\n\r\n  coverTextColor:\r\n    JSON.parse(localStorage.getItem(\"coverTextColor\")) ||\r\n    CONFIG.coverTextColor,\r\n\r\n  notes:\r\n    JSON.parse(localStorage.getItem(\"notes\")) ||\r\n    CONFIG.notes,\r\n\r\n  pages:\r\n    JSON.parse(localStorage.getItem(\"pages\")) ||\r\n    CONFIG.pages,\r\n};\r\n\r\n/*Import pages data from legacy 1.1 version\r\nData was stored in cookies instead of local storage*/\r\nlet legacyPagesCookie = getCookie(\"pages\");\r\n\r\nif (legacyPagesCookie != null) {\r\n  let oldPages = [];\r\n  let legacyPagesParsedCookie = JSON.parse(legacyPagesCookie);\r\n\r\n  //Old data also had a different format\r\n  //Therefore it has to be converted\r\n  legacyPagesParsedCookie.forEach((page, index) => {\r\n    oldPages[index] = {\r\n      link: page[0],\r\n      imageName: page[1],\r\n      isActive: page[2] ? true : false,\r\n    };\r\n  });\r\n\r\n  data.pages = oldPages;\r\n  eraseCookie(\"pages\");\r\n  saveConfig(data);\r\n}\r\n\r\n//After loading the data, set it to state\r\nuserData.set(data);\r\n\r\n//Cookie management functions to restore legacy data\r\nfunction getCookie(name) {\r\n  let nameEQ = name + \"=\";\r\n  let ca = document.cookie.split(\";\");\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction eraseCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let yourName;\r\n  let showCover;\r\n  let coverColor;\r\n  let coverTextColor;\r\n\r\n  userData.subscribe((data) => {\r\n    yourName = data.yourName;\r\n    showCover = data.showCover;\r\n    coverColor = data.coverColor;\r\n    coverTextColor = data.coverTextColor;\r\n  });\r\n\r\n  //Creating a second variable for showCover\r\n  //that doesn't change when state updates\r\n  //Otherwise the cover would show when saving changes\r\n  let showCoverAtLoad = showCover;\r\n\r\n  //Any time showCoverAtLoad changes (it shouldn't)\r\n  //Hide it after 1.5 seconds\r\n  $: if (showCoverAtLoad) {\r\n    setTimeout(function () {\r\n      showCoverAtLoad = false;\r\n    }, 1500);\r\n  }\r\n</script>\r\n\r\n{#if showCoverAtLoad}\r\n  <div\r\n    id=\"cover\"\r\n    style=\"\r\n      background-color: \r\n        rgb({coverColor.r},{coverColor.g},{coverColor.b}); \r\n      color: \r\n        rgb({coverTextColor.r},{coverTextColor.g},{coverTextColor.b});\"\r\n  >\r\n    <div id=\"coverNameBox\">\r\n      <h1>{yourName}</h1>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #cover {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    animation: remove-cover-up 0.35s;\r\n    animation-fill-mode: forwards;\r\n    animation-delay: 0.8s;\r\n    z-index: 995;\r\n  }\r\n  #coverNameBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n  #coverNameBox h1 {\r\n    font-size: 9vw;\r\n    font-weight: 500;\r\n    animation: title-disappear 0.35s;\r\n    animation-delay: 0.35s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 999;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n</style>\r\n","<script>\r\n  const onClickChromeTabs = (elem) => {\r\n    chrome.tabs.create({ url: `chrome://${elem}` });\r\n  };\r\n</script>\r\n\r\n<div id=\"browserQuickNavBox\">\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"history\")}>\r\n    <i class=\"fas fa-history browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"downloads\")}>\r\n    <i class=\"fas fa-download browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"bookmarks\")}>\r\n    <i class=\"fas fa-bookmark browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"extensions\")}>\r\n    <i class=\"fas fa-puzzle-piece browserQuickNavButton\" />\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  #browserQuickNavBox {\r\n    position: absolute;\r\n    left: 2vw;\r\n    z-index: 45;\r\n  }\r\n  .browserQuickNavButton {\r\n    color: rgba(220, 220, 220, 0.75);\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    padding: 5px 10px;\r\n    transition: 0.3s;\r\n  }\r\n  .browserQuickNavButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .browserQuickNavButton {\r\n      padding: 4px 7px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let clockBackground;\r\n\r\n  userData.subscribe((data) => {\r\n    clockBackground = data.clockBackground;\r\n  });\r\n\r\n  let time = new Date();\r\n  let hours = (\"0\" + time.getHours()).slice(-2);\r\n  let minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n\r\n  //Update time every second\r\n  setInterval(() => {\r\n    time = new Date();\r\n    hours = (\"0\" + time.getHours()).slice(-2);\r\n    minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n  }, 1000);\r\n</script>\r\n\r\n<!--Use clockbg class only if clockBackground is true-->\r\n<div id=\"time\" class:clockbg={clockBackground}>\r\n  {hours}:<span id=\"minutes\">{minutes}</span>\r\n</div>\r\n\r\n<style>\r\n  #time {\r\n    position: absolute;\r\n    font-size: 3.6vw;\r\n    right: 2vw;\r\n    color: white;\r\n    border-radius: 12px;\r\n    padding: 3px 5px;\r\n    line-height: 4.6vw;\r\n  }\r\n  #minutes {\r\n    font-size: 2.6vw;\r\n    color: rgb(236, 236, 236);\r\n  }\r\n  .clockbg {\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #time {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1921px) and (max-height: 769px) {\r\n    #time {\r\n      font-size: 3vw;\r\n      line-height: 3.4vw;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  let showGithub = false;\r\n\r\n  //innerWidth will get the window innerWidth\r\n  let innerWidth = 0;\r\n\r\n  setInterval(function () {\r\n    let chance = Math.floor(Math.random() * 200);\r\n\r\n    //Only show github logo if random chance matches\r\n    //and window width is bigger than 799 pixels\r\n    if (chance == 1 && innerWidth > 799) {\r\n      showGithub = true;\r\n    } else {\r\n      showGithub = false;\r\n    }\r\n  }, 15000);\r\n</script>\r\n\r\n<svelte:window bind:innerWidth />\r\n\r\n{#if showGithub}\r\n  <div id=\"randomGithub\">\r\n    <a href=\"https://github.com/KlibrDM\">\r\n      <i class=\"fab fa-github\" style=\"color: white\" />\r\n    </a>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #randomGithub {\r\n    position: absolute;\r\n    left: 2vw;\r\n    font-size: 3vw;\r\n    animation: wobble-hor-bottom 0.8s infinite;\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #randomGithub {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import Clock from \"./Clock.svelte\";\r\n  import RandomGithub from \"./RandomGithub.svelte\";\r\n  import { userData } from \"../../store\";\r\n\r\n  let searchQuery = \"\"; //Binded to input\r\n  let navbarOpacity;\r\n  let navbarColor;\r\n\r\n  userData.subscribe((data) => {\r\n    navbarOpacity = data.navbarOpacity;\r\n    navbarColor = data.navbarColor;\r\n  });\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery !== \"\") {\r\n      window.location.assign(\r\n        \"https://www.google.com/search?q=\" + escapeHTML(searchQuery)\r\n      );\r\n    }\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n</script>\r\n\r\n<div\r\n  id=\"searchbarBox\"\r\n  style=\"background-color: rgba({navbarColor.r},{navbarColor.g},{navbarColor.b},{navbarOpacity})\"\r\n>\r\n  <RandomGithub />\r\n  <form id=\"searchbar\" on:submit={handleSearch}>\r\n    <input\r\n      id=\"searchInput\"\r\n      type=\"search\"\r\n      autocomplete=\"off\"\r\n      placeholder=\"Search\"\r\n      bind:value={searchQuery}\r\n    />\r\n    <button id=\"searchButton\">\r\n      <i class=\"fas fa-search\" style=\"color: white\" />\r\n    </button>\r\n  </form>\r\n  <Clock />\r\n</div>\r\n\r\n<style>\r\n  #searchbarBox {\r\n    flex-basis: 25%;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  #searchbar {\r\n    width: 50vw;\r\n    border-radius: 100px;\r\n    border: 2px solid;\r\n    border-color: rgba(0, 0, 0, 0.4);\r\n    display: flex;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n  }\r\n  #searchbar:hover {\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n  }\r\n  #searchInput {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: white;\r\n    text-indent: calc(8px + 0.8vw);\r\n    border: 0;\r\n    min-height: 40px;\r\n    height: 7vh;\r\n    min-width: 50px;\r\n    flex-grow: 1;\r\n    font-size: calc(8px + 1.4vh);\r\n  }\r\n  #searchInput::placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput::-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:focus {\r\n    outline: none;\r\n  }\r\n  #searchInput:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 30px white inset !important;\r\n    box-shadow: 0 0 0 30px white inset !important;\r\n    border-radius: 100px;\r\n  }\r\n  #searchButton {\r\n    padding-left: calc(8px + 0.8vw);\r\n    padding-right: calc(8px + 0.8vw);\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: calc(8px + 1vh);\r\n  }\r\n  #searchButton:focus {\r\n    border-radius: 100px;\r\n    outline: none !important;\r\n    outline-style: none;\r\n    box-shadow: none;\r\n    border-color: transparent;\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #searchbar {\r\n      width: 75vw;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let pages = [];\r\n  let tileMinWidth;\r\n  let tileHeight;\r\n  let tileGap;\r\n\r\n  userData.subscribe((data) => {\r\n    pages = data.pages;\r\n    tileMinWidth = data.tileMinWidth;\r\n    tileHeight = data.tileHeight;\r\n    tileGap = data.tileGap;\r\n  });\r\n</script>\r\n\r\n<!--This will show the pages!!!-->\r\n<div class=\"speedDial\">\r\n  <div class=\"speedDialBox\">\r\n    <div class=\"buttons\" style=\"gap: {tileGap}vw\">\r\n      {#each pages as page}\r\n        {#if page.isActive}\r\n          <!-- svelte-ignore a11y-missing-content -->\r\n          <a\r\n            href={page.link}\r\n            class=\"pageButton\"\r\n            style=\"background-image: url('static/images/thumbnails/{page.imageName}');\r\n              min-width: {tileMinWidth}vh;\r\n              height: {tileHeight}vh;\r\n              {tileHeight < tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n              \"\r\n          />\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .speedDialBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n    overflow-x: hidden;\r\n    padding-top: 2em;\r\n    padding-bottom: 2em;\r\n    box-sizing: border-box;\r\n  }\r\n  .buttons {\r\n    width: 75vw;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 0px;\r\n  }\r\n  .pageButton {\r\n    min-width: 180px;\r\n    flex-grow: 1;\r\n    background-position: center;\r\n    background-size: cover;\r\n    z-index: 0;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  .pageButton:hover {\r\n    animation: pop-out 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 2;\r\n  }\r\n  .pageButton:not(:hover) {\r\n    animation: pop-back 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 1;\r\n    transition: z-index 0.25s;\r\n  }\r\n</style>\r\n","<script>\r\n  export let settingsData;\r\n  export let saveSettings;\r\n  let unsavedSettings = false;\r\n</script>\r\n\r\n<form\r\n  id=\"settingsform\"\r\n  on:submit={(e) => {\r\n    saveSettings(settingsData, e);\r\n    unsavedSettings = false;\r\n  }}\r\n>\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_yourName\">Your name</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"set_yourName\"\r\n      name=\"set_yourName\"\r\n      class=\"settingsTextInput\"\r\n      bind:value={settingsData.yourName}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_isBackgroundWhite\">White background</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_isBackgroundWhite\"\r\n      name=\"set_isBackgroundWhite\"\r\n      bind:checked={settingsData.isBackgroundWhite}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_showCover\">Show cover</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_showCover\"\r\n      name=\"set_showCover\"\r\n      bind:checked={settingsData.showCover}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_clockBackground\">Clock background</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_clockBackground\"\r\n      name=\"set_clockBackground\"\r\n      bind:checked={settingsData.clockBackground}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileMinimumWidth\">Tile minimum width</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"10\"\r\n      max=\"300\"\r\n      step=\"1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileMinimumWidth\"\r\n      name=\"set_tileMinimumWidth\"\r\n      bind:value={settingsData.tileMinWidth}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileHeight\">Tile height</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"5\"\r\n      max=\"80\"\r\n      step=\"1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileHeight\"\r\n      name=\"set_tileHeight\"\r\n      bind:value={settingsData.tileHeight}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileGap\">Tile gap</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"30\"\r\n      step=\"0.1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileGap\"\r\n      name=\"set_tileGap\"\r\n      bind:value={settingsData.tileGap}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_navbarOpacity\">Navbar opacity</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"1\"\r\n      step=\"0.01\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_navbarOpacity\"\r\n      name=\"set_navbarOpacity\"\r\n      bind:value={settingsData.navbarOpacity}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Navbar color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorR\"\r\n      name=\"set_navbarColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.navbarColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorG\"\r\n      name=\"set_navbarColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.navbarColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorB\"\r\n      name=\"set_navbarColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.navbarColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Cover color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorR\"\r\n      name=\"set_coverColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.coverColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorG\"\r\n      name=\"set_coverColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.coverColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorB\"\r\n      name=\"set_coverColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.coverColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Cover text color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorR\"\r\n      name=\"set_coverTextColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.coverTextColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorG\"\r\n      name=\"set_coverTextColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.coverTextColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorB\"\r\n      name=\"set_coverTextColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.coverTextColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  {#if unsavedSettings}\r\n    <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n  {/if}\r\n\r\n  <button type=\"submit\" class=\"saveSettingsButton\">Save</button>\r\n</form>\r\n\r\n<style>\r\n  .settingsInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 5px;\r\n  }\r\n  .settingsInput label {\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n  }\r\n  .settingsInput input:out-of-range {\r\n    background-color: rgba(255, 0, 0, 0.15);\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .settingsNumberInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .settingsMultiNumberInput {\r\n    width: 50px;\r\n    margin-right: 1px;\r\n    padding: 2px 4px;\r\n    border-radius: 10px;\r\n    outline: none;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsMultiNumberInput {\r\n      width: 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  export let changeBackground;\r\n  let bg, fileinput;\r\n\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      changeBackground(bg);\r\n    };\r\n  };\r\n</script>\r\n\r\n<div id=\"customBackgrounds\">\r\n  <h4>Custom Background</h4>\r\n  <button\r\n    class=\"chan\"\r\n    on:click={() => {\r\n      fileinput.click();\r\n    }}\r\n  >\r\n    Upload image\r\n  </button>\r\n  <input\r\n    style=\"display:none\"\r\n    type=\"file\"\r\n    accept=\".jpg, .jpeg, .png\"\r\n    on:change={(e) => onFileSelected(e)}\r\n    bind:this={fileinput}\r\n  />\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  button {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  button:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n</style>\r\n","<script>\r\n  import CustomBackgrounds from \"./CustomBackgrounds.svelte\";\r\n\r\n  export let backgrounds;\r\n  export let changeBackground;\r\n</script>\r\n\r\n<div id=\"settingsBackgrounds\">\r\n  {#each backgrounds as bg, index}\r\n    <img\r\n      src=\"static/images/bg/thumbnails/{bg}.jpg\"\r\n      alt=\"Background {index}\"\r\n      class=\"backgroundImageSelector\"\r\n      on:click={() => changeBackground(bg)}\r\n    />\r\n  {/each}\r\n</div>\r\n<small>\r\n  Background images provided by <a href=\"https://pixabay.com/\">Pixabay</a>\r\n</small>\r\n<CustomBackgrounds {changeBackground} />\r\n\r\n<style>\r\n  #settingsBackgrounds {\r\n    white-space: nowrap;\r\n    overflow-x: scroll;\r\n    display: flex;\r\n    gap: 3px;\r\n    padding-top: 2px;\r\n    padding-bottom: 2px;\r\n  }\r\n  .backgroundImageSelector {\r\n    max-width: 100px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .backgroundImageSelector:hover {\r\n    filter: drop-shadow(0px 0px 2px rgb(80, 80, 80));\r\n    transform: scale(1.03);\r\n    z-index: 2;\r\n  }\r\n</style>\r\n","<script>\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let saveSettings;\r\n  export let movePage;\r\n  let unsavedPages = false;\r\n  let addPageInput = \"\"; //Binded to input\r\n</script>\r\n\r\n<div id=\"settingsPages\">\r\n  <div id=\"settingsPagesList\">\r\n    {#each settingsData.pages as page, index}\r\n      <div class=\"settingsPagesListPage\">\r\n        <div class=\"settingsPagesGroupLeft\">\r\n          <div class=\"settingsPagesMoveButtons\">\r\n            <button\r\n              on:click={() => {\r\n                movePage(index, \"up\");\r\n                unsavedPages = true;\r\n              }}\r\n            >\r\n              <i class=\"fa-solid fa-angle-up\" />\r\n            </button>\r\n            <button\r\n              on:click={() => {\r\n                movePage(index, \"down\");\r\n                unsavedPages = true;\r\n              }}\r\n            >\r\n              <i class=\"fa-solid fa-angle-down\" />\r\n            </button>\r\n          </div>\r\n          <label for=\"page\">{page.link}</label>\r\n        </div>\r\n        <div class=\"settingsPageListButtons\">\r\n          <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} />\r\n          <input\r\n            on:click={() => {\r\n              deletePage(index);\r\n              unsavedPages = true;\r\n            }}\r\n            type=\"button\"\r\n            class=\"pageDeleteButton\"\r\n            value=\"X\"\r\n          />\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <form\r\n    class=\"settingsPageInput\"\r\n    on:submit={(e) => {\r\n      addPage(addPageInput, e);\r\n\r\n      //Clear page input after adding it\r\n      addPageInput = \"\";\r\n\r\n      unsavedPages = true;\r\n    }}\r\n  >\r\n    <label for=\"set_newPageBox\">Link</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"set_newPageBox\"\r\n      class=\"settingsTextInput\"\r\n      bind:value={addPageInput}\r\n      required={true}\r\n    />\r\n    <button type=\"submit\" class=\"addPageButton\">Add</button>\r\n  </form>\r\n\r\n  {#if unsavedPages}\r\n    <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n  {/if}\r\n\r\n  <button\r\n    on:click={(e) => {\r\n      saveSettings(settingsData, e);\r\n      unsavedPages = false;\r\n    }}\r\n    type=\"submit\"\r\n    class=\"saveSettingsButton\"\r\n  >\r\n    Save\r\n  </button>\r\n</div>\r\n\r\n<style>\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .addPageButton {\r\n    padding: 4px 15px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .addPageButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #settingsPages {\r\n    background-color: rgb(245, 245, 245);\r\n    border: 1px solid lightgray;\r\n    padding: 8px 8px;\r\n    border-radius: 20px;\r\n    overflow-x: auto;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n  }\r\n  .settingsPagesListPage label {\r\n    overflow-wrap: anywhere;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    width: 14px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    height: 12px;\r\n    font-size: 10px;\r\n    padding: 0;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsPagesMoveButtons button:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { backgrounds, knownPages } from \"../../data/config\";\r\n  import { saveConfig, saveBackground } from \"../../data/storage\";\r\n\r\n  import SettingsForm from \"./SettingsForm.svelte\";\r\n  import Backgrounds from \"./Backgrounds.svelte\";\r\n  import Pages from \"./Pages.svelte\";\r\n\r\n  let settingsData = {}; //Local data for settings\r\n  let isPanelShown = false;\r\n\r\n  const toggleSettingsPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Subscribe to the entire userData\r\n  userData.subscribe((data) => {\r\n    settingsData = data;\r\n  });\r\n\r\n  const saveSettings = (settingsData, event) => {\r\n    event.preventDefault();\r\n\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(settingsData.yourName);\r\n      state.isBackgroundWhite = settingsData.isBackgroundWhite;\r\n      state.showCover = settingsData.showCover;\r\n      state.clockBackground = settingsData.clockBackground;\r\n      state.tileMinWidth = settingsData.tileMinWidth;\r\n      state.tileHeight = settingsData.tileHeight;\r\n      state.tileGap = settingsData.tileGap;\r\n      state.navbarOpacity = settingsData.navbarOpacity;\r\n      state.navbarColor = settingsData.navbarColor;\r\n      state.coverColor = settingsData.coverColor;\r\n      state.coverTextColor = settingsData.coverTextColor;\r\n      state.pages = settingsData.pages;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const changeBackground = (bg) => {\r\n    settingsData.backgroundImage = bg;\r\n\r\n    try {\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      saveBackground(settingsData.backgroundImage);\r\n\r\n      //Update background state IF it didn't fail saving to localstorage\r\n      userData.update((state) => {\r\n        state.backgroundImage = settingsData.backgroundImage;\r\n        return state;\r\n      });\r\n    } catch {\r\n      alert(\r\n        \"Background image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const addPage = (addPageInput, event) => {\r\n    event.preventDefault();\r\n\r\n    //Will add http:// if user didn't already do it\r\n    let linkToAdd = checkWebsite(addPageInput);\r\n\r\n    //Update pages state\r\n    settingsData.pages.push({\r\n      link: escapeHTML(linkToAdd),\r\n      imageName: getImageNameFor(linkToAdd),\r\n      isActive: true,\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const deletePage = (index) => {\r\n    //Delete 1 element from specified index\r\n    settingsData.pages.splice(index, 1);\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const movePage = (index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index == 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index == settingsData.pages.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = settingsData.pages[index];\r\n\r\n    //Remove current item from old location\r\n    settingsData.pages.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      settingsData.pages.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      settingsData.pages.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const checkWebsite = (pageName) => {\r\n    if (pageName.substring(0, 4) == \"http\") {\r\n      return pageName;\r\n    } else {\r\n      return \"http://\" + pageName;\r\n    }\r\n  };\r\n\r\n  const getImageNameFor = (link) => {\r\n    //Get page name from provided link\r\n    let name = extractWebsiteName(link).toLowerCase();\r\n\r\n    if (knownPages.includes(name)) {\r\n      //Return the image name if the extension has it\r\n      return name + \".jpg\";\r\n    } else if (\"1234567890qwertyuiopasdfghjklzxcvbnm\".includes(name[0])) {\r\n      //Return the image for the first letter\r\n      return name[0] + \".jpg\";\r\n    } else {\r\n      return \"_.jpg\";\r\n    }\r\n  };\r\n\r\n  const extractWebsiteName = (link) => {\r\n    let sitename = link;\r\n\r\n    //Remove http(s)://\r\n    sitename = sitename.substring(sitename.indexOf(\"://\") + 3);\r\n\r\n    //Remove www. if existent\r\n    if (sitename.substring(0, 3) == \"www\") {\r\n      sitename = sitename.substring(4);\r\n    }\r\n\r\n    //Remove ending (.com etc) (if found)\r\n    if (sitename.lastIndexOf(\".\") != -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    //Do it twice for those that have .co or .com\r\n    if (sitename.slice(-3) == \".co\" || sitename.slice(-4) == \".com\") {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    return sitename;\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n\r\n  //Transition\r\n  function slide() {\r\n    return {\r\n      duration: 300,\r\n      css: (t, u) => `transform: translateX(${u * 100}%)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleSettingsPanel}\r\n  id=\"settingsButton\"\r\n  class:highZIndex={isPanelShown}\r\n>\r\n  <i class=\"fas fa-sliders-h\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"settingsPanel\" transition:slide>\r\n    <h2>Settings</h2>\r\n    <SettingsForm {settingsData} {saveSettings} />\r\n    <hr />\r\n    <h2>Background</h2>\r\n    <Backgrounds {backgrounds} {changeBackground} />\r\n    <hr />\r\n    <h2>Pages</h2>\r\n    <Pages {settingsData} {deletePage} {addPage} {saveSettings} {movePage} />\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  hr {\r\n    margin-block-start: 0.9em;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n  }\r\n  #settingsButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 25px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 24;\r\n  }\r\n  #settingsButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #settingsPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #settingsPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  export let note;\r\n  export let saveAllNotes;\r\n  export let deleteNote;\r\n  export let moveNote;\r\n  export let index;\r\n\r\n  let saveButtonState = 0; //local state to enable/disable save button\r\n\r\n  const showSaveButton = () => {\r\n    if (saveButtonState !== 1) {\r\n      saveButtonState = 1;\r\n    }\r\n  };\r\n\r\n  const saveNote = () => {\r\n    //Disable save button\r\n    saveButtonState = 0;\r\n    //Save the notes\r\n    saveAllNotes();\r\n  };\r\n\r\n  const strikeNote = () => {\r\n    //Toggle strike\r\n    note.completed = !note.completed;\r\n    //Activate save button\r\n    saveButtonState = 1;\r\n  };\r\n</script>\r\n\r\n<div class=\"notes\">\r\n  <div class=\"positionButtonArea\">\r\n    <button\r\n      on:click={() => {\r\n        moveNote(index, \"up\");\r\n\r\n        //Disable save button. Moving the item will save it\r\n        saveButtonState = 0;\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-angle-up\" />\r\n    </button>\r\n\r\n    <button\r\n      on:click={() => {\r\n        moveNote(index, \"down\");\r\n\r\n        //Disable save button. Moving the item will save it\r\n        saveButtonState = 0;\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-angle-down\" />\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"notesWrapper\">\r\n    <!--Using a pre with hidden visibility for auto-resizing textarea-->\r\n    <pre aria-hidden=\"true\">{note.text + \"\\n\"}</pre>\r\n    <textarea\r\n      placeholder=\"Type here...\"\r\n      bind:value={note.text}\r\n      on:input={() => {\r\n        showSaveButton();\r\n      }}\r\n      class:strikethrough={note.completed}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"actionButtonArea\">\r\n    <button\r\n      id=\"actionButtonSave\"\r\n      on:click={() => {\r\n        saveNote();\r\n      }}\r\n      disabled={!saveButtonState}\r\n    >\r\n      <i class=\"fa-solid fa-check\" />\r\n    </button>\r\n\r\n    <button\r\n      id=\"actionButtonStrike\"\r\n      on:click={() => {\r\n        strikeNote();\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-strikethrough\" />\r\n    </button>\r\n\r\n    <button\r\n      id=\"actionButtonDelete\"\r\n      on:click={() => {\r\n        deleteNote(index);\r\n      }}\r\n    >\r\n      <i class=\"fa-solid fa-trash-can\" />\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .strikethrough {\r\n    text-decoration: line-through;\r\n  }\r\n  .notes {\r\n    display: flex;\r\n    gap: 5px;\r\n    padding: 5px 10px 10px 5px;\r\n    border-radius: 5px;\r\n    background-color: rgb(255, 255, 136);\r\n  }\r\n  .notesWrapper {\r\n    flex-grow: 1;\r\n    position: relative;\r\n  }\r\n  pre {\r\n    margin: 0;\r\n    color: red;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n  }\r\n  textarea {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0;\r\n    outline: 0;\r\n    resize: none;\r\n    background-color: transparent;\r\n  }\r\n  pre,\r\n  textarea {\r\n    font-family: inherit;\r\n    font-size: 1.2em;\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n    max-height: 240px;\r\n  }\r\n  .actionButtonArea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3px;\r\n  }\r\n  .actionButtonArea button {\r\n    border: 0;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    font-size: 1.1em;\r\n  }\r\n  #actionButtonSave {\r\n    color: rgb(21, 170, 21);\r\n  }\r\n  #actionButtonSave:disabled {\r\n    color: lightgray;\r\n  }\r\n  #actionButtonStrike {\r\n    color: orange;\r\n  }\r\n  #actionButtonDelete {\r\n    color: red;\r\n  }\r\n  .positionButtonArea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  }\r\n  .positionButtonArea button {\r\n    border: 0;\r\n    cursor: pointer;\r\n    padding: 0px 2px;\r\n    color: gray;\r\n    background-color: transparent;\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { saveNotes } from \"../../data/storage\";\r\n  import Note from \"./Note.svelte\";\r\n\r\n  let isPanelShown = false;\r\n  let userNotes = []; //local data for notes\r\n\r\n  //Subscribe to notes\r\n  userData.subscribe((data) => {\r\n    userNotes = data.notes;\r\n  });\r\n\r\n  const toggleNotesPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Create new empty note at the beginning of array\r\n  const createNewNote = () => {\r\n    userNotes.unshift({\r\n      text: \"\",\r\n      completed: false,\r\n    });\r\n\r\n    userData.update((state) => {\r\n      state.notes = userNotes;\r\n      return state;\r\n    });\r\n\r\n    saveNotes(userNotes);\r\n  };\r\n\r\n  const saveAllNotes = () => {\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.notes = userNotes;\r\n      return state;\r\n    });\r\n\r\n    //Save to local storage\r\n    saveNotes(userNotes);\r\n  };\r\n\r\n  const deleteNote = (index) => {\r\n    //Delete 1 note from the specified index\r\n    userNotes.splice(index, 1);\r\n\r\n    //Save changes\r\n    saveAllNotes();\r\n  };\r\n\r\n  const moveNote = (index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index == 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index == userNotes.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = userNotes[index];\r\n\r\n    //Remove current item from old location\r\n    userNotes.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      userNotes.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      userNotes.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Save changes\r\n    saveAllNotes();\r\n  };\r\n\r\n  //Transition\r\n  function notesEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 82% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleNotesPanel}\r\n  id=\"notesButton\"\r\n  class:highZIndex={isPanelShown}\r\n>\r\n  <i class=\"fa-solid fa-note-sticky\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"notesPanel\" transition:notesEntrance>\r\n    <div id=\"notesTop\">\r\n      <h2>Notes</h2>\r\n      <button on:click={createNewNote}>New</button>\r\n    </div>\r\n\r\n    <div id=\"notesBox\">\r\n      {#if userNotes.length === 0}\r\n        <p>You don't have any notes yet</p>\r\n      {/if}\r\n      {#each userNotes as note, index}\r\n        <Note {note} {saveAllNotes} {deleteNote} {moveNote} {index} />\r\n      {/each}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #notesButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 65px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 16;\r\n  }\r\n  #notesButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #notesPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #notesTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #notesTop > * {\r\n    display: inline-block;\r\n  }\r\n  #notesTop > button {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  #notesTop > button:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #notesBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #notesPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { entertainmentData } from \"../data/config\";\r\n\r\n  let isPanelShown = false;\r\n\r\n  const toggleEntertainmentPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Transition\r\n  function entertainmentEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 74% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleEntertainmentPanel}\r\n  id=\"entertainmentButton\"\r\n  class:highZIndex={isPanelShown}\r\n>\r\n  <i class=\"fa-solid fa-gamepad\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"entertainmentPanel\" transition:entertainmentEntrance>\r\n    <div id=\"entertainmentTop\">\r\n      <h2>Entertainment</h2>\r\n    </div>\r\n\r\n    <div id=\"entertainmentBox\">\r\n      {#each entertainmentData as data}\r\n        <a href={data.link}>\r\n          <img src=\"static/images/entertainment/{data.img}\" alt={data.name} />\r\n          <p>{data.name}</p>\r\n        </a>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #entertainmentButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 105px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 8;\r\n  }\r\n  #entertainmentButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #entertainmentPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #entertainmentTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox > a {\r\n    width: 85px;\r\n  }\r\n  #entertainmentBox > a > img {\r\n    width: 100%;\r\n  }\r\n  #entertainmentBox > a > p {\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n    font-size: 0.8em;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #entertainmentPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import \"./data/storage\";\r\n  import { userData } from \"./store\";\r\n\r\n  import Cover from \"./components/Cover.svelte\";\r\n  import QuickNav from \"./components/QuickNav.svelte\";\r\n  import SearchBar from \"./components/SearchBar/SearchBar.svelte\";\r\n  import SpeedDial from \"./components/SpeedDial.svelte\";\r\n  import Settings from \"./components/Settings/Settings.svelte\";\r\n  import Notes from \"./components/Notes/Notes.svelte\";\r\n  import Entertainment from \"./components/Entertainment.svelte\";\r\n\r\n  let backgroundImage;\r\n  let isBackgroundWhite = false;\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    isBackgroundWhite = data.isBackgroundWhite;\r\n  });\r\n\r\n  //Update background image url when background image changes\r\n  $: backgroundImageUrl = \"static/images/bg/\" + backgroundImage + \".jpg\";\r\n</script>\r\n\r\n<!--Use the url made above if user selects image provided by the extension (bgXXX)-->\r\n<main\r\n  style={isBackgroundWhite\r\n    ? \"background-color: white;\"\r\n    : backgroundImage.length > 5\r\n    ? \"background-image: url(\" + backgroundImage + \");\"\r\n    : \"background-image: url(\" + backgroundImageUrl + \");\"}\r\n>\r\n  <Cover />\r\n  <QuickNav />\r\n  <SearchBar />\r\n  <SpeedDial />\r\n  <Settings />\r\n  <Notes />\r\n  <Entertainment />\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n  }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","promise","flushidx","flush","saved_component","update","$$","pop","callback","has","add","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","then","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","entertainmentData","link","img","backgrounds","knownPages","subscriber_queue","userData","stop","subscribers","new_value","run_queue","subscriber","subscribe","invalidate","writable","saveConfig","localStorage","setItem","yourName","isBackgroundWhite","showCover","clockBackground","backgroundImage","tileMinWidth","tileHeight","tileGap","navbarOpacity","JSON","stringify","navbarColor","coverColor","coverTextColor","notes","pages","saveNotes","getItem","parse","g","imageName","isActive","legacyPagesCookie","nameEQ","ca","cookie","charAt","substring","getCookie","oldPages","page","div1","div0","h1","create_if_block","showCoverAtLoad","setTimeout","$$invalidate","div","a0","a1","a2","a3","onClickChromeTabs","elem","chrome","tabs","span","time","hours","getHours","slice","minutes","getMinutes","setInterval","showGithub","innerWidth","chance","floor","random","form","button","searchQuery","entityMap","preventDefault","location","assign","String","replace","s","a_href_value","if_block","div2","small","label0","input0","label1","input1","checked","label2","input2","div3","label3","input3","div4","label4","input4","div5","label5","input5","div6","label6","input6","div7","label7","input7","div8","label8","input8","input9","input10","div9","label9","input11","input12","input13","div10","label10","input14","input15","input16","settingsData","saveSettings","unsavedSettings","h4","bg","fileinput","changeBackground","onFileSelected","image","files","reader","FileReader","readAsDataURL","onload","result","click","$$value","img_src_value","t2_value","button0","button1","label","t2","each_value","deletePage","addPage","movePage","unsavedPages","addPageInput","h20","hr0","h21","hr1","h22","slide","u","isPanelShown","checkWebsite","pageName","getImageNameFor","extractWebsiteName","toLowerCase","includes","sitename","lastIndexOf","escapeHTML","string","state","saveBackground","alert","linkToAdd","item","textarea","completed","pre","button2","i2","button3","button4","note","saveAllNotes","deleteNote","moveNote","saveButtonState","showSaveButton","saveNote","strikeNote","create_if_block_1","h2","each_blocks","notesEntrance","userNotes","unshift","t1_value","src","entertainmentEntrance","main","backgroundImageUrl","body"],"mappings":"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GAC7BA,EAAMhO,QAAQgD,QAIdgG,EAAGK,UAAYL,EAAGK,SAAS5H,IAE3ByC,EAAQgH,OACRR,GAAc3C,EAAUiB,GAAGK,UAC/BkD,GAAgBxE,EAAW7D,EAAQpC,OAAQoC,EAAQpB,OAAQoB,EAAQsI,eAEnE3D,IAEJf,EAAsBwF,GAkD1B,MAAMgB,GACFC,WACIzB,GAAkB0B,KAAM,GACxBA,KAAKD,SAAWjP,EAEpBmP,IAAI3E,EAAMZ,GACN,MAAMwE,EAAac,KAAKxF,GAAG0E,UAAU5D,KAAU0E,KAAKxF,GAAG0E,UAAU5D,GAAQ,IAEzE,OADA4D,EAAUjF,KAAKS,GACR,KACH,MAAMwF,EAAQhB,EAAUjG,QAAQyB,IACjB,IAAXwF,GACAhB,EAAUiB,OAAOD,EAAO,IAGpCE,KAAKC,GA93DT,IAAkBC,EA+3DNN,KAAKO,QA/3DCD,EA+3DkBD,EA93DG,IAA5BjP,OAAOoP,KAAKF,GAAKvL,UA+3DhBiL,KAAKxF,GAAG2E,YAAa,EACrBa,KAAKO,MAAMF,GACXL,KAAKxF,GAAG2E,YAAa,IC36D1B,MAgDMsB,GAAoB,CAC/B,CACExL,KAAM,eACNyL,KAAM,+CACNC,IAAK,yBAEP,CACE1L,KAAM,gBACNyL,KAAM,+CACNC,IAAK,2BAIIC,GAAc,CACzB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAIWC,GAAa,CAExB,SACA,WACA,UACA,QACA,SACA,UACA,SACA,OACA,MACA,WACA,SACA,OACA,aACA,SACA,OACA,cACA,KACA,UACA,KACA,QACA,cACA,cACA,mBACA,eACA,WACA,gBACA,YACA,YACA,SACA,gBACA,aACA,YACA,MACA,eACA,YACA,aACA,cACA,WACA,UACA,MACA,QACA,aACA,UACA,SACA,MACA,QACA,YACA,QACA,OACA,YACA,aACA,SACA,MACA,cACA,SACA,WACA,UACA,WACA,OACA,OAGA,cACA,mBACA,kBACA,eACA,QACA,YACA,OACA,SACA,OACA,UACA,aAEA,MACA,iBA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"}