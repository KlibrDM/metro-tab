{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/config.js","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/data/storage.js","../../src/components/Cover.svelte","../../src/components/QuickNav.svelte","../../src/components/SearchBar/Clock.svelte","../../src/components/SearchBar/RandomGithub.svelte","../../src/components/Notes/Note.svelte","../../src/components/SearchBar/SearchBar.svelte","../../src/data/tools.js","../../src/components/SpeedDial.svelte","../../src/components/Settings/SettingsForm.svelte","../../src/components/Settings/CustomBackgrounds.svelte","../../src/components/Settings/Backgrounds.svelte","../../src/components/Settings/PagesImageModal.svelte","../../src/components/Settings/PagesGroupModal.svelte","../../src/components/Settings/Pages.svelte","../../src/components/Settings/ImportExport.svelte","../../src/components/Settings/SearchEngine.svelte","../../src/components/Settings/About.svelte","../../src/components/Settings/Themes.svelte","../../src/components/Settings/Settings.svelte","../../src/components/Notes/Notes.svelte","../../src/components/Entertainment.svelte","../../src/components/Hint.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*Default settings*/\r\nexport const yourName = \"New Tab\";\r\nexport const showCover = true;\r\nexport const clockBackground = true;\r\nexport const clock24Hour = true;\r\nexport const darkMode = false;\r\nexport const isBackgroundSolid = false;\r\nexport const backgroundSolidColor = \"#3a99ff\";\r\nexport const backgroundImage = \"sl1\";\r\nexport const tileZoom = true;\r\nexport const tileGrow = false;\r\nexport const tileMinWidth = 28;\r\nexport const tileHeight = 18;\r\nexport const tileGap = 2;\r\nexport const tileBorder = 0;\r\nexport const tileBorderRadius = 1.5;\r\nexport const tileBorderColor = { r: 58, g: 153, b: 255 };\r\nexport const groupTileGap = 1;\r\nexport const groupTileBorderRadius = 1.5;\r\nexport const groupTileGrow = true;\r\nexport const navbarOpacity = 0;\r\nexport const navbarColor = { r: 58, g: 153, b: 255 };\r\nexport const coverColor = { r: 58, g: 153, b: 255 };\r\nexport const coverTextColor = { r: 255, g: 255, b: 255 };\r\n\r\nexport const searchEngine = \"google\";\r\nexport const searchEngineList = [\r\n  {\r\n    name: \"google\",\r\n    label: \"Google\",\r\n    link: \"https://www.google.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"bing\",\r\n    label: \"Bing\",\r\n    link: \"https://www.bing.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"duckduckgo\",\r\n    label: \"DuckDuckGo\",\r\n    link: \"https://duckduckgo.com/?q=\",\r\n  },\r\n  {\r\n    name: \"bravesearch\",\r\n    label: \"Brave Search\",\r\n    link: \"https://search.brave.com/search?q=\",\r\n  },\r\n  {\r\n    name: \"yahoo\",\r\n    label: \"Yahoo\",\r\n    link: \"https://search.yahoo.com/search?p=\",\r\n  },\r\n  {\r\n    name: \"startpage\",\r\n    label: \"Startpage\",\r\n    link: \"https://www.startpage.com/do/dsearch?query=\",\r\n  },\r\n  {\r\n    name: \"ecosia\",\r\n    label: \"Ecosia\",\r\n    link: \"https://www.ecosia.org/search?q=\",\r\n  },\r\n  {\r\n    name: \"aol\",\r\n    label: \"AOL\",\r\n    link: \"https://search.aol.com/aol/search?q=\",\r\n  },\r\n  {\r\n    name: \"yandex\",\r\n    label: \"Yandex\",\r\n    link: \"https://yandex.com/search/?text=\",\r\n  },\r\n  {\r\n    name: \"baidu\",\r\n    label: \"Baidu\",\r\n    link: \"https://www.baidu.com/s?wd=\",\r\n  },\r\n  {\r\n    name: \"naver\",\r\n    label: \"Naver\",\r\n    link: \"https://search.naver.com/search.naver?query=\",\r\n  },\r\n  {\r\n    name: \"swisscows\",\r\n    label: \"Swisscows\",\r\n    link: \"https://swisscows.com/web?query=\",\r\n  },\r\n  {\r\n    name: \"qwant\",\r\n    label: \"Qwant\",\r\n    link: \"https://www.qwant.com/?q=\",\r\n  },\r\n  {\r\n    name: \"perplexity\",\r\n    label: \"Perplexity AI\",\r\n    link: \"https://www.perplexity.ai/search/new?q=\",\r\n  }\r\n];\r\n\r\nexport const notes = [];\r\n\r\nexport const pages = [\r\n  {\r\n    link: \"https://www.google.com\",\r\n    imageName: \"google\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Google\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.facebook.com\",\r\n    imageName: \"facebook\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Facebook\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.youtube.com\",\r\n    imageName: \"youtube\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"YouTube\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.yahoo.com\",\r\n    imageName: \"yahoo\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Yahoo\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.reddit.com\",\r\n    imageName: \"reddit\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Reddit\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.netflix.com/browse\",\r\n    imageName: \"netflix\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Netflix\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    link: \"https://www.twitter.com\",\r\n    imageName: \"twitter\",\r\n    isActive: true,\r\n    tileImageType: 'predefined',\r\n    tileName: \"Twitter\",\r\n    backgroundColor: \"#3a99ff\",\r\n    textColor: \"#ffffff\"\r\n  },\r\n  {\r\n    name: \"Shopping\",\r\n    isGroup: true,\r\n    isActive: true,\r\n    pages: [\r\n      {\r\n        link: \"https://www.amazon.com\",\r\n        imageName: \"amazon\",\r\n        isActive: true,\r\n        tileImageType: 'predefined',\r\n        tileName: \"Amazon\",\r\n        backgroundColor: \"#3a99ff\",\r\n        textColor: \"#ffffff\"\r\n      },\r\n      {\r\n        link: \"https://www.bestbuy.com\",\r\n        imageName: \"bestbuy\",\r\n        isActive: true,\r\n        tileImageType: 'predefined',\r\n        tileName: \"Bestbuy\",\r\n        backgroundColor: \"#3a99ff\",\r\n        textColor: \"#ffffff\"\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const entertainmentData = [\r\n  {\r\n    name: \"Hangman Game\",\r\n    link: \"https://klibrdm.github.io/hangman-game-react\",\r\n    img: \"hangman-game-icon.avif\",\r\n  },\r\n  {\r\n    name: \"Business Club\",\r\n    link: \"https://klibrdm.github.io/business-club-game\",\r\n    img: \"business-club-icon.avif\",\r\n  },\r\n];\r\n\r\nexport const notesColors = [\r\n  {\r\n    background: \"#ffff88\",\r\n    text: \"#000000\",\r\n  },\r\n  {\r\n    background: \"#96f0ff\",\r\n    text: \"#000000\",\r\n  },\r\n  {\r\n    background: \"#fac3dc\",\r\n    text: \"#000000\",\r\n  },\r\n  {\r\n    background: \"#63ffac\",\r\n    text: \"#000000\",\r\n  },\r\n  {\r\n    background: \"#f7b21b\",\r\n    text: \"#ffffff\",\r\n  },\r\n  {\r\n    background: \"#3a99ff\",\r\n    text: \"#ffffff\",\r\n  },\r\n  {\r\n    background: \"#ff5a78\",\r\n    text: \"#ffffff\",\r\n  },\r\n  {\r\n    background: \"#029e48\",\r\n    text: \"#ffffff\",\r\n  },\r\n]\r\n\r\nexport const backgrounds = [\r\n  {\r\n    name: \"bg1\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg2\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg3\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg4\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg5\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg6\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg7\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg8\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg9\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg10\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg11\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg12\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg13\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg14\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg15\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg16\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg17\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg18\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg19\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg20\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg21\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg22\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg23\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg24\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg25\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg26\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg27\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg28\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg29\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"bg30\",\r\n    format: \"avif\",\r\n    source: \"pixabay\",\r\n  },\r\n  {\r\n    name: \"sl1\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl2\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl3\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl4\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl5\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl6\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl7\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl8\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl9\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl10\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl11\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl12\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl13\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl14\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl15\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl16\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl17\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl18\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl19\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl20\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl21\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl22\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl23\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl24\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl25\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl26\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl27\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl28\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl29\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl30\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl31\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl32\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl33\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl34\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl35\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl36\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl37\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl38\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl39\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl40\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl41\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl42\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl43\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl44\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"sl45\",\r\n    format: \"avif\",\r\n    source: \"starline-freepik\",\r\n  },\r\n  {\r\n    name: \"fp1\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp2\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp3\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp4\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp5\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp6\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp7\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp8\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp9\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n  {\r\n    name: \"fp10\",\r\n    format: \"avif\",\r\n    source: \"freepik-freepik\",\r\n  },\r\n];\r\n\r\nexport const sourceDetails = new Map([\r\n  ['pixabay', {\r\n    name: 'pixabay',\r\n    label: 'Pixabay',\r\n    url: 'https://pixabay.com/'\r\n  }],\r\n  ['starline-freepik', {\r\n    name: 'starline-freepik',\r\n    label: 'starline on Freepik',\r\n    url: 'https://www.freepik.com/author/starline'\r\n  }],\r\n  ['freepik-freepik', {\r\n    name: 'freepik-freepik',\r\n    label: 'Freepik',\r\n    url: 'https://www.freepik.com/author/freepik'\r\n  }],\r\n]);\r\n\r\nexport const themes = [\r\n  {\r\n    name: \"default\",\r\n    label: \"Default\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_default\",\r\n    changesTiles: \"full\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      clockBackground: clockBackground,\r\n      isBackgroundSolid: isBackgroundSolid,\r\n      backgroundSolidColor: backgroundSolidColor,\r\n      backgroundImage: backgroundImage,\r\n      tileZoom: tileZoom,\r\n      tileGrow: tileGrow,\r\n      tileMinWidth: tileMinWidth,\r\n      tileHeight: tileHeight,\r\n      tileGap: tileGap,\r\n      tileBorder: tileBorder,\r\n      tileBorderRadius: tileBorderRadius,\r\n      tileBorderColor: tileBorderColor,\r\n      groupTileGap: groupTileGap,\r\n      groupTileBorderRadius: groupTileBorderRadius,\r\n      groupTileGrow: groupTileGrow,\r\n      navbarOpacity: navbarOpacity,\r\n      navbarColor: navbarColor,\r\n      coverColor: coverColor,\r\n      coverTextColor: coverTextColor,\r\n    }\r\n  },\r\n  {\r\n    name: \"default_dark\",\r\n    label: \"Default Dark\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_default_dark\",\r\n    changesTiles: \"full\",\r\n    changesPanelColors: \"dark\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: true,\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#03070f\",\r\n      backgroundImage: \"sl42\",\r\n      tileZoom: tileZoom,\r\n      tileGrow: tileGrow,\r\n      tileMinWidth: tileMinWidth,\r\n      tileHeight: tileHeight,\r\n      tileGap: tileGap,\r\n      tileBorder: tileBorder,\r\n      tileBorderRadius: tileBorderRadius,\r\n      tileBorderColor: { r: 58, g: 153, b: 255 },\r\n      groupTileGap: groupTileGap,\r\n      groupTileBorderRadius: groupTileBorderRadius,\r\n      groupTileGrow: groupTileGrow,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 10, g: 25, b: 50 },\r\n      coverColor: { r: 3, g: 7, b: 15 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"metro\",\r\n    label: \"Metro\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_metro\",\r\n    changesTiles: \"full\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#013273\",\r\n      backgroundImage: \"sl9\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 22,\r\n      tileGap: 2,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 0,\r\n      tileBorderColor: { r: 58, g: 153, b: 255 },\r\n      groupTileGap: 1.2,\r\n      groupTileBorderRadius: 0,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 0, g: 35, b: 80 },\r\n      coverColor: { r: 0, g: 35, b: 80 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"sunset\",\r\n    label: \"Sunset\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_sunset\",\r\n    changesTiles: \"full\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#f0c864\",\r\n      backgroundImage: \"fp1\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 18,\r\n      tileGap: 3,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 5,\r\n      tileBorderColor: { r: 240, g: 200, b: 100 },\r\n      groupTileGap: 1.8,\r\n      groupTileBorderRadius: 3.2,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 240, g: 200, b: 100 },\r\n      coverColor: { r: 240, g: 200, b: 100 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"galaxy\",\r\n    label: \"Galaxy\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_galaxy\",\r\n    changesTiles: \"full\",\r\n    changesPanelColors: \"dark\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: true,\r\n      clockBackground: false,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#1e1432\",\r\n      backgroundImage: \"fp6\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 22,\r\n      tileGap: 4,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 30,\r\n      tileBorderColor: { r: 100, g: 85, b: 165 },\r\n      groupTileGap: 1.8,\r\n      groupTileBorderRadius: 30,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 30, g: 20, b: 50 },\r\n      coverColor: { r: 30, g: 20, b: 50 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"sakura\",\r\n    label: \"Sakura\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_sakura\",\r\n    changesTiles: \"full\",\r\n    changesPanelColors: \"light\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: false,\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#ff5a78\",\r\n      backgroundImage: \"sl38\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 26,\r\n      tileHeight: 18,\r\n      tileGap: 3.5,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 2.5,\r\n      tileBorderColor: { r: 255, g: 90, b: 120 },\r\n      groupTileGap: 2,\r\n      groupTileBorderRadius: 2,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 255, g: 90, b: 120 },\r\n      coverColor: { r: 255, g: 90, b: 120 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"bubblegum\",\r\n    label: \"Bubblegum\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_bubblegum\",\r\n    changesTiles: \"full\",\r\n    changesPanelColors: \"light\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: false,\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#fac3dc\",\r\n      backgroundImage: \"fp3\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 22,\r\n      tileGap: 3,\r\n      tileBorder: 2,\r\n      tileBorderRadius: 30,\r\n      tileBorderColor: { r: 250, g: 195, b: 220 },\r\n      groupTileGap: 1.8,\r\n      groupTileBorderRadius: 30,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 250, g: 195, b: 220 },\r\n      coverColor: { r: 250, g: 195, b: 220 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"royal_gold\",\r\n    label: \"Royal Gold\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_royal_gold\",\r\n    changesTiles: \"full\",\r\n    changesPanelColors: \"dark\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: true,\r\n      clockBackground: true,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#ffbe28\",\r\n      backgroundImage: \"sl41\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 28,\r\n      tileHeight: 18,\r\n      tileGap: 2,\r\n      tileBorder: 3,\r\n      tileBorderRadius: 3.5,\r\n      tileBorderColor: { r: 255, g: 190, b: 40 },\r\n      groupTileGap: 1,\r\n      groupTileBorderRadius: 2.5,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 255, g: 190, b: 40 },\r\n      coverColor: { r: 255, g: 190, b: 40 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"rain\",\r\n    label: \"Rain\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_rain\",\r\n    changesTiles: \"partial\",\r\n    changesPanelColors: \"dark\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      darkMode: true,\r\n      clockBackground: false,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#14648c\",\r\n      backgroundImage: \"bg15\",\r\n      tileBorder: 3,\r\n      tileBorderColor: { r: 15, g: 20, b: 30 },\r\n      navbarOpacity: 0.2,\r\n      navbarColor: { r: 15, g: 20, b: 30 },\r\n      coverColor: { r: 15, g: 20, b: 30 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"synthwave_sunset\",\r\n    label: \"Synthwave Sunset\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_synthwave_sunset\",\r\n    changesTiles: \"full\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      clockBackground: false,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#280078\",\r\n      backgroundImage: \"sl22\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 26,\r\n      tileHeight: 16,\r\n      tileGap: 2,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 0,\r\n      tileBorderColor: { r: 200, g: 45, b: 120 },\r\n      groupTileGap: 1,\r\n      groupTileBorderRadius: 0,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 60, g: 10, b: 150 },\r\n      coverColor: { r: 60, g: 10, b: 150 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n  {\r\n    name: \"legacy\",\r\n    label: \"Legacy\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_legacy\",\r\n    changesTiles: \"full\",\r\n    changesBackground: true,\r\n    changesColors: true,\r\n    settings: {\r\n      clockBackground: false,\r\n      isBackgroundSolid: false,\r\n      backgroundSolidColor: \"#3a99ff\",\r\n      backgroundImage: \"bg2\",\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 24,\r\n      tileHeight: 55,\r\n      tileGap: 0,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 0,\r\n      tileBorderColor: { r: 58, g: 153, b: 255 },\r\n      groupTileGap: 0,\r\n      groupTileBorderRadius: 0,\r\n      groupTileGrow: true,\r\n      navbarOpacity: 0,\r\n      navbarColor: { r: 58, g: 153, b: 255 },\r\n      coverColor: { r: 58, g: 153, b: 255 },\r\n      coverTextColor: { r: 255, g: 255, b: 255 },\r\n    }\r\n  },\r\n];\r\n\r\nexport const tileThemes = [\r\n  {\r\n    name: \"default_tiles\",\r\n    label: \"Default Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_default_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 28,\r\n      tileHeight: 18,\r\n      tileGap: 2,\r\n      tileBorder: 0,\r\n      tileBorderRadius: 1.5,\r\n      groupTileGap: 1,\r\n      groupTileBorderRadius: 1.5,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"round_tiles\",\r\n    label: \"Round Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_round_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 22,\r\n      tileGap: 2,\r\n      tileBorderRadius: 30,\r\n      groupTileGap: 1,\r\n      groupTileBorderRadius: 30,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"compact_tiles\",\r\n    label: \"Compact Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_compact_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: false,\r\n      tileGrow: false,\r\n      tileMinWidth: 16,\r\n      tileHeight: 10,\r\n      tileGap: 0.8,\r\n      tileBorderRadius: 1,\r\n      groupTileGap: 0.4,\r\n      groupTileBorderRadius: 1,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"spacious_tiles\",\r\n    label: \"Spacious Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_spacious_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 25,\r\n      tileHeight: 15,\r\n      tileGap: 5,\r\n      tileBorderRadius: 1.5,\r\n      groupTileGap: 2,\r\n      groupTileBorderRadius: 1.5,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"vertical_tiles\",\r\n    label: \"Vertical Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_vertical_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 20,\r\n      tileHeight: 32,\r\n      tileGap: 2,\r\n      tileBorderRadius: 1.5,\r\n      groupTileGap: 1,\r\n      groupTileBorderRadius: 1,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"metro_tiles\",\r\n    label: \"Metro Tiles\",\r\n    author: \"Metro Speed Dial\",\r\n    thumbnail: \"t_metro_tiles\",\r\n    changesTiles: \"partial\",\r\n    changesBackground: false,\r\n    changesColors: false,\r\n    settings: {\r\n      tileZoom: true,\r\n      tileGrow: false,\r\n      tileMinWidth: 22,\r\n      tileHeight: 22,\r\n      tileGap: 2,\r\n      tileBorderRadius: 0,\r\n      groupTileGap: 1.2,\r\n      groupTileBorderRadius: 0,\r\n      groupTileGrow: true,\r\n    }\r\n  },\r\n]\r\n\r\n//Known pages are the ones that have a thumbnail image\r\nexport const knownPages = [\r\n  //V1.0\r\n  \"google\",\r\n  \"facebook\",\r\n  \"youtube\",\r\n  \"yahoo\",\r\n  \"reddit\",\r\n  \"netflix\",\r\n  \"github\",\r\n  \"emag\",\r\n  \"pcg\",\r\n  \"pcgarage\",\r\n  \"amazon\",\r\n  \"ebay\",\r\n  \"craigslist\",\r\n  \"twitch\",\r\n  \"9gag\",\r\n  \"accuweather\",\r\n  \"yr\",\r\n  \"twitter\",\r\n  \"vk\",\r\n  \"gmail\",\r\n  \"maps.google\",\r\n  \"docs.google\",\r\n  \"translate.google\",\r\n  \"drive.google\",\r\n  \"onedrive\",\r\n  \"onedrive.live\",\r\n  \"instagram\",\r\n  \"pinterest\",\r\n  \"tumblr\",\r\n  \"stackoverflow\",\r\n  \"codecademy\",\r\n  \"w3schools\",\r\n  \"php\",\r\n  \"thepiratebay\",\r\n  \"piratebay\",\r\n  \"pirateship\",\r\n  \"pirateproxy\",\r\n  \"filelist\",\r\n  \"kickass\",\r\n  \"kat\",\r\n  \"katcr\",\r\n  \"aliexpress\",\r\n  \"alibaba\",\r\n  \"paypal\",\r\n  \"olx\",\r\n  \"baidu\",\r\n  \"wikipedia\",\r\n  \"tmall\",\r\n  \"live\",\r\n  \"microsoft\",\r\n  \"list.tmall\",\r\n  \"office\",\r\n  \"msn\",\r\n  \"pages.tmall\",\r\n  \"yandex\",\r\n  \"whatsapp\",\r\n  \"spotify\",\r\n  \"linkedin\",\r\n  \"csdn\",\r\n  \"bing\",\r\n\r\n  //V2.0 (1)\r\n  \"meet.google\",\r\n  \"classroom.google\",\r\n  \"teams.microsoft\",\r\n  \"web.whatsapp\",\r\n  \"skype\",\r\n  \"web.skype\",\r\n  \"zoom\",\r\n  \"tiktok\",\r\n  \"wish\",\r\n  \"discord\",\r\n  \"discordapp\",\r\n  //V2.0 (2)\r\n  \"g2a\",\r\n  \"instant-gaming\",\r\n  \"kinguin\",\r\n  \"eneba\",\r\n  \"cdkeys\",\r\n  \"gamivo\",\r\n  \"hrkgame\",\r\n  //V2.0 (3)\r\n  \"qq\",\r\n  \"mail\",\r\n  \"duckduckgo\",\r\n  \"ok\",\r\n  \"okru\",\r\n  \"sogou\",\r\n  \"globo\",\r\n  \"taobao\",\r\n  \"naver\",\r\n  \"quora\",\r\n  \"imdb\",\r\n  \"uol\",\r\n  \"bbc\",\r\n  \"cnn\",\r\n  \"booking\",\r\n  \"cricbuzz\",\r\n  \"jd\",\r\n  \"bilibili\",\r\n  \"youtu\",\r\n  \"imgur\",\r\n  \"foxnews\",\r\n  \"rakuten\",\r\n  \"viber\",\r\n  \"weather\",\r\n  \"walmart\",\r\n  \"costco\",\r\n  \"walgreens\",\r\n  \"homedepot\",\r\n  \"target\",\r\n  \"lowes\",\r\n  \"albertsons\",\r\n  \"bestbuy\",\r\n  \"ikea\",\r\n  \"jysk\",\r\n  \"newegg\",\r\n  \"gamestop\",\r\n\r\n  //V2.1\r\n  \"localhost\",\r\n  \"calendar.google\",\r\n  \"photos.google\",\r\n  \"figma\",\r\n\r\n  //V2.2\r\n  \"chatgpt\",\r\n  \"chat.openai\",\r\n  \"openai\",\r\n  \"platform.openai\",\r\n];\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const userData = writable({});\r\n","import * as CONFIG from \"./config\";\r\nimport { userData } from \"../store\";\r\n\r\nexport const saveConfig = (data) => {\r\n  localStorage.setItem(\"ft\", true);\r\n  localStorage.setItem(\"yourName\", data.yourName);\r\n  localStorage.setItem(\"showCover\", data.showCover);\r\n  localStorage.setItem(\"clockBackground\", data.clockBackground);\r\n  localStorage.setItem(\"clock24Hour\", data.clock24Hour);\r\n  localStorage.setItem(\"darkMode\", data.darkMode);\r\n  localStorage.setItem(\"isBackgroundSolid\", data.isBackgroundSolid);\r\n  localStorage.setItem(\"backgroundSolidColor\", data.backgroundSolidColor);\r\n  localStorage.setItem(\"backgroundImage\", data.backgroundImage);\r\n  localStorage.setItem(\"tileZoom\", data.tileZoom);\r\n  localStorage.setItem(\"tileGrow\", data.tileGrow);\r\n  localStorage.setItem(\"tileMinWidth\", data.tileMinWidth);\r\n  localStorage.setItem(\"tileHeight\", data.tileHeight);\r\n  localStorage.setItem(\"tileGap\", data.tileGap);\r\n  localStorage.setItem(\"tileBorder\", data.tileBorder);\r\n  localStorage.setItem(\"tileBorderRadius\", data.tileBorderRadius);\r\n  localStorage.setItem(\"tileBorderColor\", JSON.stringify(data.tileBorderColor));\r\n  localStorage.setItem(\"groupTileGap\", data.groupTileGap);\r\n  localStorage.setItem(\"groupTileBorderRadius\", data.groupTileBorderRadius);\r\n  localStorage.setItem(\"groupTileGrow\", data.groupTileGrow);\r\n  localStorage.setItem(\"navbarOpacity\", data.navbarOpacity);\r\n  localStorage.setItem(\"navbarColor\", JSON.stringify(data.navbarColor));\r\n  localStorage.setItem(\"coverColor\", JSON.stringify(data.coverColor));\r\n  localStorage.setItem(\"coverTextColor\", JSON.stringify(data.coverTextColor));\r\n  localStorage.setItem(\"notes\", JSON.stringify(data.notes));\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n  localStorage.setItem(\"searchEngine\", data.searchEngine);\r\n};\r\n\r\nexport const saveBackground = (bg) => {\r\n  localStorage.setItem(\"backgroundImage\", bg);\r\n  localStorage.setItem(\"isBackgroundSolid\", false);\r\n};\r\n\r\nexport const saveBackgroundColor = (color) => {\r\n  localStorage.setItem(\"backgroundSolidColor\", color);\r\n  localStorage.setItem(\"isBackgroundSolid\", true);\r\n};\r\n\r\nexport const saveNotes = (notes) => {\r\n  try {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }\r\n  catch(err) {\r\n    if(err.name === \"QuotaExceededError\") {\r\n      alert(\"Local storage is full. Please clear some space.\");\r\n    }\r\n    else {\r\n      alert(\"Error saving notes\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const saveTileImage = (link, image) => {\r\n  localStorage.setItem(link, image);\r\n}\r\n\r\nexport const saveSearchEngine = (engine) => {\r\n  localStorage.setItem(\"searchEngine\", engine);\r\n}\r\n\r\nexport const getTileImage = (link) => {\r\n  return localStorage.getItem(link);\r\n}\r\n\r\nexport const deleteTileImage = (link) => {\r\n  localStorage.removeItem(link);\r\n}\r\n\r\nexport const deleteAllTileImages = () => {\r\n  for (let key in localStorage) {\r\n    if (key.indexOf(\"http\") !== -1) {\r\n      localStorage.removeItem(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTileImageLinks = () => {\r\n  let links = [];\r\n  for (let key in localStorage) {\r\n    if (key.indexOf(\"http\") !== -1) {\r\n      links.push(key);\r\n    }\r\n  }\r\n  return links;\r\n}\r\n\r\n/*Load data from localstorage\r\nIf the extension can't get the item from localstorage, use the value from config\r\n(simple || if not bool, ? : if bool)*/\r\n//prettier-ignore\r\nconst data = {\r\n  yourName: \r\n    localStorage.getItem(\"yourName\") ||\r\n    CONFIG.yourName,\r\n\r\n  showCover: \r\n    localStorage.getItem(\"showCover\") === null \r\n    ? CONFIG.showCover\r\n    : localStorage.getItem(\"showCover\") === \"true\",\r\n\r\n  clockBackground:\r\n    localStorage.getItem(\"clockBackground\") === null\r\n    ? CONFIG.clockBackground\r\n    : localStorage.getItem(\"clockBackground\") === \"true\",\r\n\r\n  clock24Hour:\r\n    localStorage.getItem(\"clock24Hour\") === null\r\n    ? CONFIG.clock24Hour\r\n    : localStorage.getItem(\"clock24Hour\") === \"true\",\r\n\r\n  darkMode:\r\n    localStorage.getItem(\"darkMode\") === null\r\n    ? CONFIG.darkMode\r\n    : localStorage.getItem(\"darkMode\") === \"true\",\r\n\r\n  isBackgroundSolid:\r\n    localStorage.getItem(\"isBackgroundSolid\") === null\r\n    ? CONFIG.isBackgroundSolid\r\n    : localStorage.getItem(\"isBackgroundSolid\") === \"true\",\r\n\r\n  backgroundSolidColor:\r\n    localStorage.getItem(\"backgroundSolidColor\") ||\r\n    CONFIG.backgroundSolidColor,\r\n\r\n  backgroundImage:\r\n    localStorage.getItem(\"backgroundImage\") ||\r\n    CONFIG.backgroundImage,\r\n\r\n  tileZoom:\r\n    localStorage.getItem(\"tileZoom\") === null\r\n    ? CONFIG.tileZoom\r\n    : localStorage.getItem(\"tileZoom\") === \"true\",\r\n\r\n  tileGrow:\r\n    localStorage.getItem(\"tileGrow\") === null\r\n    ? CONFIG.tileGrow\r\n    : localStorage.getItem(\"tileGrow\") === \"true\",\r\n\r\n  tileMinWidth:\r\n    localStorage.getItem(\"tileMinWidth\") ||\r\n    CONFIG.tileMinWidth,\r\n\r\n  tileHeight:\r\n    localStorage.getItem(\"tileHeight\") ||\r\n    CONFIG.tileHeight,\r\n\r\n  tileGap:\r\n    localStorage.getItem(\"tileGap\") ||\r\n    CONFIG.tileGap,\r\n\r\n  tileBorder:\r\n    localStorage.getItem(\"tileBorder\") ||\r\n    CONFIG.tileBorder,\r\n\r\n  tileBorderRadius:\r\n    localStorage.getItem(\"tileBorderRadius\") ||\r\n    CONFIG.tileBorderRadius,\r\n\r\n  tileBorderColor:\r\n    JSON.parse(localStorage.getItem(\"tileBorderColor\")) ||\r\n    CONFIG.tileBorderColor,\r\n\r\n  groupTileGap:\r\n    localStorage.getItem(\"groupTileGap\") ||\r\n    CONFIG.groupTileGap,\r\n\r\n  groupTileBorderRadius:\r\n    localStorage.getItem(\"groupTileBorderRadius\") ||\r\n    CONFIG.groupTileBorderRadius,\r\n\r\n  groupTileGrow:\r\n    localStorage.getItem(\"groupTileGrow\") === null\r\n    ? CONFIG.groupTileGrow\r\n    : localStorage.getItem(\"groupTileGrow\") === \"true\",\r\n\r\n  navbarOpacity:\r\n    localStorage.getItem(\"navbarOpacity\") ||\r\n    CONFIG.navbarOpacity,\r\n\r\n  navbarColor:\r\n    JSON.parse(localStorage.getItem(\"navbarColor\")) ||\r\n    CONFIG.navbarColor,\r\n\r\n  coverColor:\r\n    JSON.parse(localStorage.getItem(\"coverColor\")) ||\r\n    CONFIG.coverColor,\r\n\r\n  coverTextColor:\r\n    JSON.parse(localStorage.getItem(\"coverTextColor\")) ||\r\n    CONFIG.coverTextColor,\r\n\r\n  notes:\r\n    JSON.parse(localStorage.getItem(\"notes\")) ||\r\n    CONFIG.notes,\r\n\r\n  pages:\r\n    JSON.parse(localStorage.getItem(\"pages\")) ||\r\n    CONFIG.pages,\r\n\r\n  searchEngine:\r\n    localStorage.getItem(\"searchEngine\") ||\r\n    CONFIG.searchEngine,\r\n};\r\n\r\n/*Import pages data from legacy 1.1 version\r\nData was stored in cookies instead of local storage*/\r\nlet legacyPagesCookie = getCookie(\"pages\");\r\n\r\nif (legacyPagesCookie != null) {\r\n  let oldPages = [];\r\n  let legacyPagesParsedCookie = JSON.parse(legacyPagesCookie);\r\n\r\n  //Old data also had a different format\r\n  //Therefore it has to be converted\r\n  legacyPagesParsedCookie.forEach((page, index) => {\r\n    oldPages[index] = {\r\n      link: page[0],\r\n      imageName: page[1],\r\n      isActive: page[2] ? true : false,\r\n      tileImageType: page[1].length > 1 ? 'predefined' : 'none',\r\n      tileName: page[1][0].toUpperCase() + page[1].slice(1),\r\n      backgroundColor: \"#3a99ff\",\r\n      textColor: \"#ffffff\"\r\n    };\r\n  });\r\n\r\n  data.pages = oldPages;\r\n  eraseCookie(\"pages\");\r\n  saveConfig(data);\r\n}\r\n\r\n/* Add new properties to old pages (missing on version 2.1 and before) */\r\nif (data.pages) {\r\n  data.pages.forEach(page => {\r\n    if (page.isGroup) {\r\n      return;\r\n    }\r\n\r\n    if (!page.hasOwnProperty(\"tileImageType\")) {\r\n      page.tileImageType = page.imageName.length > 1 ? 'predefined' : 'none';\r\n    }\r\n    if (!page.hasOwnProperty(\"tileName\")) {\r\n      page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n    }\r\n    if (!page.hasOwnProperty(\"backgroundColor\")) {\r\n      page.backgroundColor = \"#3a99ff\";\r\n    }\r\n    if (!page.hasOwnProperty(\"textColor\")) {\r\n      page.textColor = \"#ffffff\";\r\n    }\r\n  });\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n}\r\n\r\n/* Add new properties to old notes (missing on version 2.4.0 and before) */\r\nexport const parseNotes = (notes) => {\r\n  if (notes && notes.length) {\r\n    notes.forEach(note => {\r\n      let type = \"note\"; // keep track of note type to determine default colors\r\n      if (!note.hasOwnProperty(\"text\")) {\r\n        note.text = \"\";\r\n      }\r\n  \r\n      if (!note.hasOwnProperty(\"type\")) {\r\n        note.type = type;\r\n      }\r\n      else {\r\n        // If note has a type, store it to determine default colors\r\n        type = note.type;\r\n      }\r\n  \r\n      if (!note.hasOwnProperty(\"textColor\")) {\r\n        note.textColor = type === \"note\" ? CONFIG.notesColors[0].text : CONFIG.notesColors[1].text;\r\n      }\r\n      if (!note.hasOwnProperty(\"backgroundColor\")) {\r\n        note.backgroundColor = type === \"note\" ? CONFIG.notesColors[0].background : CONFIG.notesColors[1].background;\r\n      }\r\n  \r\n      if (!note.hasOwnProperty(\"important\")) {\r\n        note.important = false;\r\n      }\r\n      if (!note.hasOwnProperty(\"completed\")) {\r\n        note.completed = false;\r\n      }\r\n      if (!note.hasOwnProperty(\"isPinned\")) {\r\n        note.isPinned = false;\r\n      }\r\n    });\r\n  }\r\n  return notes;\r\n}\r\n\r\ndata.notes = parseNotes(data.notes);\r\nif (data.notes && data.notes.length) {\r\n  localStorage.setItem(\"notes\", JSON.stringify(data.notes));\r\n}\r\n\r\n//After loading the data, set it to state\r\nuserData.set(data);\r\n\r\n//Cookie management functions to restore legacy data\r\nfunction getCookie(name) {\r\n  let nameEQ = name + \"=\";\r\n  let ca = document.cookie.split(\";\");\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction eraseCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let yourName;\r\n  let showCover;\r\n  let coverColor;\r\n  let coverTextColor;\r\n\r\n  userData.subscribe((data) => {\r\n    yourName = data.yourName;\r\n    showCover = data.showCover;\r\n    coverColor = data.coverColor;\r\n    coverTextColor = data.coverTextColor;\r\n  });\r\n\r\n  //Creating a second variable for showCover\r\n  //that doesn't change when state updates\r\n  //Otherwise the cover would show when saving changes\r\n  let showCoverAtLoad = showCover;\r\n\r\n  //Any time showCoverAtLoad changes (it shouldn't)\r\n  //Hide it after 1.5 seconds\r\n  $: if (showCoverAtLoad) {\r\n    setTimeout(function () {\r\n      showCoverAtLoad = false;\r\n    }, 1500);\r\n  }\r\n</script>\r\n\r\n{#if showCoverAtLoad}\r\n  <div\r\n    id=\"cover\"\r\n    style=\"\r\n      background-color: \r\n        rgb({coverColor.r},{coverColor.g},{coverColor.b}); \r\n      color: \r\n        rgb({coverTextColor.r},{coverTextColor.g},{coverTextColor.b});\"\r\n  >\r\n    <div id=\"coverNameBox\">\r\n      <h1>{yourName}</h1>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #cover {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    animation: remove-cover-up 0.35s;\r\n    animation-fill-mode: forwards;\r\n    animation-delay: 0.8s;\r\n    z-index: 995;\r\n  }\r\n  #coverNameBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n  #coverNameBox h1 {\r\n    font-size: 9vw;\r\n    font-weight: 500;\r\n    animation: title-disappear 0.35s;\r\n    animation-delay: 0.35s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 999;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n</style>\r\n","<script>\r\n  const onClickChromeTabs = (elem) => {\r\n    chrome.tabs.create({ url: `chrome://${elem}` });\r\n  };\r\n</script>\r\n\r\n<div id=\"browserQuickNavBox\">\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"History\" on:click={() => onClickChromeTabs(\"history\")}>\r\n    <i class=\"fas fa-history browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Downloads\" on:click={() => onClickChromeTabs(\"downloads\")}>\r\n    <i class=\"fas fa-download browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Bookmarks\" on:click={() => onClickChromeTabs(\"bookmarks\")}>\r\n    <i class=\"fas fa-bookmark browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" aria-label=\"Extensions\" on:click={() => onClickChromeTabs(\"extensions\")}>\r\n    <i class=\"fas fa-puzzle-piece browserQuickNavButton\" />\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  #browserQuickNavBox {\r\n    position: absolute;\r\n    left: 2vw;\r\n    z-index: 45;\r\n  }\r\n  .browserQuickNavButton {\r\n    color: rgba(220, 220, 220, 0.75);\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    padding: 5px 10px;\r\n    transition: 0.3s;\r\n  }\r\n  .browserQuickNavButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .browserQuickNavButton {\r\n      padding: 4px 7px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let clockBackground;\r\n  let clock24Hour;\r\n\r\n  userData.subscribe((data) => {\r\n    clockBackground = data.clockBackground;\r\n    clock24Hour = data.clock24Hour;\r\n  });\r\n\r\n  let time = new Date();\r\n  let auxHours = time.getHours();\r\n  if (!clock24Hour) {\r\n    auxHours = auxHours % 12;\r\n    if (auxHours === 0) auxHours = 12;\r\n  }\r\n  let hours = (\"0\" + auxHours).slice(-2);\r\n  let minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n  let ampm = time.getHours() >= 12 ? \"PM\" : \"AM\";\r\n\r\n  //Update time every second\r\n  setInterval(() => {\r\n    time = new Date();\r\n    auxHours = time.getHours();\r\n    if (!clock24Hour) {\r\n      auxHours = auxHours % 12;\r\n      if (auxHours === 0) auxHours = 12;\r\n    }\r\n    hours = (\"0\" + auxHours).slice(-2);\r\n    minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n    ampm = time.getHours() >= 12 ? \"PM\" : \"AM\";\r\n  }, 1000);\r\n</script>\r\n\r\n<!--Use clockbg class only if clockBackground is true-->\r\n<div id=\"time\" class:clockbg={clockBackground}>\r\n  {hours}:<span id=\"minutes\">{minutes}</span>\r\n  {#if !clock24Hour}\r\n    <span id=\"ampm\">{ampm}</span>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  #time {\r\n    position: absolute;\r\n    font-size: 3em;\r\n    right: 2vw;\r\n    color: white;\r\n    border-radius: 12px;\r\n    padding: 3px 5px;\r\n    line-height: 1.2em;\r\n  }\r\n  #minutes {\r\n    font-size: 0.7em;\r\n    color: rgb(236, 236, 236);\r\n  }\r\n  #ampm {\r\n    font-size: 0.4em;\r\n    font-weight: 600;\r\n    color: rgb(236, 236, 236);\r\n    line-height: 1em;\r\n  }\r\n  .clockbg {\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #time {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 600px) {\r\n    #time {\r\n      font-size: 2.2em;\r\n      line-height: 0.8em;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  let showGithub = false;\r\n\r\n  //innerWidth will get the window innerWidth\r\n  let innerWidth = 0;\r\n\r\n  setInterval(function () {\r\n    let chance = Math.floor(Math.random() * 200);\r\n\r\n    //Only show github logo if random chance matches\r\n    //and window width is bigger than 799 pixels\r\n    if (chance === 1 && innerWidth > 799) {\r\n      showGithub = true;\r\n    } else {\r\n      showGithub = false;\r\n    }\r\n  }, 15000);\r\n</script>\r\n\r\n<svelte:window bind:innerWidth />\r\n\r\n{#if showGithub}\r\n  <div id=\"randomGithub\">\r\n    <a href=\"https://github.com/KlibrDM\">\r\n      <i class=\"fab fa-github\" style=\"color: white\" />\r\n    </a>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #randomGithub {\r\n    position: absolute;\r\n    left: 2vw;\r\n    font-size: 3vw;\r\n    animation: wobble-hor-bottom 0.8s infinite;\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #randomGithub {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  export let note;\r\n  export let saveAllNotes;\r\n  export let overrideMaxHeight = undefined;\r\n</script>\r\n\r\n<div class=\"note\">\r\n  {#if note.type === \"task\"}\r\n    <div class=\"checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={note.completed}\r\n        on:change={() => {\r\n          saveAllNotes();\r\n        }}\r\n      />\r\n    </div>\r\n  {/if}\r\n  <div class=\"noteWrapper\">\r\n    <!--Using a pre with hidden visibility for auto-resizing textarea-->\r\n    <pre aria-hidden=\"true\" style={overrideMaxHeight ? `max-height: ${overrideMaxHeight}px;` : ''}>{note.text + \"\\n\"}</pre>\r\n    <textarea\r\n      placeholder=\"Type here...\"\r\n      bind:value={note.text}\r\n      on:input={() => {\r\n        saveAllNotes();\r\n      }}\r\n      class:strikethrough={note.completed}\r\n      style={`color: ${note.textColor}; --placeholder-color: ${note.textColor}; ${overrideMaxHeight ? `max-height: ${overrideMaxHeight}px;` : ''}`}\r\n    />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .strikethrough {\r\n    text-decoration: line-through;\r\n  }\r\n  .note {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    padding: 5px 5px 8px 5px;\r\n  }\r\n  .checkbox {\r\n    margin-top: 6px;\r\n  }\r\n  .noteWrapper {\r\n    position: relative;\r\n    min-height: 32px;\r\n    width: 100%;\r\n  }\r\n  pre {\r\n    margin: 0;\r\n    color: red;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n  }\r\n  textarea {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0;\r\n    outline: 0;\r\n    resize: none;\r\n    background-color: transparent;\r\n  }\r\n  textarea::placeholder {\r\n    color: var(--placeholder-color);\r\n  }\r\n  pre,\r\n  textarea {\r\n    font-family: inherit;\r\n    font-size: 1.2em;\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n    max-height: 240px;\r\n  }\r\n</style>\r\n","<script>\r\n  import Clock from \"./Clock.svelte\";\r\n  import RandomGithub from \"./RandomGithub.svelte\";\r\n  import Note from \"../Notes/Note.svelte\";\r\n  import { userData } from \"../../store\";\r\n  import { searchEngineList } from \"../../data/config\";\r\n  import { saveNotes } from \"../../data/storage\";\r\n\r\n  export let remoteOpenNotes;\r\n\r\n  let searchQuery = \"\"; //Binded to input\r\n  let navbarOpacity;\r\n  let navbarColor;\r\n  let searchEngine;\r\n  let pinnedNote;\r\n\r\n  let innerHeight = 0;\r\n\r\n  userData.subscribe((data) => {\r\n    searchEngine = data.searchEngine;\r\n    navbarOpacity = data.navbarOpacity;\r\n    navbarColor = data.navbarColor;\r\n    pinnedNote = data.notes.find((note) => note.isPinned);\r\n  });\r\n\r\n  const saveNoteChanges = () => {\r\n    userData.update((state) => {\r\n      let modifiedNote = state.notes.find((note) => note.isPinned);\r\n      modifiedNote.text = pinnedNote.text;\r\n      modifiedNote.completed = pinnedNote.completed;\r\n      state.notes = [...state.notes];\r\n\r\n      saveNotes(state.notes);\r\n      return state;\r\n    });\r\n  }\r\n\r\n  const unpinNote = () => {\r\n    userData.update((state) => {\r\n      state.notes.find((note) => note.isPinned).isPinned = false;\r\n      saveNotes(state.notes);\r\n      return state;\r\n    });\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery !== \"\") {\r\n      const selectedSearchEngine = searchEngineList.find(\r\n        (item) => item.name === searchEngine\r\n      );\r\n\r\n      if (selectedSearchEngine) {\r\n        window.location.assign(\r\n          selectedSearchEngine.link + escapeHTML(searchQuery)\r\n        );\r\n      }\r\n      else {\r\n        // Fall back to google if search engine not found\r\n        window.location.assign(\r\n          \"https://www.google.com/search?q=\" + escapeHTML(searchQuery)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n</script>\r\n\r\n<svelte:window bind:innerHeight />\r\n\r\n<div\r\n  id=\"searchbarBox\"\r\n  style=\"background-color: rgba({navbarColor.r},{navbarColor.g},{navbarColor.b},{navbarOpacity})\"\r\n>\r\n  {#if pinnedNote}\r\n    <div id=\"note\" style={`background-color: ${pinnedNote.backgroundColor}; color: ${pinnedNote.textColor};`}>\r\n      <Note note={pinnedNote} saveAllNotes={saveNoteChanges} overrideMaxHeight={innerHeight > 840  ? 104 : 52} />\r\n      <div class=\"noteActions\">\r\n        <button style={`color: ${pinnedNote.textColor};`} on:click={remoteOpenNotes}>Open notes</button>\r\n        <button style={`color: ${pinnedNote.textColor};`} on:click={unpinNote}>Unpin</button>\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <RandomGithub />\r\n  {/if}\r\n  <form id=\"searchbar\" on:submit={handleSearch}>\r\n    <input\r\n      id=\"searchInput\"\r\n      type=\"search\"\r\n      autocomplete=\"off\"\r\n      placeholder=\"Search\"\r\n      bind:value={searchQuery}\r\n    />\r\n    <button id=\"searchButton\" aria-label=\"Search\">\r\n      <i class=\"fas fa-search\" style=\"color: white\" />\r\n    </button>\r\n  </form>\r\n  <Clock />\r\n</div>\r\n\r\n<style>\r\n  #searchbarBox {\r\n    flex-basis: 25%;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  #searchbar {\r\n    width: 50vw;\r\n    border-radius: 100px;\r\n    border: 2px solid;\r\n    border-color: rgba(0, 0, 0, 0.4);\r\n    display: flex;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n  }\r\n  #searchbar:hover {\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n  }\r\n  #searchInput {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: white;\r\n    text-indent: calc(8px + 0.8vw);\r\n    border: 0;\r\n    min-height: 40px;\r\n    height: 7vh;\r\n    min-width: 50px;\r\n    flex-grow: 1;\r\n    font-size: calc(8px + 1.4vh);\r\n  }\r\n  #searchInput::placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput::-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:focus {\r\n    outline: none;\r\n  }\r\n  #searchInput:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 30px white inset !important;\r\n    box-shadow: 0 0 0 30px white inset !important;\r\n    border-radius: 100px;\r\n  }\r\n  #searchButton {\r\n    padding-left: calc(8px + 0.8vw);\r\n    padding-right: calc(8px + 0.8vw);\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: calc(8px + 1vh);\r\n  }\r\n  #searchButton:focus {\r\n    border-radius: 100px;\r\n    outline: none !important;\r\n    outline-style: none;\r\n    box-shadow: none;\r\n    border-color: transparent;\r\n  }\r\n  #note {\r\n    position: absolute;\r\n    left: 2vw;\r\n    width: clamp(200px, 17vw, 400px);\r\n    border-radius: 5px;\r\n  }\r\n  .noteActions {\r\n    display: flex;\r\n    gap: 6px;\r\n    margin-left: 6px;\r\n    margin-bottom: 6px;\r\n  }\r\n  .noteActions > button {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border: 0;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .noteActions > button:hover {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #searchbar {\r\n      width: 75vw;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1199px) {\r\n    #note {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-height: 600px) {\r\n    #note {\r\n      top: 40px;\r\n    }\r\n  }\r\n  @media screen and (max-height: 450px) {\r\n    #note {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","import { backgrounds } from \"./config\";\r\n\r\nexport const getBackgroundFormat = (bg) => {\r\n  const backgroundImageElem = backgrounds.find((background) => background.name === bg);\r\n  let backgroundImageFormat = \"avif\";\r\n  if(backgroundImageElem){\r\n    backgroundImageFormat = backgroundImageElem.format;\r\n  }\r\n  return backgroundImageFormat;\r\n}\r\n\r\nexport const toHex = (color) => {\r\n  let hex = \"#\" + ((1 << 24) + (color.r << 16) + (color.g << 8) + color.b).toString(16).slice(1);\r\n  return hex;\r\n};\r\n\r\nexport const toRGB = (hex) => {\r\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n};\r\n\r\nexport const clearOldExtension = (fileName) => {\r\n  if(fileName.lastIndexOf(\".jpg\") !== -1){\r\n    return fileName.slice(0, fileName.lastIndexOf(\".jpg\"));\r\n  }\r\n  else{\r\n    return fileName;\r\n  }\r\n}\r\n","<script>\r\n  import { getTileImage } from \"../data/storage\";\r\n  import { clearOldExtension } from \"../data/tools\";\r\n  import { userData } from \"../store\";\r\n\r\n  let pages = [];\r\n  let tileZoom;\r\n  let tileGrow;\r\n  let tileMinWidth;\r\n  let tileHeight;\r\n  let tileGap;\r\n  let tileBorder;\r\n  let tileBorderRadius;\r\n  let tileBorderColor;\r\n  let groupTileGap;\r\n  let groupTileBorderRadius;\r\n  let groupTileGrow;\r\n\r\n  userData.subscribe((data) => {\r\n    pages = data.pages;\r\n    tileZoom = data.tileZoom;\r\n    tileGrow = data.tileGrow;\r\n    tileMinWidth = data.tileMinWidth;\r\n    tileHeight = data.tileHeight;\r\n    tileGap = data.tileGap;\r\n    tileBorder = data.tileBorder;\r\n    tileBorderRadius = data.tileBorderRadius;\r\n    tileBorderColor = data.tileBorderColor;\r\n    groupTileGap = data.groupTileGap;\r\n    groupTileBorderRadius = data.groupTileBorderRadius;\r\n    groupTileGrow = data.groupTileGrow;\r\n  });\r\n</script>\r\n\r\n<!--This will show the pages!!!-->\r\n<div class=\"speedDial\">\r\n  <div class=\"speedDialBox\">\r\n    <div class=\"buttons\" style=\"gap: {tileGap}vh\">\r\n      {#each pages as page}\r\n        {#if page.isActive}\r\n          {#if !page.isGroup}\r\n\r\n            <!-- svelte-ignore a11y-missing-content -->\r\n            <a\r\n              href={page.link}\r\n              class=\"pageButton\"\r\n              aria-label={page.link}\r\n              style=\"{\r\n                  page.tileImageType === 'custom' && getTileImage(page.link)\r\n                  ? 'background-image: url(' + (getTileImage(page.link) || '') + ')'\r\n                  : page.tileImageType !== 'none'\r\n                    ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(page.imageName) + '.avif\")'\r\n                    : ''\r\n                };\r\n                background-color: {page.backgroundColor};\r\n                color: {page.textColor};\r\n                font-size: {tileMinWidth / (page.tileName.length * 0.8 <= 1.8 ? 1.8 : page.tileName.length * 0.8)}vh;\r\n                flex-grow: {tileGrow ? 1 : 0};\r\n                min-width: {tileMinWidth}vh;\r\n                height: {tileHeight}vh;\r\n                border: {tileBorder}px solid rgb({tileBorderColor.r},{tileBorderColor.g},{tileBorderColor.b});\r\n                border-radius: {tileBorderRadius}vh;\r\n                {tileHeight < tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n                {!tileZoom ? \"animation: none !important\" : ''}\r\n                \"\r\n            >\r\n              {page.tileImageType === 'none' ? page.tileName : ''}\r\n            </a>\r\n\r\n          {:else if page.isGroup && page.pages.length > 0}\r\n\r\n            <div class=\"pageGroup\" style=\"\r\n              gap: {page.pages.length <= 12 ? groupTileGap : groupTileGap / 2}vh;\r\n              flex-grow: {tileGrow ? 1 : 0};\r\n              min-width: {tileMinWidth}vh;\r\n              height: {tileHeight}vh;\r\n              {!groupTileGrow ? 'display: grid;' : 'display: flex; flex-wrap: wrap;'}\r\n              {!groupTileGrow ? `\r\n                grid-template-columns: ${\r\n                tileMinWidth < tileHeight\r\n                  ? page.pages.length <= 2\r\n                    ? \"1fr\"\r\n                    : page.pages.length <= 6\r\n                      ? \"1fr 1fr\"\r\n                      : page.pages.length <= 12\r\n                        ? \"1fr 1fr 1fr\"\r\n                        : \"1fr 1fr 1fr 1fr\"\r\n                  : page.pages.length === 1\r\n                    ? \"1fr\"\r\n                    : page.pages.length === 2 && tileMinWidth - tileHeight < tileMinWidth / 4\r\n                      ? \"1fr\"\r\n                      : page.pages.length <= 3\r\n                        ? \"1fr 1fr\"\r\n                        : page.pages.length <= 9\r\n                          ? \"1fr 1fr 1fr\"\r\n                          : page.pages.length <= 12\r\n                            ? \"1fr 1fr 1fr 1fr\"\r\n                            : \"1fr 1fr 1fr 1fr 1fr\"\r\n                };\r\n              ` : ''}\r\n            \">\r\n              {#each page.pages as subpage}\r\n                {#if subpage.isActive}\r\n                  <a\r\n                    href={subpage.link}\r\n                    class=\"pageButton\"\r\n                    aria-label={subpage.link}\r\n                    style=\"{\r\n                        subpage.tileImageType === 'custom' && getTileImage(subpage.link)\r\n                        ? 'background-image: url(' + (getTileImage(subpage.link) || '') + ')'\r\n                        : subpage.tileImageType !== 'none'\r\n                          ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(subpage.imageName) + '.avif\")'\r\n                          : ''\r\n                      };\r\n                      background-color: {subpage.backgroundColor};\r\n                      color: {subpage.textColor};\r\n                      font-size: {\r\n                        tileMinWidth\r\n                        / (subpage.tileName.length * 0.8 <= 1.8 ? 1.8 : subpage.tileName.length * 0.8)\r\n                        / (\r\n                          page.pages.length <= 2\r\n                          ? 1.5\r\n                          : page.pages.length <= 9\r\n                            ? 2.5\r\n                            : page.pages.length <= 12\r\n                              ? 3.2\r\n                              : 4.2\r\n                        )\r\n                      }vh;\r\n                      border: {tileBorder}px solid rgb({tileBorderColor.r},{tileBorderColor.g},{tileBorderColor.b});\r\n                      border-radius: {groupTileBorderRadius}vh;\r\n                      min-width: 40px;\r\n                      {tileHeight < tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n                      {!tileZoom ? \"animation: none !important;\" : ''}\r\n                      {groupTileGrow ? `\r\n                        flex-grow: 1;\r\n                        flex-basis: ${\r\n                          tileMinWidth < tileHeight\r\n                          ? page.pages.length <= 2\r\n                            ? \"100%\"\r\n                            : page.pages.length <= 6\r\n                              ? \"40%\"\r\n                              : page.pages.length <= 12\r\n                                ? \"28%\"\r\n                                : \"21%\"\r\n                          : page.pages.length === 2 && tileMinWidth - tileHeight < tileMinWidth / 4\r\n                            ? \"100%\"\r\n                            : page.pages.length <= 3\r\n                              ? \"40%\"\r\n                              : page.pages.length <= 9\r\n                                ? \"28%\"\r\n                                : page.pages.length <= 12\r\n                                  ? \"21%\"\r\n                                  : \"15%\"\r\n                        };\r\n                      ` : ''}\r\n                  \">\r\n                    {subpage.tileImageType === 'none' ? subpage.tileName : ''}\r\n                  </a>\r\n                {/if}\r\n              {/each}\r\n            </div>\r\n\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .speedDialBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n    overflow-x: hidden;\r\n    padding-top: 2em;\r\n    padding-bottom: 2em;\r\n    box-sizing: border-box;\r\n  }\r\n  .buttons {\r\n    width: 75vw;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 0px;\r\n  }\r\n  .pageButton {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    min-width: 180px;\r\n    background-position: center;\r\n    background-size: cover;\r\n    z-index: 0;\r\n    flex-basis: 0;\r\n    line-height: 0;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  .pageButton:hover {\r\n    animation: pop-out 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 2;\r\n  }\r\n  .pageButton:not(:hover) {\r\n    animation: pop-back 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 1;\r\n    transition: z-index 0.25s;\r\n  }\r\n  .pageGroup {\r\n    flex-basis: 0;\r\n    line-height: 0;\r\n  }\r\n</style>\r\n","<script>\r\n  import { toHex, toRGB } from \"../../data/tools\";\r\n\r\n  export let settingsData;\r\n  export let saveSettings;\r\n  export let resetVisuals;\r\n  export let unsavedSettings;\r\n\r\n  // Keep dark mode separate and apply only when saving\r\n  let darkMode = settingsData.darkMode;\r\n\r\n  let tileBorderColor = toHex(settingsData.tileBorderColor);\r\n  let navbarColor = toHex(settingsData.navbarColor);\r\n  let coverColor = toHex(settingsData.coverColor);\r\n  let coverTextColor = toHex(settingsData.coverTextColor);\r\n\r\n  const resetLocalVisuals = () => {\r\n    darkMode = settingsData.darkMode;\r\n    tileBorderColor = toHex(settingsData.tileBorderColor);\r\n    navbarColor = toHex(settingsData.navbarColor);\r\n    coverColor = toHex(settingsData.coverColor);\r\n    coverTextColor = toHex(settingsData.coverTextColor);\r\n  }\r\n</script>\r\n\r\n<h2>Visuals</h2>\r\n<form\r\n  id=\"settingsForm\"\r\n  on:submit={(e) => {\r\n    //Convert colors from HEX to RGB\r\n    settingsData.tileBorderColor = toRGB(tileBorderColor);\r\n    settingsData.navbarColor = toRGB(navbarColor);\r\n    settingsData.coverColor = toRGB(coverColor);\r\n    settingsData.coverTextColor = toRGB(coverTextColor);\r\n\r\n    settingsData.darkMode = darkMode;\r\n\r\n    saveSettings(settingsData, e);\r\n    unsavedSettings = false;\r\n  }}\r\n>\r\n  <div class=\"settingsFormGroup\" class:darkModifier={settingsData.darkMode}>\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_your_name.png\" alt=\"Set your name\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_yourName\">Your name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"set_yourName\"\r\n          name=\"set_yourName\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={settingsData.yourName}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_show_cover.png\" alt=\"Set show cover\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_showCover\">Show cover</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_showCover\"\r\n          name=\"set_showCover\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.showCover}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_clock_background.png\" alt=\"Set clock background\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_clockBackground\">Clock background</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_clockBackground\"\r\n          name=\"set_clockBackground\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.clockBackground}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_clock_24_hour.png\" alt=\"Set 24 hour clock\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_clock24Hour\">24 hour clock</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_clock24Hour\"\r\n          name=\"set_clock24Hour\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.clock24Hour}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_dark_mode.png\" alt=\"Set dark panels\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_darkMode\">Dark panels</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_darkMode\"\r\n          name=\"set_darkMode\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={darkMode}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_zoom.png\" alt=\"Set tile zoom on hover\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileZoom\">Tile zoom on hover</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_tileZoom\"\r\n          name=\"set_tileZoom\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.tileZoom}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_fill_space.png\" alt=\"Set tile fill space\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileGrow\">Tile fill space</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_tileGrow\"\r\n          name=\"set_tileGrow\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.tileGrow}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_minimum_width.png\" alt=\"Set tile minimum width\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileMinimumWidth\">Tile minimum width</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"150\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileMinWidth}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"10\"\r\n            max=\"150\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileMinimumWidth\"\r\n            name=\"set_tileMinimumWidth\"\r\n            bind:value={settingsData.tileMinWidth}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_height.png\" alt=\"Set tile height\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileHeight\">Tile height</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"5\"\r\n            max=\"80\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileHeight}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"5\"\r\n            max=\"80\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileHeight\"\r\n            name=\"set_tileHeight\"\r\n            bind:value={settingsData.tileHeight}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_gap.png\" alt=\"Set tile gap\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileGap\">Tile gap</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileGap\"\r\n            name=\"set_tileGap\"\r\n            bind:value={settingsData.tileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border_radius.png\" alt=\"Set tile border radius\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorderRadius\">Tile border radius</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileBorderRadius\"\r\n            name=\"set_tileBorderRadius\"\r\n            bind:value={settingsData.tileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border.png\" alt=\"Set tile border\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorder\">Tile border size</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            step=\"1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.tileBorder}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            step=\"1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_tileBorder\"\r\n            name=\"set_tileBorder\"\r\n            bind:value={settingsData.tileBorder}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_tile_border_color.png\" alt=\"Set tile border color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_tileBorderColor\">Tile border color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_tileBorderColor\"\r\n          name=\"set_tileBorderColor\"\r\n          bind:value={tileBorderColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_fill_space.png\" alt=\"Set group tile fill space\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileGrow\">Group tile fill space</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"set_groupTileGrow\"\r\n          name=\"set_groupTileGrow\"\r\n          class=\"settingsCheckbox\"\r\n          bind:checked={settingsData.groupTileGrow}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_gap.png\" alt=\"Set group tile gap\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileGap\">Group tile gap</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.groupTileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_groupTileGap\"\r\n            name=\"set_groupTileGap\"\r\n            bind:value={settingsData.groupTileGap}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_group_tile_border_radius.png\" alt=\"Set group tile border radius\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_groupTileBorderRadius\">Group tile border radius</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.groupTileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"80\"\r\n            step=\"0.1\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_groupTileBorderRadius\"\r\n            name=\"set_groupTileBorderRadius\"\r\n            bind:value={settingsData.groupTileBorderRadius}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_navbar_opacity.png\" alt=\"Set navbar opacity\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_navbarOpacity\">Navbar opacity</label>\r\n        <div class=\"settingsNumberSliderGroup\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            class=\"settingsSlider\"\r\n            bind:value={settingsData.navbarOpacity}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            class=\"settingsNumberInput\"\r\n            id=\"set_navbarOpacity\"\r\n            name=\"set_navbarOpacity\"\r\n            bind:value={settingsData.navbarOpacity}\r\n            on:input={() => {\r\n              unsavedSettings = true;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_navbar_color.png\" alt=\"Set navbar color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_navbarColor\">Navbar color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_navbarColor\"\r\n          name=\"set_navbarColor\"\r\n          bind:value={navbarColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_cover_color.png\" alt=\"Set cover color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_coverColor\">Cover color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_coverColor\"\r\n          name=\"set_coverColor\"\r\n          bind:value={coverColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsInput\">\r\n      <div class=\"imagePlaceholder\">\r\n        <img src=\"static/images/settings/s_cover_text_color.png\" alt=\"Set cover text color\" />\r\n      </div>\r\n      <hr/>\r\n      <div class=\"settingsInputGroup\">\r\n        <label for=\"set_coverTextColor\">Cover text color</label>\r\n        <input\r\n          type=\"color\"\r\n          class=\"settingsColorInput\"\r\n          id=\"set_coverTextColor\"\r\n          name=\"set_coverTextColor\"\r\n          bind:value={coverTextColor}\r\n          on:input={() => {\r\n            unsavedSettings = true;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"settingBottomSection\">\r\n    <div class=\"settingsButtonWithError\">\r\n      <button type=\"submit\" class=\"saveSettingsButton\">Save</button>\r\n\r\n      {#if unsavedSettings}\r\n        <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n      {/if}\r\n    </div>\r\n\r\n    <div class=\"settingsResetButton\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"resetSettingsButton\"\r\n        on:click={() => {\r\n          resetVisuals();\r\n          resetLocalVisuals();\r\n          unsavedSettings = false;\r\n        }}\r\n      >\r\n        Reset to default settings\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  hr {\r\n    width: 90%;\r\n    border: 0;\r\n    border-top: 1px solid lightgray;\r\n  }\r\n  .settingsFormGroup.darkModifier hr {\r\n    border-color: #3a99ff;\r\n  }\r\n  #settingsForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsFormGroup {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 15px;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsInput {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border: 1px solid lightgray;\r\n    border-radius: 15px;\r\n    flex-grow: 1;\r\n    max-width: 500px;\r\n    flex-basis: 24%;\r\n  }\r\n  .settingsFormGroup.darkModifier .settingsInput {\r\n    border-color: #3a99ff;\r\n  }\r\n  .imagePlaceholder {\r\n    width: 250px;\r\n    min-height: 125px;\r\n  }\r\n  .settingsInput img {\r\n    width: 250px;\r\n    display: block;\r\n  }\r\n  .settingsInputGroup {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0px 15px 10px 15px;\r\n    width: calc(100% - 30px);\r\n  }\r\n  .settingsInput label {\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n  }\r\n  .settingsInput input:out-of-range {\r\n    background-color: rgba(255, 0, 0, 0.15);\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    max-width: 120px;\r\n  }\r\n  .settingsNumberInput {\r\n    padding: 3px 5px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    width: 40px;\r\n  }\r\n  .settingsNumberSliderGroup {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    gap: 5px;\r\n  }\r\n  .settingsSlider {\r\n    width: 50px;\r\n    flex-grow: 1;\r\n  }\r\n  .settingsSlider::-webkit-slider-thumb {\r\n    cursor: pointer;\r\n  }\r\n  .settingsCheckbox {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n  .settingsColorInput {\r\n    padding: 1px 3px;\r\n    border-radius: 5px;\r\n    border: 1px solid gray;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .settingsColorInput:hover {\r\n    background-color: rgb(225, 225, 225);\r\n  }\r\n  .settingBottomSection{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 6px;\r\n  }\r\n  .settingsButtonWithError {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .resetSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: #000;\r\n    background-color: #fff;\r\n    transition: 0.3s;\r\n  }\r\n  .resetSettingsButton:hover {\r\n    background-color: #f3f3f3;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    background-color: rgba(255, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 0, 0, 0.3);\r\n    color: red;\r\n    line-height: 1rem;\r\n    padding: 6px 12px;\r\n    border-radius: 8px;\r\n    margin-top: 8px;\r\n    animation: shake-bottom 4s cubic-bezier(0.455, 0.030, 0.515, 0.955) both infinite;\r\n    animation-delay: 2s;\r\n  }\r\n</style>\r\n","<script>\r\n  export let changeBackground;\r\n  let bg, fileinput;\r\n\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      changeBackground(bg);\r\n    };\r\n  };\r\n</script>\r\n\r\n<div id=\"customBackgrounds\">\r\n  <h4>Custom background image</h4>\r\n  <button\r\n    class=\"chan\"\r\n    on:click={() => {\r\n      fileinput.click();\r\n    }}\r\n  >\r\n    Upload image\r\n  </button>\r\n  <input\r\n    style=\"display:none\"\r\n    type=\"file\"\r\n    accept=\".jpg, .jpeg, .png, .webp, .avif\"\r\n    on:change={(e) => onFileSelected(e)}\r\n    bind:this={fileinput}\r\n  />\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  button {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  button:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { backgrounds, sourceDetails } from \"../../data/config\";\r\n  import { getBackgroundFormat } from \"../../data/tools\";\r\n  import CustomBackgrounds from \"./CustomBackgrounds.svelte\";\r\n\r\n  export let changeBackground;\r\n  export let changeBackgroundColor;\r\n\r\n  let backgroundImage;\r\n  let savedBackgroundSolidColor;\r\n  let newBackgroundSolidColor;\r\n  let isBackgroundSolid;\r\n  let backgroundSolidColorChanged = false;\r\n  let backgroundSources = new Set();\r\n\r\n  let localStorageUsedSpace = (new Blob(Object.values(localStorage)).size / 1024 / 1024).toFixed(2);\r\n  let showLocalStorageInfo = false;\r\n\r\n  //Add sources to set\r\n  backgrounds.forEach((bg) => {\r\n    if(sourceDetails.get(bg.source)){\r\n      backgroundSources.add(sourceDetails.get(bg.source));\r\n    }\r\n  });\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    savedBackgroundSolidColor = data.backgroundSolidColor;\r\n    newBackgroundSolidColor = data.backgroundSolidColor;\r\n    isBackgroundSolid = data.isBackgroundSolid;\r\n  });\r\n\r\n  $: backgroundImageUrl = \"static/images/bg/thumbnails/\" + backgroundImage + \".\" + getBackgroundFormat(backgroundImage);\r\n  $: if (backgroundImage) {\r\n    // On background image change, recalculate local storage size\r\n    localStorageUsedSpace = (new Blob(Object.values(localStorage)).size / 1024 / 1024).toFixed(2);\r\n  }\r\n</script>\r\n\r\n<h2>Background</h2>\r\n<div id=\"currentBackgroundImageContainer\">\r\n  <h4>Current background image</h4>\r\n  <div\r\n    id=\"currentBackgroundImage\"\r\n    style={ isBackgroundSolid\r\n    ? \"border: 1px solid lightgray; background-color: \" + savedBackgroundSolidColor + \";\"\r\n    : \"\" }\r\n  >\r\n    {#if !isBackgroundSolid}\r\n    <img\r\n      src=\"{backgroundImage.length > 5 ? backgroundImage : backgroundImageUrl}\"\r\n      alt=\"Current background\"\r\n    />\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"customBackgroundsContainer\">\r\n  <CustomBackgrounds {changeBackground} />\r\n  <div>\r\n    <h4>Custom background color</h4>\r\n    <div id=\"customBackgroundColorGroup\">\r\n      <input\r\n        type=\"color\"\r\n        class=\"settingsBackgroundColorInput\"\r\n        id=\"set_backgroundColor\"\r\n        name=\"set_backgroundColor\"\r\n        bind:value={newBackgroundSolidColor}\r\n        on:input={() => {\r\n          backgroundSolidColorChanged = true;\r\n        }}\r\n      />\r\n      {#if backgroundSolidColorChanged || !isBackgroundSolid}\r\n        <button\r\n          class=\"settingsBackgroundColorButton\"\r\n          on:click={() => {\r\n            backgroundSolidColorChanged = false;\r\n            changeBackgroundColor(newBackgroundSolidColor);\r\n          }}>\r\n          Apply\r\n        </button>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"localStorageSpace\">\r\n  <small>Local storage space</small>\r\n  <div id=\"spaceBar\">\r\n    <div id=\"spaceBarUsed\" class:danger={localStorageUsedSpace > 4} style={`width: ${localStorageUsedSpace*100/5}%`}></div>\r\n    <p id=\"spaceBarText\">{localStorageUsedSpace} MB / 5.00 MB</p>\r\n  </div>\r\n  <button id=\"localStorageInfoButton\" on:click={() => {showLocalStorageInfo = !showLocalStorageInfo}}>\r\n    <i class=\"fa-solid fa-info\" />\r\n  </button>\r\n</div>\r\n{#if showLocalStorageInfo}\r\n  <small>\r\n    Local storage is used to store your settings, background images, tile custom images, and notes.\r\n  </small>\r\n{/if}\r\n\r\n<h2>Gallery</h2>\r\n{#each [...backgroundSources] as source}\r\n  <small>\r\n    Background images provided by <a href=\"{source.url}\">{source.label}</a>\r\n  </small>\r\n  <div class=\"settingsBackgrounds\">\r\n    {#each backgrounds as bg, index}\r\n      {#if bg.source === source.name}\r\n        <div class=\"backgroundImageSelectorPlaceholder\">\r\n          <img\r\n            src=\"static/images/bg/thumbnails/{bg.name}.{bg.format}\"\r\n            alt=\"Background {index + 1}\"\r\n            class=\"backgroundImageSelector\"\r\n            on:click={() => changeBackground(bg.name)}\r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n{/each}\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  #currentBackgroundImageContainer img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    display: block;\r\n  }\r\n  #currentBackgroundImage {\r\n    width: 200px;\r\n    min-height: 125px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n  }\r\n  #customBackgroundsContainer {\r\n    display: flex;\r\n    gap: 5vw;\r\n  }\r\n  #customBackgroundColorGroup {\r\n    display: flex;\r\n    gap: 5px;\r\n  }\r\n  #localStorageSpace {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-top: 12px;\r\n  }\r\n  #localStorageSpace small {\r\n    margin-bottom: 4px;\r\n  }\r\n  #localStorageSpace p {\r\n    margin: 0;\r\n  }\r\n  #spaceBar {\r\n    width: 200px;\r\n    height: 15px;\r\n    border-radius: 10px;\r\n    background-color: #ddd;\r\n    position: relative;\r\n  }\r\n  #spaceBarUsed {\r\n    min-width: 3%;\r\n    height: 15px;\r\n    border-radius: 10px;\r\n    background-color: #0b1;\r\n  }\r\n  #spaceBarUsed.danger {\r\n    background-color: rgb(255, 125, 70);\r\n  }\r\n  #spaceBarText {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    text-align: center;\r\n    font-size: 11px;\r\n    font-weight: bold;\r\n    color: #333;\r\n  }\r\n  #localStorageInfoButton {\r\n    width: 22px;\r\n    height: 22px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n  }\r\n  #localStorageInfoButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  .settingsBackgroundColorInput {\r\n    margin-top: 8px;\r\n    width: 120px;\r\n    height: 32px;\r\n    padding: 4px 10px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsBackgroundColorButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .settingsBackgrounds {\r\n    display: flex;\r\n    gap: 3px;\r\n    padding: 15px;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 10px;\r\n  }\r\n  .backgroundImageSelectorPlaceholder {\r\n    width: 180px;\r\n    min-height: 115px;\r\n    max-width: 220px;\r\n    flex-grow: 1;\r\n  }\r\n  .backgroundImageSelector {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    display: block;\r\n  }\r\n  .backgroundImageSelector:hover {\r\n    filter: drop-shadow(0px 0px 2px rgb(80, 80, 80));\r\n    transform: scale(1.1);\r\n    z-index: 2;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #customBackgroundsContainer {\r\n      flex-direction: column;\r\n      gap: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { deleteTileImage, getTileImage, saveTileImage } from \"../../data/storage\";\r\n  import { clearOldExtension } from \"../../data/tools\";\r\n\r\n  export let page;\r\n  export let settingsData;\r\n  export let unsavedPages;\r\n  export let modalActive = false;\r\n\r\n  let localStorageUsedSpace = (new Blob(Object.values(localStorage)).size / 1024 / 1024).toFixed(2);\r\n  let showLocalStorageInfo = false;\r\n\r\n  let bg, fileinput;\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      try {\r\n        saveTileImage(page.link, bg);\r\n        page.tileImageType = \"custom\";\r\n        unsavedPages = true;\r\n      } catch {\r\n        alert(\r\n          \"Tile image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n        );\r\n      }\r\n    };\r\n  };\r\n\r\n  const onDeleteImage = () => {\r\n    deleteTileImage(page.link);\r\n    page.tileImageType = \"custom\";\r\n    unsavedPages = true;\r\n  }\r\n\r\n  $: if (bg || page.tileImageType === 'custom') {\r\n    // On custom image change, recalculate local storage size\r\n    localStorageUsedSpace = (new Blob(Object.values(localStorage)).size / 1024 / 1024).toFixed(2);\r\n  }\r\n</script>\r\n\r\n<div id=\"settingsPageImageTypeModalContainer\" on:click={(e) => { e.stopImmediatePropagation(); modalActive = false; }}>\r\n  <div id=\"settingsPageImageTypeModal\" class:darkModifier={settingsData.darkMode} on:click={(e) => { e.stopImmediatePropagation() }}>\r\n    <div id=\"imageTypeButtonGroup\">\r\n      <h4>Tile image type</h4>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'predefined' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'predefined'; unsavedPages = true; }}\r\n      >\r\n        Predefined\r\n      </button>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'custom' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'custom'; unsavedPages = true; }}\r\n      >\r\n        Custom\r\n      </button>\r\n      <button\r\n        class=\"imageTypeButton {page.tileImageType === 'none' ? 'buttonSelected' : ''}\"\r\n        on:click={() => { page.tileImageType = 'none'; unsavedPages = true; }}\r\n      >\r\n        Text\r\n      </button>\r\n    </div>\r\n\r\n    {#if page.tileImageType === 'custom' }\r\n      <div id=\"customImage\">\r\n        <h4>Custom background image</h4>\r\n        <button\r\n          class=\"customImageButton\"\r\n          on:click={() => {\r\n            fileinput.click();\r\n          }}\r\n        >\r\n          Upload image\r\n        </button>\r\n        <input\r\n          style=\"display:none\"\r\n          type=\"file\"\r\n          accept=\".jpg, .jpeg, .png, .webp, .avif\"\r\n          on:change={(e) => onFileSelected(e)}\r\n          bind:this={fileinput}\r\n        />\r\n\r\n        {#if page.tileImageType === 'custom' && getTileImage(page.link)}\r\n          <button\r\n            class=\"deleteCustomImageButton\"\r\n            on:click={onDeleteImage}\r\n          >\r\n            Delete image\r\n          </button>\r\n        {/if}\r\n\r\n        <div id=\"localStorageSpace\">\r\n          <small>Local storage space</small>\r\n          <div id=\"spaceBar\">\r\n            <div id=\"spaceBarUsed\" class:danger={localStorageUsedSpace > 4} style={`width: ${localStorageUsedSpace*100/5}%`}></div>\r\n            <p id=\"spaceBarText\">{localStorageUsedSpace} MB / 5.00 MB</p>\r\n          </div>\r\n          <button id=\"localStorageInfoButton\" on:click={() => {showLocalStorageInfo = !showLocalStorageInfo}}>\r\n            <i class=\"fa-solid fa-info\" />\r\n          </button>\r\n        </div>\r\n        {#if showLocalStorageInfo}\r\n          <small>\r\n            Local storage is used to store your settings, background images, tile custom images, and notes.\r\n          </small>\r\n        {/if}\r\n      </div>\r\n    {/if}\r\n\r\n    {#if page.tileImageType === 'none' }\r\n      <div id=\"solidBackgroundSettings\">\r\n        <h4>Settings</h4>\r\n        <p>Tile name</p>\r\n        <input\r\n          type=\"text\"\r\n          id=\"set_pageTileName\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.tileName}\r\n          on:change={() => { unsavedPages = true; }}\r\n          placeholder=\"Page tile text\"\r\n          maxlength=\"20\"\r\n          required={true}\r\n        />\r\n        <p>Background color</p>\r\n        <input\r\n          type=\"color\"\r\n          id=\"set_pageBackgroundColor\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.backgroundColor}\r\n          on:change={() => { unsavedPages = true; }}\r\n          required={true}\r\n        />\r\n        <p>Text color</p>\r\n        <input\r\n          type=\"color\"\r\n          id=\"set_pageTextColor\"\r\n          class=\"settingsTextInput\"\r\n          bind:value={page.textColor}\r\n          on:change={() => { unsavedPages = true; }}\r\n          required={true}\r\n        />\r\n      </div>\r\n    {/if}\r\n\r\n    <h4>Preview</h4>\r\n    <div\r\n      id=\"tilePreview\"\r\n      style=\"\r\n        {\r\n          page.tileImageType === 'custom' && getTileImage(page.link)\r\n          ? 'background-image: url(' + (getTileImage(page.link) || '') + ')'\r\n          : page.tileImageType !== 'none'\r\n            ? 'background-image: url(\"static/images/thumbnails/' + clearOldExtension(page.imageName) + '.avif\")'\r\n            : ''\r\n        };\r\n        background-color: {page.backgroundColor};\r\n        color: {page.textColor};\r\n        font-size: {settingsData.tileMinWidth / (page.tileName.length * 0.8 <= 1.8 ? 1.8 : page.tileName.length * 0.8)}vh;\r\n        width: {settingsData.tileMinWidth}vh;\r\n        height: {settingsData.tileHeight}vh;\r\n        border: {settingsData.tileBorder}px solid rgb({settingsData.tileBorderColor.r},{settingsData.tileBorderColor.g},{settingsData.tileBorderColor.b});\r\n        border-radius: {settingsData.tileBorderRadius}vh;\r\n        {settingsData.tileHeight < settingsData.tileMinWidth ? 'background-size: 180% auto;' : ''}\r\n        {!settingsData.tileZoom ? \"animation: none !important\" : ''}\r\n      \"\r\n    >\r\n      {page.tileImageType === 'none' ? page.tileName : ''}\r\n    </div>\r\n    <div id=\"returnButtonContainer\">\r\n      <button\r\n        id=\"returnButton\"\r\n        on:click={(e) => { e.stopImmediatePropagation(); modalActive = false }}>\r\n        Return\r\n      </button>\r\n      {#if unsavedPages}\r\n        <small>After closing this window do not forget to save your changes.</small>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  #settingsPageImageTypeModalContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #settingsPageImageTypeModal {\r\n    width: 600px;\r\n    max-height: 70vh;\r\n    overflow: auto;\r\n    background-color: #fff;\r\n    padding: 40px;\r\n    border-radius: 10px;\r\n  }\r\n  #settingsPageImageTypeModal.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n  }\r\n  .imageTypeButton {\r\n    padding: 8px 20px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: white;\r\n    border: 1px solid #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .buttonSelected {\r\n    background-color: #3a99ff !important;\r\n    color: white !important;\r\n  }\r\n  #settingsPageImageTypeModal.darkModifier .imageTypeButton {\r\n    color: white;\r\n    background-color: transparent;\r\n  }\r\n  #tilePreview {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    min-width: 40px;\r\n    background-position: center;\r\n    background-size: cover;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  #returnButtonContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    margin-top: 16px;\r\n  }\r\n  #returnButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  #returnButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  .customImageButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .customImageButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  .deleteCustomImageButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: rgb(210, 40, 40);\r\n    transition: 0.3s;\r\n  }\r\n  .deleteCustomImageButton:hover {\r\n    background-color: rgb(180, 30, 30);\r\n  }\r\n  #localStorageSpace {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-top: 12px;\r\n  }\r\n  #localStorageSpace small {\r\n    margin-bottom: 4px;\r\n  }\r\n  #localStorageSpace p {\r\n    margin: 0;\r\n  }\r\n  #spaceBar {\r\n    width: 200px;\r\n    height: 15px;\r\n    border-radius: 10px;\r\n    background-color: #ddd;\r\n    position: relative;\r\n  }\r\n  #spaceBarUsed {\r\n    min-width: 3%;\r\n    height: 15px;\r\n    border-radius: 10px;\r\n    background-color: #0b1;\r\n  }\r\n  #spaceBarUsed.danger {\r\n    background-color: rgb(255, 125, 70);\r\n  }\r\n  #spaceBarText {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    text-align: center;\r\n    font-size: 11px;\r\n    font-weight: bold;\r\n    color: #333;\r\n  }\r\n  #localStorageInfoButton {\r\n    width: 22px;\r\n    height: 22px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n  }\r\n  #localStorageInfoButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  #solidBackgroundSettings p {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n</style>\r\n","<script>\r\n  import PagesImageModal from \"./PagesImageModal.svelte\";\r\n\r\n  export let group;\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let movePage;\r\n  export let getImageNameFor;\r\n  export let checkWebsite;\r\n  export let escapeHTML;\r\n  export let unsavedPages;\r\n  let addPageInput = \"\"; //Binded to input\r\n\r\n  let allowDrag = false; // Allow drag and drop only when the mouse is over the drag handle\r\n  let draggedItem = undefined;\r\n  let draggedItemIndex = undefined;\r\n  let draggedOverIndex = undefined;\r\n\r\n  // Tile image modal\r\n  let imageModalActive = false;\r\n  let selectedImageIndex = -1;\r\n\r\n  // Group modal\r\n  export let modalActive = false;\r\n\r\n  const handleDragEnd = (index) => {\r\n    // If the dragged item is dropped on itself, return early\r\n    if (index === draggedOverIndex) {\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (draggedItemIndex !== undefined) {\r\n      // Remove the dragged item from the list\r\n      group.pages.splice(draggedItemIndex, 1);\r\n\r\n      // Insert the dragged item at the new position\r\n      group.pages.splice(draggedOverIndex, 0, draggedItem);\r\n\r\n      group.pages = [...group.pages];\r\n      unsavedPages = true;\r\n\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n    }\r\n  }\r\n</script>\r\n\r\n<div id=\"settingsPageGroupModalContainer\" on:click={() => { modalActive = false; }}>\r\n  <div id=\"settingsPageGroupModal\" class:darkModifier={settingsData.darkMode} on:click={(e) => { e.stopImmediatePropagation() }}>\r\n    <h3>{group.name}</h3>\r\n\r\n    {#if group.pages.length === 0}\r\n      <small>No pages in this group</small>\r\n    {/if}\r\n\r\n    <div id=\"settingsPagesList\">\r\n      {#each group.pages as page, index}\r\n        <div\r\n          class=\"settingsPagesListPageContainer\"\r\n          draggable={allowDrag}\r\n          on:dragstart={() => { draggedItem = page; draggedItemIndex = index; }}\r\n          on:dragend={() => handleDragEnd(index)}\r\n          on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n          on:dragenter={(e) => { e.preventDefault(); }}\r\n        >\r\n          <div\r\n            class=\"settingsPagesListPage\"\r\n            style=\"\r\n              border-color: {index === draggedItemIndex ? 'red' : index === draggedOverIndex ? '#3a99ff' : 'lightgray'};\r\n              background: {\r\n                index === draggedItemIndex ? 'linear-gradient(to right, red, transparent 50px)' :\r\n                index === draggedOverIndex ?\r\n                  draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                  'linear-gradient(135deg, #3a99ff, transparent 40px)' :\r\n                  'linear-gradient(45deg, #3a99ff, transparent 40px)' :\r\n                'unset'\r\n              };\r\n            \"\r\n          >\r\n            <div class=\"settingsPagesGroupLeft\">\r\n              <div class=\"settingsDragHandle\"\r\n                on:focus={() => { allowDrag = true; }}\r\n                on:mouseover={() => { allowDrag = true; }}\r\n                on:mouseleave={() => { allowDrag = false; }}\r\n              >\r\n                <i class=\"fa-solid fa-grip-vertical\" />\r\n              </div>\r\n              <div class=\"settingsPagesMoveButtons\">\r\n                <button\r\n                  on:click={() => {\r\n                    movePage(group.pages, index, \"up\");\r\n                    unsavedPages = true;\r\n                  }}\r\n                >\r\n                  <i class=\"fa-solid fa-angle-up\" />\r\n                </button>\r\n                <button\r\n                  on:click={() => {\r\n                    movePage(group.pages, index, \"down\");\r\n                    unsavedPages = true;\r\n                  }}\r\n                >\r\n                  <i class=\"fa-solid fa-angle-down\" />\r\n                </button>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newLinkBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.link}\r\n                placeholder=\"Type the address of the page\"\r\n                maxlength=\"500\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.link = escapeHTML(checkWebsite(page.link));\r\n                  page.imageName = getImageNameFor(page.link);\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }}\r\n              />\r\n            </div>\r\n            <div class=\"settingsPageListButtons\">\r\n              <i on:click={() => { imageModalActive = true; selectedImageIndex = index; }} class=\"fa-solid fa-image pointer\" />\r\n              <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} on:change={() => {unsavedPages = true}} />\r\n              <input\r\n                on:click={() => {\r\n                  deletePage(group.pages, index);\r\n                  unsavedPages = true;\r\n                }}\r\n                type=\"button\"\r\n                class=\"pageDeleteButton\"\r\n                value=\"X\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  \r\n    {#if group.pages.length < 40}\r\n      <div id=\"settingsPageOptions\">\r\n        <h4>Add new page</h4>\r\n        <form\r\n          class=\"settingsPageInput\"\r\n          on:submit={(e) => {\r\n            addPage(group.pages, addPageInput, e);\r\n    \r\n            //Clear page input after adding it\r\n            addPageInput = \"\";\r\n    \r\n            unsavedPages = true;\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            id=\"set_newPageBox\"\r\n            class=\"settingsTextInput\"\r\n            bind:value={addPageInput}\r\n            placeholder=\"Type the address of the page\"\r\n            maxlength=\"500\"\r\n            required={true}\r\n          />\r\n          <button type=\"submit\" class=\"addPageButton\">Add</button>\r\n        </form>\r\n      </div>\r\n    {:else}\r\n      <small class=\"settingsPageInputWarning\">Maximum number of pages in a group reached.</small>\r\n    {/if}\r\n\r\n    <div id=\"returnButtonContainer\">\r\n      <button\r\n        id=\"returnButton\"\r\n        on:click={(e) => { e.stopImmediatePropagation(); modalActive = false }}>\r\n        Return\r\n      </button>\r\n      {#if unsavedPages}\r\n        <small>After closing this window do not forget to save your changes.</small>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n\r\n  {#if imageModalActive}\r\n    <PagesImageModal\r\n      settingsData={settingsData}\r\n      page={group.pages[selectedImageIndex]}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={imageModalActive}\r\n    />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  h3 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.8em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .pointer {\r\n    cursor: pointer;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsTextInput {\r\n    color: white;\r\n    outline: none;\r\n    border-color: #3a99ff;\r\n  }\r\n  .addPageButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .addPageButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    height: calc(100% - 180px);\r\n  }\r\n  .settingsPagesListPageContainer:not(:first-child) {\r\n    padding-top: 3px;\r\n  }\r\n  .settingsPagesListPageContainer:not(:last-child) {\r\n    padding-bottom: 2px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsPagesListPage {\r\n    border-color: #3a99ff !important;\r\n  }\r\n  .settingsDragHandle {\r\n    margin-left: 4px;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-grow: 1;\r\n    padding-right: 8px;\r\n  }\r\n  .settingsPageLinkInput {\r\n    width: 100%;\r\n    border: 0;\r\n    overflow-wrap: anywhere;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPageGroupModal.darkModifier .settingsPageLinkInput {\r\n    color: white;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    font-size: 10px;\r\n    padding: 3px 5px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsPagesMoveButtons button:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n    font-size: 1.1em;\r\n  }\r\n  .settingsPageInputWarning {\r\n    display: block;\r\n    margin-top: 12px;\r\n    margin-bottom: 55px;\r\n  }\r\n  #settingsPageGroupModalContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #settingsPageGroupModal {\r\n    width: 600px;\r\n    max-height: 70vh;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    padding: 40px;\r\n    border-radius: 10px;\r\n  }\r\n  #settingsPageGroupModal.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n  }\r\n  #returnButtonContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    margin-top: 16px;\r\n  }\r\n  #returnButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  #returnButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { deleteAllTileImages, getTileImage } from \"../../data/storage\";\r\n  import PagesGroupModal from \"./PagesGroupModal.svelte\";\r\n  import PagesImageModal from \"./PagesImageModal.svelte\";\r\n\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let saveSettings;\r\n  export let movePage;\r\n  export let getImageNameFor;\r\n  export let checkWebsite;\r\n  export let escapeHTML;\r\n  export let unsavedPages;\r\n  export let createGroup;\r\n\r\n  let addPageInput = \"\"; //Binded to input\r\n  let allowDrag = false; // Allow drag and drop only when the mouse is over the drag handle\r\n  let draggedItem = undefined;\r\n  let draggedItemIndex = undefined;\r\n  let draggedOverIndex = undefined;\r\n\r\n  // Show delete tile image confirm after delete button was clicked\r\n  let showDeleteTileImageConfirm = false;\r\n\r\n  // Tile image modal\r\n  let imageModalActive = false;\r\n  let selectedIndex = -1;\r\n\r\n  // Group modal\r\n  let groupModalActive = false;\r\n  let selectedGroupIndex = -1;\r\n\r\n  const handleDragEnd = (index) => {\r\n    // If the dragged item is dropped on itself, return early\r\n    if (index === draggedOverIndex) {\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (draggedItemIndex !== undefined) {\r\n      // Remove the dragged item from the list\r\n      settingsData.pages.splice(draggedItemIndex, 1);\r\n\r\n      // Insert the dragged item at the new position\r\n      settingsData.pages.splice(draggedOverIndex, 0, draggedItem);\r\n\r\n      settingsData.pages = [...settingsData.pages];\r\n      unsavedPages = true;\r\n\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n    }\r\n  }\r\n\r\n  const onDeleteTileImageClick = () => {\r\n    deleteAllTileImages();\r\n    settingsData.pages = [...settingsData.pages];\r\n    showDeleteTileImageConfirm = false;\r\n    unsavedPages = true;\r\n  }\r\n</script>\r\n\r\n<h2>Pages</h2>\r\n<div id=\"settingsPages\" class:darkModifier={settingsData.darkMode}>\r\n  <div id=\"settingsPagesList\">\r\n    {#each settingsData.pages as page, index}\r\n      <div\r\n        class=\"settingsPagesListPageContainer\"\r\n        draggable={allowDrag}\r\n        on:dragstart={() => { draggedItem = page; draggedItemIndex = index; }}\r\n        on:dragend={() => handleDragEnd(index)}\r\n        on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n        on:dragenter={(e) => { e.preventDefault(); }}\r\n      >\r\n        <div\r\n          class=\"settingsPagesListPage\"\r\n          style=\"\r\n            border-color: {index === draggedItemIndex ? 'red' : index === draggedOverIndex ? '#3a99ff' : 'lightgray'};\r\n            background: {\r\n              index === draggedItemIndex ? 'linear-gradient(to right, red, transparent 50px)' :\r\n              index === draggedOverIndex ?\r\n                draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                'linear-gradient(135deg, #3a99ff, transparent 40px)' :\r\n                'linear-gradient(45deg, #3a99ff, transparent 40px)' :\r\n              'unset'\r\n            };\r\n          \"\r\n        >\r\n          <div class=\"settingsPagesGroupLeft\">\r\n            <div class=\"settingsDragHandle\"\r\n              on:focus={() => { allowDrag = true; }}\r\n              on:mouseover={() => { allowDrag = true; }}\r\n              on:mouseleave={() => { allowDrag = false; }}\r\n            >\r\n              <i class=\"fa-solid fa-grip-vertical\" />\r\n            </div>\r\n            <div class=\"settingsPagesMoveButtons\">\r\n              <button\r\n                on:click={() => {\r\n                  movePage(settingsData.pages, index, \"up\");\r\n                  unsavedPages = true;\r\n                }}\r\n              >\r\n                <i class=\"fa-solid fa-angle-up\" />\r\n              </button>\r\n              <button\r\n                on:click={() => {\r\n                  movePage(settingsData.pages, index, \"down\");\r\n                  unsavedPages = true;\r\n                }}\r\n              >\r\n                <i class=\"fa-solid fa-angle-down\" />\r\n              </button>\r\n            </div>\r\n            {#if page.isGroup}\r\n              <i class=\"fa-regular fa-folder\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newGroupNameBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.name}\r\n                placeholder=\"Type the nanme of the group\"\r\n                maxlength=\"50\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.name = escapeHTML(page.name);\r\n                }}\r\n              />\r\n            {:else}\r\n              <input\r\n                type=\"text\"\r\n                id=\"set_newLinkBox\"\r\n                class=\"settingsPageLinkInput\"\r\n                bind:value={page.link}\r\n                placeholder=\"Type the address of the page\"\r\n                maxlength=\"500\"\r\n                required={true}\r\n                on:input={() => {\r\n                  unsavedPages = true;\r\n                }}\r\n                on:change={() => {\r\n                  page.link = escapeHTML(checkWebsite(page.link));\r\n                  page.imageName = getImageNameFor(page.link);\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }}\r\n              />\r\n            {/if}\r\n          </div>\r\n          <div class=\"settingsPageListButtons\">\r\n            {#if page.isGroup}\r\n              <span>{page.pages.length} {page.pages.length === 1 ? \"page\" : \"pages\"}</span>\r\n              <button\r\n                on:click={() => { groupModalActive = true; selectedGroupIndex = index; }}\r\n                class=\"viewGroupButton\"\r\n              >\r\n                View Group\r\n              </button>\r\n            {:else}\r\n              <i\r\n                on:click={() => { imageModalActive = true; selectedIndex = index; }}\r\n                class=\"fa-solid fa-image pointer\"\r\n                class:customImage={getTileImage(page.link)}\r\n              />\r\n            {/if}\r\n            <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} on:change={() => {unsavedPages = true}} />\r\n            <input\r\n              on:click={() => {\r\n                deletePage(settingsData.pages, index);\r\n                unsavedPages = true;\r\n              }}\r\n              type=\"button\"\r\n              class=\"pageDeleteButton\"\r\n              value=\"X\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <div id=\"settingsPageOptions\">\r\n    <h4>Add new page</h4>\r\n    <form\r\n      class=\"settingsPageInput\"\r\n      on:submit={(e) => {\r\n        addPage(settingsData.pages, addPageInput, e);\r\n\r\n        //Clear page input after adding it\r\n        addPageInput = \"\";\r\n\r\n        unsavedPages = true;\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        id=\"set_newPageBox\"\r\n        class=\"settingsTextInput\"\r\n        bind:value={addPageInput}\r\n        placeholder=\"Type the address of the page\"\r\n        maxlength=\"500\"\r\n        required={true}\r\n      />\r\n      <button type=\"submit\" class=\"addPageButton\">Add</button>\r\n    </form>\r\n\r\n    <div class=\"settingsActionButtons\">\r\n      <div class=\"settingsActionButtonWithError\">\r\n        <button\r\n          on:click={(e) => {\r\n            saveSettings(settingsData, e);\r\n            unsavedPages = false;\r\n          }}\r\n          type=\"submit\"\r\n          class=\"saveSettingsButton\"\r\n        >\r\n          Save\r\n        </button>\r\n        {#if unsavedPages}\r\n          <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n        {/if}\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          class={showDeleteTileImageConfirm ? 'cancelDeleteTileImageButton' : 'deleteTileImageButton'}\r\n          on:click={() => {showDeleteTileImageConfirm = true}}\r\n        >\r\n          {#if showDeleteTileImageConfirm}\r\n            Are you sure?\r\n          {:else}\r\n            Delete all tile images\r\n          {/if}\r\n        </button>\r\n\r\n        {#if showDeleteTileImageConfirm}\r\n          <button\r\n            class=\"deleteTileImageButton\"\r\n            on:click={onDeleteTileImageClick}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            class=\"cancelDeleteTileImageButton\"\r\n            on:click={() => {showDeleteTileImageConfirm = false}}\r\n          >\r\n            No\r\n          </button>\r\n        {/if}\r\n\r\n        <button\r\n          class=\"createGroupButton\"\r\n          on:click={() => {\r\n            createGroup();\r\n            unsavedPages = true;\r\n          }}\r\n        >\r\n          Create new group\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  {#if imageModalActive}\r\n    <PagesImageModal\r\n      settingsData={settingsData}\r\n      page={settingsData.pages[selectedIndex]}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={imageModalActive}\r\n    />\r\n  {/if}\r\n\r\n  {#if groupModalActive}\r\n    <PagesGroupModal\r\n      group={settingsData.pages[selectedGroupIndex]}\r\n      settingsData={settingsData}\r\n      deletePage={deletePage}\r\n      addPage={addPage}\r\n      movePage={movePage}\r\n      getImageNameFor={getImageNameFor}\r\n      checkWebsite={checkWebsite}\r\n      escapeHTML={escapeHTML}\r\n      bind:unsavedPages={unsavedPages}\r\n      bind:modalActive={groupModalActive}\r\n    />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  h4 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  .pointer {\r\n    cursor: pointer;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPages.darkModifier .settingsTextInput {\r\n    color: white;\r\n    outline: none;\r\n    border-color: #3a99ff;\r\n  }\r\n  .settingsActionButtonWithError {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .saveSettingsButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .viewGroupButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .viewGroupButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .createGroupButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .createGroupButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  .deleteTileImageButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: rgb(210, 40, 40);\r\n    transition: 0.5s;\r\n  }\r\n  .deleteTileImageButton:hover {\r\n    background-color: rgb(180, 30, 30);\r\n  }\r\n  .cancelDeleteTileImageButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(220, 220, 220);\r\n    transition: 0.5s;\r\n  }\r\n  .cancelDeleteTileImageButton:hover {\r\n    background-color: rgb(200, 200, 200);\r\n  }\r\n  .addPageButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .addPageButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .settingsActionButtons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 6px;\r\n  }\r\n  #settingsPages {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  .settingsPagesListPageContainer:not(:first-child) {\r\n    padding-top: 3px;\r\n  }\r\n  .settingsPagesListPageContainer:not(:last-child) {\r\n    padding-bottom: 2px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  #settingsPages.darkModifier .settingsPagesListPage {\r\n    border-color: #3a99ff !important;\r\n  }\r\n  .settingsDragHandle {\r\n    margin-left: 4px;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    flex-grow: 1;\r\n    padding-right: 8px;\r\n  }\r\n  .settingsPageLinkInput {\r\n    width: 100%;\r\n    border: 0;\r\n    overflow-wrap: anywhere;\r\n    background-color: transparent;\r\n  }\r\n  #settingsPages.darkModifier .settingsPageLinkInput {\r\n    color: white;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    font-size: 10px;\r\n    padding: 3px 5px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .settingsPagesMoveButtons button:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  .customImage {\r\n    color: #0d65c4;\r\n  }\r\n  #settingsPages.darkModifier .customImage {\r\n    color: #3a99ff;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n    font-size: 1.1em;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    background-color: rgba(255, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 0, 0, 0.3);\r\n    color: red;\r\n    line-height: 1rem;\r\n    padding: 6px 12px;\r\n    border-radius: 8px;\r\n    margin-top: 8px;\r\n    animation: shake-bottom 4s cubic-bezier(0.455, 0.030, 0.515, 0.955) both infinite;\r\n    animation-delay: 2s;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { getTileImage, getTileImageLinks, parseNotes, saveTileImage } from \"../../data/storage\";\r\n\r\n  export let settingsData;\r\n  export let saveSettings;\r\n\r\n  let settings, fileInput;\r\n  let importPages = true, importTileImages = true, importBackground = true, importVisuals = true, importNotes = true, importSearchEngine = true;\r\n  let exportPages = true, exportTileImages = true, exportBackground = true, exportVisuals = true, exportNotes = true, exportSearchEngine = true;\r\n\r\n  // Keep track of import errors\r\n  let importErrors = {\r\n    pages: false,\r\n    tileImages: false,\r\n    background: false,\r\n    visuals: false,\r\n    searchEngine: false,\r\n    notes: false,\r\n  };\r\n  let importFinishedSuccessfully = false; // False doesn't necesarily mean there were errors, just that no import was started\r\n\r\n  const clearImportErrors = () => {\r\n    importErrors = {\r\n      pages: false,\r\n      tileImages: false,\r\n      background: false,\r\n      visuals: false,\r\n      searchEngine: false,\r\n      notes: false,\r\n    };\r\n  }\r\n\r\n  const exportData = () => {\r\n    //Create export object based on what the user wants to export\r\n    let exportDataObject = {};\r\n    if(exportPages){\r\n      exportDataObject.pages = settingsData.pages;\r\n    }\r\n    if(exportNotes){\r\n      exportDataObject.notes = settingsData.notes;\r\n    }\r\n    if(exportSearchEngine){\r\n      exportDataObject.searchEngine = settingsData.searchEngine;\r\n    }\r\n    if(exportBackground){\r\n      exportDataObject.isBackgroundSolid = settingsData.isBackgroundSolid;\r\n      exportDataObject.backgroundSolidColor = settingsData.backgroundSolidColor;\r\n      exportDataObject.backgroundImage = settingsData.backgroundImage;\r\n    }\r\n    if(exportVisuals){\r\n      exportDataObject.yourName = settingsData.yourName;\r\n      exportDataObject.showCover = settingsData.showCover;\r\n      exportDataObject.clockBackground = settingsData.clockBackground;\r\n      exportDataObject.clock24Hour = settingsData.clock24Hour;\r\n      exportDataObject.darkMode = settingsData.darkMode;\r\n      exportDataObject.tileZoom = settingsData.tileZoom;\r\n      exportDataObject.tileGrow = settingsData.tileGrow;\r\n      exportDataObject.tileMinWidth = settingsData.tileMinWidth;\r\n      exportDataObject.tileHeight = settingsData.tileHeight;\r\n      exportDataObject.tileGap = settingsData.tileGap;\r\n      exportDataObject.tileBorder = settingsData.tileBorder;\r\n      exportDataObject.tileBorderRadius = settingsData.tileBorderRadius;\r\n      exportDataObject.tileBorderColor = settingsData.tileBorderColor;\r\n      exportDataObject.groupTileGap = settingsData.groupTileGap;\r\n      exportDataObject.groupTileBorderRadius = settingsData.groupTileBorderRadius;\r\n      exportDataObject.groupTileGrow = settingsData.groupTileGrow;\r\n      exportDataObject.navbarOpacity = settingsData.navbarOpacity;\r\n      exportDataObject.navbarColor = settingsData.navbarColor;\r\n      exportDataObject.coverColor = settingsData.coverColor;\r\n      exportDataObject.coverTextColor = settingsData.coverTextColor;\r\n    }\r\n    if(exportTileImages){\r\n      const links = getTileImageLinks();\r\n      links.forEach(link => {\r\n        exportDataObject[link] = getTileImage(link);\r\n      });\r\n    }\r\n\r\n    //Set the anchor tag to download the file\r\n    let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportDataObject));\r\n    let dlAnchorElem = document.getElementById('downloadAnchorElem');\r\n    dlAnchorElem.setAttribute(\"href\", dataStr);\r\n    dlAnchorElem.setAttribute(\"download\", \"metro-tab-config.json\");\r\n    dlAnchorElem.click();\r\n  }\r\n\r\n  const onFileSelected = (e) => {\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = (e) => {\r\n      try{\r\n        settings = JSON.parse(e.target.result);\r\n\r\n        clearImportErrors();\r\n        importFinishedSuccessfully = false;\r\n\r\n        //Use already existing settings and change what is needed\r\n        let settingsToSave = settingsData;\r\n\r\n        //Check pages for errors then import\r\n        if(importPages){\r\n          let errorsFound = false;\r\n\r\n          if(settings.pages){\r\n            settings.pages.forEach(page => {\r\n              if(page.isGroup){\r\n                // Handle group import\r\n                if(!page.hasOwnProperty('name') || !page.hasOwnProperty('pages') || !Array.isArray(page.pages)){\r\n                  errorsFound = true;\r\n                }\r\n\r\n                page.pages.forEach(subPage => {\r\n                  if(!subPage.hasOwnProperty('link')\r\n                    || !subPage.hasOwnProperty('imageName')\r\n                    || !subPage.hasOwnProperty('isActive')){\r\n                    errorsFound = true;\r\n                  }\r\n\r\n                  // Set defaults if missing\r\n                  if(!errorsFound && !subPage.hasOwnProperty('tileImageType')){\r\n                    subPage.tileImageType = subPage.imageName.length > 1 ? 'predefined' : 'none';\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('tileName')){\r\n                    subPage.tileName = subPage.imageName[0].toUpperCase() + subPage.imageName.slice(1);\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('backgroundColor')){\r\n                    subPage.backgroundColor = \"#3a99ff\";\r\n                  }\r\n\r\n                  if(!errorsFound && !subPage.hasOwnProperty('textColor')){\r\n                    subPage.textColor = \"#ffffff\";\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                // Handle page import\r\n                if(!page.hasOwnProperty('link')\r\n                  || !page.hasOwnProperty('imageName')\r\n                  || !page.hasOwnProperty('isActive')){\r\n                  errorsFound = true;\r\n                }\r\n\r\n                // Set defaults if missing\r\n                if(!errorsFound && !page.hasOwnProperty('tileImageType')){\r\n                  page.tileImageType = page.imageName.length > 1 ? 'predefined' : 'none';\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('tileName')){\r\n                  page.tileName = page.imageName[0].toUpperCase() + page.imageName.slice(1);\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('backgroundColor')){\r\n                  page.backgroundColor = \"#3a99ff\";\r\n                }\r\n\r\n                if(!errorsFound && !page.hasOwnProperty('textColor')){\r\n                  page.textColor = \"#ffffff\";\r\n                }\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //If no errors found, add pages to settings\r\n          if(!errorsFound){\r\n            settingsToSave.pages = settings.pages;\r\n          }\r\n          else{\r\n            importErrors.pages = true;\r\n          }\r\n        }\r\n\r\n        //Check notes for errors then import\r\n        if(importNotes){\r\n          let errorsFound = false\r\n\r\n          if(settings.notes){\r\n            settings.notes.forEach(note => {\r\n              if(!note.hasOwnProperty('text') || !note.hasOwnProperty('completed')){\r\n                errorsFound = true;\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound){\r\n            settingsToSave.notes = parseNotes(settings.notes); // Will add default properties (for notes in v2.4.0 and older)\r\n          }\r\n          else{\r\n            importErrors.notes = true;\r\n          }\r\n        }\r\n\r\n        //Check search engine for errors then import\r\n        if(importSearchEngine){\r\n          let errorsFound = false;\r\n\r\n          if(settings.hasOwnProperty('searchEngine')){\r\n            if(typeof settings.searchEngine !== 'string'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound){\r\n            settingsToSave.searchEngine = settings.searchEngine;\r\n          }\r\n          else{\r\n            importErrors.searchEngine = true;\r\n          }\r\n        }\r\n\r\n        //Import all valid tile images\r\n        if(importTileImages){\r\n          for(let key in settings) {\r\n            if(key.indexOf(\"http\") !== -1) {\r\n              const image = settings[key];\r\n              if(typeof image === 'string' && image.length > 0){\r\n                saveTileImage(key, image);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        //Check backgrounds for errors then import\r\n        if(importBackground){\r\n          let errorsFound = false;\r\n\r\n          //Check if isBackgroundSolid exists and if it's the right type\r\n          if(settings.hasOwnProperty('isBackgroundSolid')){\r\n            if(typeof settings.isBackgroundSolid !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //Check if backgroundSolidColor exists and if it's the right type\r\n          if(settings.hasOwnProperty('backgroundSolidColor')){\r\n            if(typeof settings.backgroundSolidColor !== 'string' \r\n              || settings.backgroundSolidColor.length !== 7 \r\n              || settings.backgroundSolidColor.charAt(0) !== '#'\r\n              || !settings.backgroundSolidColor.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          //Check if backgroundImage exists and if it's the right type\r\n          if(settings.hasOwnProperty('backgroundImage')){\r\n            if(typeof settings.backgroundImage !== 'string' || settings.backgroundImage.length === 0){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound) {\r\n            settingsToSave.isBackgroundSolid = settings.isBackgroundSolid;\r\n            settingsToSave.backgroundSolidColor = settings.backgroundSolidColor;\r\n            settingsToSave.backgroundImage = settings.backgroundImage;\r\n          }\r\n          else{\r\n            importErrors.background = true;\r\n          }\r\n        }\r\n\r\n        //Check visuals for errors then import\r\n        if(importVisuals){\r\n          let errorsFound = false;\r\n\r\n          if(settings.hasOwnProperty('yourName')){\r\n            if(typeof settings.yourName !== 'string'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('showCover')){\r\n            if(typeof settings.showCover !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('clockBackground')){\r\n            if(typeof settings.clockBackground !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('clock24Hour')){\r\n            if(typeof settings.clock24Hour !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('darkMode')){\r\n            if(typeof settings.darkMode !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileZoom')){\r\n            if(typeof settings.tileZoom !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileGrow')){\r\n            if(typeof settings.tileGrow !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileMinWidth')){\r\n            settings.tileMinWidth = parseFloat(settings.tileMinWidth);\r\n            if(typeof settings.tileMinWidth !== 'number' || settings.tileMinWidth < 10 || settings.tileMinWidth > 150){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileHeight')){\r\n            settings.tileHeight = parseFloat(settings.tileHeight);\r\n            if(typeof settings.tileHeight !== 'number' || settings.tileHeight < 5 || settings.tileHeight > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileGap')){\r\n            settings.tileGap = parseFloat(settings.tileGap);\r\n            if(typeof settings.tileGap !== 'number' || settings.tileGap < 0 || settings.tileGap > 30){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorder')){\r\n            settings.tileBorder = parseFloat(settings.tileBorder);\r\n            if(typeof settings.tileBorder !== 'number' || settings.tileBorder < 0 || settings.tileBorder > 50){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorderRadius')){\r\n            settings.tileBorderRadius = parseFloat(settings.tileBorderRadius);\r\n            if(typeof settings.tileBorderRadius !== 'number' || settings.tileBorderRadius < 0 || settings.tileBorderRadius > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileGap')){\r\n            settings.groupTileGap = parseFloat(settings.groupTileGap);\r\n            if(typeof settings.groupTileGap !== 'number' || settings.groupTileGap < 0 || settings.groupTileGap > 5){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileBorderRadius')){\r\n            settings.groupTileBorderRadius = parseFloat(settings.groupTileBorderRadius);\r\n            if(typeof settings.groupTileBorderRadius !== 'number' || settings.groupTileBorderRadius < 0 || settings.groupTileBorderRadius > 80){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('groupTileGrow')){\r\n            if(typeof settings.groupTileGrow !== 'boolean'){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('navbarOpacity')){\r\n            settings.navbarOpacity = parseFloat(settings.navbarOpacity);\r\n            if(typeof settings.navbarOpacity !== 'number' || settings.navbarOpacity < 0 || settings.navbarOpacity > 1){\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('tileBorderColor')){\r\n            if(settings.tileBorderColor.hasOwnProperty('r') && settings.tileBorderColor.hasOwnProperty('g') && settings.tileBorderColor.hasOwnProperty('b')){\r\n              settings.tileBorderColor.r = parseFloat(settings.tileBorderColor.r);\r\n              if(typeof settings.tileBorderColor.r !== 'number' || settings.tileBorderColor.r < 0 || settings.tileBorderColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.tileBorderColor.g = parseFloat(settings.tileBorderColor.g);\r\n              if(typeof settings.tileBorderColor.g !== 'number' || settings.tileBorderColor.g < 0 || settings.tileBorderColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.tileBorderColor.b = parseFloat(settings.tileBorderColor.b);\r\n              if(typeof settings.tileBorderColor.b !== 'number' || settings.tileBorderColor.b < 0 || settings.tileBorderColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('navbarColor')){\r\n            if(settings.navbarColor.hasOwnProperty('r') && settings.navbarColor.hasOwnProperty('g') && settings.navbarColor.hasOwnProperty('b')){\r\n              settings.navbarColor.r = parseFloat(settings.navbarColor.r);\r\n              if(typeof settings.navbarColor.r !== 'number' || settings.navbarColor.r < 0 || settings.navbarColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.navbarColor.g = parseFloat(settings.navbarColor.g);\r\n              if(typeof settings.navbarColor.g !== 'number' || settings.navbarColor.g < 0 || settings.navbarColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.navbarColor.b = parseFloat(settings.navbarColor.b);\r\n              if(typeof settings.navbarColor.b !== 'number' || settings.navbarColor.b < 0 || settings.navbarColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('coverColor')){\r\n            if(settings.coverColor.hasOwnProperty('r') && settings.coverColor.hasOwnProperty('g') && settings.coverColor.hasOwnProperty('b')){\r\n              settings.coverColor.r = parseFloat(settings.coverColor.r);\r\n              if(typeof settings.coverColor.r !== 'number' || settings.coverColor.r < 0 || settings.coverColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverColor.g = parseFloat(settings.coverColor.g);\r\n              if(typeof settings.coverColor.g !== 'number' || settings.coverColor.g < 0 || settings.coverColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverColor.b = parseFloat(settings.coverColor.b);\r\n              if(typeof settings.coverColor.b !== 'number' || settings.coverColor.b < 0 || settings.coverColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(settings.hasOwnProperty('coverTextColor')){\r\n            if(settings.coverTextColor.hasOwnProperty('r') && settings.coverTextColor.hasOwnProperty('g') && settings.coverTextColor.hasOwnProperty('b')){\r\n              settings.coverTextColor.r = parseFloat(settings.coverTextColor.r);\r\n              if(typeof settings.coverTextColor.r !== 'number' || settings.coverTextColor.r < 0 || settings.coverTextColor.r > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverTextColor.g = parseFloat(settings.coverTextColor.g);\r\n              if(typeof settings.coverTextColor.g !== 'number' || settings.coverTextColor.g < 0 || settings.coverTextColor.g > 255){\r\n                errorsFound = true;\r\n              }\r\n              settings.coverTextColor.b = parseFloat(settings.coverTextColor.b);\r\n              if(typeof settings.coverTextColor.b !== 'number' || settings.coverTextColor.b < 0 || settings.coverTextColor.b > 255){\r\n                errorsFound = true;\r\n              }\r\n            }\r\n            else{\r\n              errorsFound = true;\r\n            }\r\n          }\r\n          else{\r\n            errorsFound = true;\r\n          }\r\n\r\n          if(!errorsFound) {\r\n            settingsToSave.yourName = settings.yourName;\r\n            settingsToSave.showCover = settings.showCover;\r\n            settingsToSave.clockBackground = settings.clockBackground;\r\n            settingsToSave.clock24Hour = settings.clock24Hour;\r\n            settingsToSave.darkMode = settings.darkMode;\r\n            settingsToSave.tileZoom = settings.tileZoom;\r\n            settingsToSave.tileGrow = settings.tileGrow;\r\n            settingsToSave.tileMinWidth = settings.tileMinWidth;\r\n            settingsToSave.tileHeight = settings.tileHeight;\r\n            settingsToSave.tileGap = settings.tileGap;\r\n            settingsToSave.tileBorder = settings.tileBorder;\r\n            settingsToSave.tileBorderRadius = settings.tileBorderRadius;\r\n            settingsToSave.tileBorderColor = settings.tileBorderColor;\r\n            settingsToSave.groupTileGap = settings.groupTileGap;\r\n            settingsToSave.groupTileBorderRadius = settings.groupTileBorderRadius;\r\n            settingsToSave.groupTileGrow = settings.groupTileGrow;\r\n            settingsToSave.navbarOpacity = settings.navbarOpacity;\r\n            settingsToSave.navbarColor = settings.navbarColor;\r\n            settingsToSave.coverColor = settings.coverColor;\r\n            settingsToSave.coverTextColor = settings.coverTextColor;\r\n          }\r\n          else{\r\n            importErrors.visuals = true;\r\n          }\r\n        }\r\n\r\n        if(!importErrors.pages\r\n          && !importErrors.tileImages\r\n          && !importErrors.background\r\n          && !importErrors.visuals\r\n          && !importErrors.searchEngine\r\n          && !importErrors.notes\r\n        ){\r\n          // If there are no errors, set flag for success message\r\n          importFinishedSuccessfully = true;\r\n        }\r\n\r\n        saveSettings(settingsToSave);\r\n      }\r\n      catch{\r\n        alert(\"Invalid configuration file.\");\r\n      }\r\n    };\r\n  };\r\n</script>\r\n\r\n<div class=\"IEPage\" class:darkModifier={settingsData.darkMode}>\r\n  <div class=\"IESection\">\r\n    <h2>Import Settings</h2>\r\n    \r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_pages\"\r\n        name=\"import_pages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importPages}\r\n      />\r\n      <label for=\"import_pages\">Import Pages</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_tileImages\"\r\n        name=\"import_tileImages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importTileImages}\r\n      />\r\n      <label for=\"import_tileImages\">Import Tile Images</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_background\"\r\n        name=\"import_background\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importBackground}\r\n      />\r\n      <label for=\"import_background\">Import Background</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_visuals\"\r\n        name=\"import_visuals\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importVisuals}\r\n      />\r\n      <label for=\"import_visuals\">Import Visuals</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_searchEngine\"\r\n        name=\"import_searchEngine\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importSearchEngine}\r\n      />\r\n      <label for=\"import_searchEngine\">Import Search Engine</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"import_notes\"\r\n        name=\"import_notes\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={importNotes}\r\n      />\r\n      <label for=\"import_notes\">Import Notes</label>\r\n    </div>\r\n\r\n    <small>\r\n      * Importing notes and pages will overwrite your existing ones<br>\r\n      * Export your current settings before importing, otherwise you won't be able to revert the changes<br>\r\n      * Settings from older versions of the extension may not be fully compatible\r\n    </small>\r\n\r\n    <button\r\n      id=\"importButton\"\r\n      on:click={() => {\r\n        fileInput.click();\r\n      }}\r\n    >\r\n      Import\r\n    </button>\r\n    <input\r\n      style=\"display:none\"\r\n      type=\"file\"\r\n      accept=\".json\"\r\n      on:change={(e) => onFileSelected(e)}\r\n      bind:this={fileInput}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"IESection\">\r\n    <h2>Export Settings</h2>\r\n    \r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_pages\"\r\n        name=\"export_pages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportPages}\r\n      />\r\n      <label for=\"export_pages\">Export Pages</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_tileImages\"\r\n        name=\"export_tileImages\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportTileImages}\r\n      />\r\n      <label for=\"export_tileImages\">Export Tile Images</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_background\"\r\n        name=\"export_background\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportBackground}\r\n      />\r\n      <label for=\"export_background\">Export Background</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_visuals\"\r\n        name=\"export_visuals\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportVisuals}\r\n      />\r\n      <label for=\"export_visuals\">Export Visuals</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_searchEngine\"\r\n        name=\"export_searchEngine\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportSearchEngine}\r\n      />\r\n      <label for=\"export_searchEngine\">Export Search Engine</label>\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"export_notes\"\r\n        name=\"export_notes\"\r\n        class=\"settingsCheckbox\"\r\n        bind:checked={exportNotes}\r\n      />\r\n      <label for=\"export_notes\">Export Notes</label>\r\n    </div>\r\n\r\n    <small>\r\n      * Make sure you aren't storing any sensitive information in your notes before exporting them\r\n    </small>\r\n\r\n    <button\r\n      id=\"exportButton\"\r\n      on:click={() => {\r\n        exportData();\r\n      }}\r\n    >\r\n      Export\r\n    </button>\r\n    <!-- svelte-ignore a11y-missing-content -->\r\n    <a id=\"downloadAnchorElem\" style=\"display:none\"></a>\r\n  </div>\r\n</div>\r\n\r\n{#if importFinishedSuccessfully}\r\n  <div class=\"IEAlerts\">\r\n    <div class=\"IEAlert IEAlertSuccess\">\r\n      <span>Settings imported successfully.</span>\r\n    </div>\r\n    <div class=\"IEAlert spacer\"></div>\r\n  </div>\r\n{/if}\r\n\r\n{#if importErrors.pages\r\n  || importErrors.tileImages\r\n  || importErrors.background\r\n  || importErrors.visuals\r\n  || importErrors.searchEngine\r\n  || importErrors.notes\r\n}\r\n  <div class=\"IEAlerts\">\r\n    <div class=\"IEAlert IEAlertError\">\r\n      {#if importErrors.pages}\r\n        <span>There was an error importing pages.</span>\r\n      {/if}\r\n      {#if importErrors.tileImages}\r\n        <span>There was an error importing tile images.</span>\r\n      {/if}\r\n      {#if importErrors.background}\r\n        <span>There was an error importing the background.</span>\r\n      {/if}\r\n      {#if importErrors.visuals}\r\n        <span>There was an error importing visuals.</span>\r\n      {/if}\r\n      {#if importErrors.searchEngine}\r\n        <span>There was an error importing the search engine.</span>\r\n      {/if}\r\n      {#if importErrors.notes}\r\n        <span>There was an error importing notes.</span>\r\n      {/if}\r\n      {#if importErrors.pages && importErrors.background && importErrors.visuals && importErrors.searchEngine && importErrors.notes}\r\n        <span>Please verify that the file has a supported metro-tab-config format.</span>\r\n      {:else}\r\n        <span>All of the other checked options were successfully imported.</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"IEAlert spacer\"></div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .IEPage {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: calc(32px + 0.5em);\r\n    margin-top: 32px;\r\n  }\r\n  .IEPage.darkModifier .IESection {\r\n    border-color: #3a99ff;\r\n  }\r\n  .IESection {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 4px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 10px;\r\n    padding: 10px 30px 25px 30px;\r\n    flex-grow: 1;\r\n    max-width: 25%;\r\n  }\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.6em;\r\n  }\r\n  small {\r\n    margin-top: 0.4em;\r\n    margin-bottom: 0.8em;\r\n    font-size: 0.8em;\r\n    color: gray;\r\n  }\r\n  button {\r\n    margin-top: auto;\r\n    padding: 8px 30px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    transition: 0.3s;\r\n  }\r\n  #importButton {\r\n    background-color: #0b1;\r\n    color: white;\r\n  }\r\n  #importButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #exportButton {\r\n    background-color: rgb(238, 218, 34);\r\n  }\r\n  #exportButton:hover {\r\n    background-color: rgb(230, 200, 22);\r\n  }\r\n  .IEAlerts {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: calc(32px + 0.5em);\r\n    margin-top: 32px;\r\n  }\r\n  .IEAlert {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 4px;\r\n    padding: 15px 30px 20px 30px;\r\n    border-radius: 10px;\r\n    flex-grow: 1;\r\n    max-width: 25%;\r\n    overflow: hidden;\r\n  }\r\n  .IEAlertError {\r\n    color: rgb(115, 30, 35);\r\n    background-color: #ecc7ca;\r\n    border: 1px solid #d4a5aa;\r\n  }\r\n  .IEAlertSuccess {\r\n    color: rgb(20, 90, 35);\r\n    background-color: #d1eccf;\r\n    border: 1px solid #b5dfb5;\r\n  }\r\n  .IEAlert.spacer {\r\n    visibility: hidden;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .IEPage, .IEAlerts {\r\n      gap: 8px;\r\n    }\r\n    .IESection, .IEAlert {\r\n      max-width: unset;\r\n      flex-basis: 100%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .IEPage, .IEAlerts {\r\n      flex-direction: column;\r\n      margin-top: 16px;\r\n      gap: 16px;\r\n    }\r\n    .IESection, .IEAlert {\r\n      max-width: 100%;\r\n      flex-basis: unset;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { searchEngineList } from \"../../data/config\";\r\n\r\n  export let currentSearchEngine;\r\n  export let changeSearchEngine;\r\n  export let darkMode;\r\n</script>\r\n\r\n<h2>Search Engine</h2>\r\n<div id=\"settingsSearchEngine\">\r\n  <div id=\"itemList\">\r\n    {#each searchEngineList as searchEngine}\r\n      <div class=\"item\" class:darkModifier={darkMode}>\r\n        <p>{searchEngine.label}</p>\r\n        {#if currentSearchEngine === searchEngine.name}\r\n          <button disabled class=\"itemActive\">Active</button>\r\n        {:else}\r\n          <button\r\n            class=\"itemButton\"\r\n            on:click={() => {\r\n              currentSearchEngine = searchEngine.name;\r\n              changeSearchEngine(searchEngine.name)\r\n            }}\r\n          >\r\n            Set as active\r\n          </button>\r\n        {/if}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  #itemList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    overflow-y: auto;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 4px 4px;\r\n    border-radius: 10px;\r\n    border: 1px solid lightgray;\r\n  }\r\n  .item.darkModifier {\r\n    border-color: #3a99ff;\r\n  }\r\n  .item p {\r\n    margin: 0;\r\n    margin-left: 8px;\r\n  }\r\n  .itemActive {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n    transition: 0.3s;\r\n  }\r\n  .itemActive:hover {\r\n    background-color: #0c2;\r\n  }\r\n  .itemButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .itemButton:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let darkMode = false;\r\n\r\n  userData.subscribe((data) => {\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const reviewClick = () => {\r\n    window.location.assign(\"https://chromewebstore.google.com/detail/onhhmnkghemlcnlglcnjkhebiclbklpl/reviews\");\r\n  }\r\n\r\n  const supportClick = () => {\r\n    window.location.assign(\"https://chromewebstore.google.com/detail/onhhmnkghemlcnlglcnjkhebiclbklpl/support\");\r\n  }\r\n</script>\r\n\r\n<div class=\"about\" class:darkModifier={darkMode}>\r\n  <div class=\"about-image\">\r\n    {#if darkMode}\r\n      <img src=\"static/images/about/a_hi_dark.png\" alt=\"Hi!\" />\r\n    {:else}\r\n      <img src=\"static/images/about/a_hi.png\" alt=\"Hi!\" />\r\n    {/if}\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 30px;\">\r\n    <span style=\"font-size: 4.5rem;\"><strong style=\"color: #3a99ff;\">Thank you</strong> for using this extension!</span>\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 20px;\">\r\n    <span style=\"font-size: 1.8rem;\">This project is developed by <strong style=\"color: #3a99ff;\">PatrickCC</strong>.</span>\r\n  </div>\r\n\r\n  <div class=\"about-text\" style=\"margin-top: 20px;\">\r\n    <span style=\"font-size: 1.8rem;\">The code is open source and you can check it out <a href=\"https://github.com/KlibrDM/metro-tab/\" class=\"about-github-link\">here</a>.</span>\r\n  </div>\r\n\r\n  <div class=\"about-section\">\r\n    <h2>Review</h2>\r\n    <span>Your feedback is appreciated. You can rate this extension and write a review.</span>\r\n    <button on:click={reviewClick}>Rate & Review</button>\r\n  </div>\r\n\r\n  <div class=\"about-section\">\r\n    <h2>Support</h2>\r\n    <span>If you have any questions, issues or suggestions, feel free to use the support page.</span>\r\n    <button on:click={supportClick}>User Support</button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .about {\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: black;\r\n  }\r\n  .about.darkModifier {\r\n    color: white;\r\n  }\r\n  .about-image {\r\n    user-select: none;\r\n    pointer-events: none;\r\n    min-height: 204px;\r\n    margin-top: 20px;\r\n  }\r\n  .about-github-link {\r\n    color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .about-github-link:hover {\r\n    color: #2373c9;\r\n  }\r\n  .about-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin-top: 40px;\r\n    gap: 16px;\r\n  }\r\n  .about-section h2 {\r\n    color: #3a99ff;\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n  }\r\n  .about-section span {\r\n    font-size: 1.1rem;\r\n  }\r\n  .about-section button {\r\n    font-size: 1rem;\r\n    padding: 10px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3a99ff;\r\n    transition: 0.3s;\r\n  }\r\n  .about-section button:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n</style>\r\n","<script>\r\n  import { themes, tileThemes } from \"../../data/config\";\r\n  import { saveConfig } from \"../../data/storage\";\r\n  import { userData } from \"../../store\";\r\n\r\n  export let settingsData;\r\n\r\n  const applyTheme = (settings) => {\r\n    userData.update((state) => {\r\n      state.darkMode = settings.darkMode !== undefined ? settings.darkMode : state.darkMode;\r\n      state.clockBackground = settings.clockBackground !== undefined ? settings.clockBackground : state.clockBackground;\r\n      state.isBackgroundSolid = settings.isBackgroundSolid !== undefined ? settings.isBackgroundSolid : state.isBackgroundSolid;\r\n      state.backgroundSolidColor = settings.backgroundSolidColor !== undefined ? settings.backgroundSolidColor : state.backgroundSolidColor;\r\n      state.backgroundImage = settings.backgroundImage !== undefined ? settings.backgroundImage : state.backgroundImage;\r\n      state.tileZoom = settings.tileZoom !== undefined ? settings.tileZoom : state.tileZoom;\r\n      state.tileGrow = settings.tileGrow !== undefined ? settings.tileGrow : state.tileGrow;\r\n      state.tileMinWidth = settings.tileMinWidth !== undefined ? settings.tileMinWidth : state.tileMinWidth;\r\n      state.tileHeight = settings.tileHeight !== undefined ? settings.tileHeight : state.tileHeight;\r\n      state.tileGap = settings.tileGap !== undefined ? settings.tileGap : state.tileGap;\r\n      state.tileBorder = settings.tileBorder !== undefined ? settings.tileBorder : state.tileBorder;\r\n      state.tileBorderRadius = settings.tileBorderRadius !== undefined ? settings.tileBorderRadius : state.tileBorderRadius;\r\n      state.tileBorderColor = settings.tileBorderColor !== undefined ? settings.tileBorderColor : state.tileBorderColor;\r\n      state.groupTileGap = settings.groupTileGap !== undefined ? settings.groupTileGap : state.groupTileGap;\r\n      state.groupTileBorderRadius = settings.groupTileBorderRadius !== undefined ? settings.groupTileBorderRadius : state.groupTileBorderRadius;\r\n      state.groupTileGrow = settings.groupTileGrow !== undefined ? settings.groupTileGrow : state.groupTileGrow;\r\n      state.navbarOpacity = settings.navbarOpacity !== undefined ? settings.navbarOpacity : state.navbarOpacity;\r\n      state.navbarColor = settings.navbarColor !== undefined ? settings.navbarColor : state.navbarColor;\r\n      state.coverColor = settings.coverColor !== undefined ? settings.coverColor : state.coverColor;\r\n      state.coverTextColor = settings.coverTextColor !== undefined ? settings.coverTextColor : state.coverTextColor;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig({...settingsData, ...settings});\r\n  }\r\n</script>\r\n\r\n\r\n<div id=\"settingsThemes\">\r\n  <h2>Themes</h2>\r\n  <div id=\"themeList\">\r\n    {#each themes as theme}\r\n      <div class=\"item\" class:darkModifier={settingsData.darkMode}>\r\n        <div class=\"themeThumbnail\">\r\n          <img src={`static/images/themes/${theme.thumbnail}.webp`} alt={`${theme.label} theme thumbnail`} />\r\n        </div>\r\n        <div class=\"themeDetails\">\r\n          <div class=\"themeDetailsText\">\r\n            <h3>{theme.label}</h3>\r\n\r\n            {#if theme.changesTiles === \"full\"}\r\n              <p>Changes all tile settings</p>\r\n            {:else if theme.changesTiles === \"partial\"}\r\n              <p>Changes some tile settings</p>\r\n            {/if}\r\n\r\n            {#if theme.changesBackground}\r\n              <p>Changes background</p>\r\n            {/if}\r\n\r\n            {#if theme.changesColors}\r\n              <p>Changes colors</p>\r\n            {/if}\r\n\r\n            {#if theme.changesPanelColors === \"dark\"}\r\n              <p>Changes panel colors to dark</p>\r\n            {:else if theme.changesPanelColors === \"light\"}\r\n              <p>Changes panel colors to light</p>\r\n            {:else}\r\n              <p>Doesn't change panel colors</p>\r\n            {/if}\r\n          </div>\r\n          <button\r\n            class=\"itemButton\"\r\n            on:click={() => applyTheme(theme.settings)}\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <h2 id=\"tileThemeListTitle\">Tile presets</h2>\r\n  <div id=\"tileThemeList\">\r\n    {#each tileThemes as theme}\r\n      <div class=\"item\" class:darkModifier={settingsData.darkMode}>\r\n        <div class=\"themeThumbnail\">\r\n          <img src={`static/images/themes/${theme.thumbnail}.webp`} alt={`${theme.label} preset thumbnail`} />\r\n        </div>\r\n        <div class=\"themeDetails\">\r\n          <div class=\"themeDetailsText\">\r\n            <h3>{theme.label}</h3>\r\n\r\n            {#if theme.changesTiles === \"full\"}\r\n              <p>Changes all tile settings</p>\r\n            {:else if theme.changesTiles === \"partial\"}\r\n              <p>Changes some tile settings</p>\r\n            {/if}\r\n\r\n            {#if theme.changesBackground}\r\n              <p>Changes background</p>\r\n            {/if}\r\n\r\n            {#if theme.changesColors}\r\n              <p>Changes colors</p>\r\n            {/if}\r\n\r\n            {#if theme.changesPanelColors === \"dark\"}\r\n              <p>Changes panel colors to dark</p>\r\n            {:else if theme.changesPanelColors === \"light\"}\r\n              <p>Changes panel colors to light</p>\r\n            {:else}\r\n              <p>Doesn't change panel colors</p>\r\n            {/if}\r\n          </div>\r\n          <button\r\n            class=\"itemButton\"\r\n            on:click={() => applyTheme(theme.settings)}\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  #tileThemeListTitle {\r\n    margin-block-start: 0.8em;\r\n  }\r\n  #themeList, #tileThemeList {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(600px, 1fr));\r\n    gap: 5px;\r\n    overflow-y: auto;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    gap: 12px;\r\n    padding: 8px 8px;\r\n    border-radius: 10px;\r\n    border: 1px solid lightgray;\r\n  }\r\n  .item.darkModifier {\r\n    border-color: #3a99ff;\r\n  }\r\n  .themeThumbnail {\r\n    width: 300px;\r\n    min-height: 145px;\r\n  }\r\n  .themeThumbnail img {\r\n    width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n  .themeDetails {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n  }\r\n  .themeDetailsText h3 {\r\n    margin: 0;\r\n    margin-bottom: 4px;\r\n  }\r\n  .themeDetailsText p {\r\n    margin: 0;\r\n    font-size: 0.9em;\r\n  }\r\n  .itemButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n    transition: 0.3s;\r\n  }\r\n  .itemButton:hover {\r\n    background-color: rgb(238, 195, 25);\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import * as CONFIG from \"../../data/config\";\r\n  import { saveConfig, saveBackground, saveBackgroundColor, saveSearchEngine } from \"../../data/storage\";\r\n\r\n  import SettingsForm from \"./SettingsForm.svelte\";\r\n  import Backgrounds from \"./Backgrounds.svelte\";\r\n  import Pages from \"./Pages.svelte\";\r\n  import ImportExport from \"./ImportExport.svelte\";\r\n  import SearchEngine from \"./SearchEngine.svelte\";\r\n  import About from \"./About.svelte\";\r\n  import Themes from \"./Themes.svelte\";\r\n\r\n  let settingsData = {}; //Local data for settings\r\n  let unsavedSettings = false;\r\n  let isPanelShown = false;\r\n  let isPeekPressed = false;\r\n  let tabIndex = 0;\r\n\r\n  const toggleSettingsPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  const changeTab = (index) => {\r\n    tabIndex = index;\r\n  }\r\n\r\n  //Subscribe to the entire userData\r\n  userData.subscribe((data) => {\r\n    settingsData = data;\r\n  });\r\n\r\n  const saveSettings = (settingsData, event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(settingsData.yourName);\r\n      state.showCover = settingsData.showCover;\r\n      state.clockBackground = settingsData.clockBackground;\r\n      state.clock24Hour = settingsData.clock24Hour;\r\n      state.darkMode = settingsData.darkMode;\r\n      state.tileZoom = settingsData.tileZoom;\r\n      state.tileGrow = settingsData.tileGrow;\r\n      state.tileMinWidth = settingsData.tileMinWidth;\r\n      state.tileHeight = settingsData.tileHeight;\r\n      state.tileGap = settingsData.tileGap;\r\n      state.tileBorder = settingsData.tileBorder;\r\n      state.tileBorderRadius = settingsData.tileBorderRadius;\r\n      state.tileBorderColor = settingsData.tileBorderColor;\r\n      state.groupTileGap = settingsData.groupTileGap;\r\n      state.groupTileBorderRadius = settingsData.groupTileBorderRadius;\r\n      state.groupTileGrow = settingsData.groupTileGrow;\r\n      state.navbarOpacity = settingsData.navbarOpacity;\r\n      state.navbarColor = settingsData.navbarColor;\r\n      state.coverColor = settingsData.coverColor;\r\n      state.coverTextColor = settingsData.coverTextColor;\r\n      state.pages = settingsData.pages;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const resetVisuals = () => {\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(CONFIG.yourName);\r\n      state.showCover = CONFIG.showCover;\r\n      state.clockBackground = CONFIG.clockBackground;\r\n      state.clock24Hour = CONFIG.clock24Hour;\r\n      state.darkMode = CONFIG.darkMode;\r\n      state.tileZoom = CONFIG.tileZoom;\r\n      state.tileGrow = CONFIG.tileGrow;\r\n      state.tileMinWidth = CONFIG.tileMinWidth;\r\n      state.tileHeight = CONFIG.tileHeight;\r\n      state.tileGap = CONFIG.tileGap;\r\n      state.tileBorder = CONFIG.tileBorder;\r\n      state.tileBorderRadius = CONFIG.tileBorderRadius;\r\n      state.tileBorderColor = CONFIG.tileBorderColor;\r\n      state.groupTileGap = CONFIG.groupTileGap;\r\n      state.groupTileBorderRadius = CONFIG.groupTileBorderRadius;\r\n      state.groupTileGrow = CONFIG.groupTileGrow;\r\n      state.navbarOpacity = CONFIG.navbarOpacity;\r\n      state.navbarColor = CONFIG.navbarColor;\r\n      state.coverColor = CONFIG.coverColor;\r\n      state.coverTextColor = CONFIG.coverTextColor;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const changeSearchEngine = (engine) => {\r\n    userData.update((state) => {\r\n      state.searchEngine = engine;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveSearchEngine(engine);\r\n  };\r\n\r\n  const changeBackground = (bg) => {\r\n    settingsData.backgroundImage = bg;\r\n\r\n    try {\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      saveBackground(settingsData.backgroundImage);\r\n\r\n      //Update background state IF it didn't fail saving to localstorage\r\n      userData.update((state) => {\r\n        state.backgroundImage = settingsData.backgroundImage;\r\n        state.isBackgroundSolid = false;\r\n        return state;\r\n      });\r\n    } catch {\r\n      alert(\r\n        \"Background image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeBackgroundColor = (color) => {\r\n    settingsData.backgroundSolidColor = color;\r\n\r\n    saveBackgroundColor(settingsData.backgroundSolidColor);\r\n\r\n    userData.update((state) => {\r\n      state.backgroundSolidColor = color;\r\n      state.isBackgroundSolid = true;\r\n      return state;\r\n    });\r\n  };\r\n\r\n  const createGroup = () => {\r\n    settingsData.pages.push({\r\n      name: \"New Group\",\r\n      isGroup: true,\r\n      isActive: true,\r\n      pages: [],\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  }\r\n\r\n  const addPage = (list, addPageInput, event) => {\r\n    event.preventDefault();\r\n\r\n    //Will add http:// if user didn't already do it\r\n    let linkToAdd = checkWebsite(addPageInput);\r\n    let imageName = getImageNameFor(linkToAdd);\r\n\r\n    //Update pages state\r\n    list.push({\r\n      link: escapeHTML(linkToAdd),\r\n      imageName: imageName,\r\n      isActive: true,\r\n      tileImageType: imageName.length > 1 ? 'predefined' : 'none',\r\n      tileName: imageName[0].toUpperCase() + imageName.slice(1),\r\n      backgroundColor: \"#3a99ff\",\r\n      textColor: \"#ffffff\"\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const deletePage = (list, index) => {\r\n    //Delete 1 element from specified index\r\n    list.splice(index, 1);\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const movePage = (list, index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index === 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index === list.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = list[index];\r\n\r\n    //Remove current item from old location\r\n    list.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      list.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      list.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const checkWebsite = (pageName) => {\r\n    if (pageName.substring(0, 4) === \"http\") {\r\n      return pageName;\r\n    } else {\r\n      return \"http://\" + pageName;\r\n    }\r\n  };\r\n\r\n  const getImageNameFor = (link) => {\r\n    //Get page name from provided link\r\n    let name = extractWebsiteName(link).toLowerCase();\r\n\r\n    if (CONFIG.knownPages.includes(name)) {\r\n      //Return the image name if the extension has it\r\n      return name;\r\n    } else if (\"1234567890qwertyuiopasdfghjklzxcvbnm\".includes(name[0])) {\r\n      //Return the image for the first letter\r\n      return name[0];\r\n    } else {\r\n      return \"_\";\r\n    }\r\n  };\r\n\r\n  const extractWebsiteName = (link) => {\r\n    let sitename = link;\r\n\r\n    //Remove http(s)://\r\n    sitename = sitename.substring(sitename.indexOf(\"://\") + 3);\r\n\r\n    //Remove www. if existent\r\n    if (sitename.substring(0, 3) === \"www\") {\r\n      sitename = sitename.substring(4);\r\n    }\r\n\r\n    //Remove port if existent\r\n    if (sitename.lastIndexOf(\":\") !== -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\":\"));\r\n    }\r\n\r\n    //Remove ending (.com etc) (if found)\r\n    if (sitename.lastIndexOf(\".\") !== -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    //Do it twice for those that have .co or .com\r\n    if (sitename.slice(-3) === \".co\" || sitename.slice(-4) === \".com\") {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    return sitename;\r\n  };\r\n\r\n  function escapeHTML(string) {\r\n    let entityMap = {\r\n      \"<\": \"&lt;\",\r\n      \">\": \"&gt;\",\r\n      '\"': \"&quot;\",\r\n      \"'\": \"&#39;\",\r\n      \"`\": \"&#x60;\",\r\n    };\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n\r\n  //Transition\r\n  function slide() {\r\n    return {\r\n      duration: 500,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 97.5% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n{#if isPanelShown}\r\n  <button\r\n    on:mousedown={() => {isPeekPressed = true}}\r\n    on:mouseup={() => {isPeekPressed = false}}\r\n    on:mouseleave={() => {isPeekPressed = false}}\r\n    class=\"highZIndex\"\r\n    id=\"peekButton\"\r\n    aria-label=\"Peek behind\"\r\n    class:darkModifier={settingsData.darkMode}\r\n  >\r\n    <i class=\"fas fa-eye\" />\r\n  </button>\r\n{/if}\r\n\r\n<button\r\n  on:click={toggleSettingsPanel}\r\n  id=\"settingsButton\"\r\n  aria-label=\"Settings\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={settingsData.darkMode}\r\n  class:unsavedButtonWarning={unsavedSettings}\r\n  data-tooltip={unsavedSettings ? \"You have unsaved settings\" : undefined}\r\n>\r\n  <i class=\"fas fa-sliders-h\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"settingsPanel\" transition:slide class:peekOpacity={isPeekPressed} class:darkModifier={settingsData.darkMode}>\r\n    <div id=\"settingsHeader\">\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 0}\r\n        on:click={() => {changeTab(0);}}\r\n      >\r\n        Pages\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 1}\r\n        on:click={() => {changeTab(1);}}\r\n      >\r\n        Background\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 2}\r\n        on:click={() => {changeTab(2);}}\r\n      >\r\n        Visuals\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 3}\r\n        on:click={() => {changeTab(3);}}\r\n      >\r\n        Themes\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 4}\r\n        on:click={() => {changeTab(4);}}\r\n      >\r\n        Search Engine\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 5}\r\n        on:click={() => {changeTab(5);}}\r\n      >\r\n        Import/Export\r\n      </button>\r\n      <button\r\n        class=\"settingsHeaderButton\"\r\n        class:headerSelected={tabIndex === 6}\r\n        on:click={() => {changeTab(6);}}\r\n      >\r\n        About\r\n      </button>\r\n    </div>\r\n    <hr/>\r\n    <div id=\"settingsContent\">\r\n      {#if tabIndex === 0}\r\n        <Pages {settingsData} {deletePage} {addPage} {saveSettings} {movePage} {createGroup} {getImageNameFor} {checkWebsite} {escapeHTML} bind:unsavedPages={unsavedSettings} />\r\n      {:else if tabIndex === 1}\r\n        <Backgrounds {changeBackground} {changeBackgroundColor} />\r\n      {:else if tabIndex === 2}\r\n        <SettingsForm {settingsData} {saveSettings} {resetVisuals} bind:unsavedSettings={unsavedSettings} />\r\n      {:else if tabIndex === 3}\r\n        <Themes {settingsData} />\r\n      {:else if tabIndex === 4}\r\n        <SearchEngine currentSearchEngine={settingsData.searchEngine} {changeSearchEngine} darkMode={settingsData.darkMode} />\r\n      {:else if tabIndex === 5}\r\n        <ImportExport {settingsData} {saveSettings} />\r\n      {:else if tabIndex === 6}\r\n        <About />\r\n      {/if}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  hr {\r\n    margin-block-start: 0.9em;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n  }\r\n  .peekOpacity {\r\n    opacity: 0;\r\n  }\r\n  #settingsButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 25px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 24;\r\n  }\r\n  #settingsButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #settingsButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #settingsButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #settingsButton.unsavedButtonWarning {\r\n    box-shadow: 0px 0px 10px rgba(255, 0, 0, 1);\r\n  }\r\n  #settingsButton.unsavedButtonWarning[data-tooltip]:hover::after {\r\n    display: block;\r\n    position: absolute;\r\n    top: 40px;\r\n    right: 0;\r\n    width: max-content;\r\n    content: attr(data-tooltip);\r\n    background-color: rgba(255, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 0, 0, 0.3);\r\n    color: red;\r\n    line-height: 1rem;\r\n    padding: 6px 12px;\r\n    border-radius: 8px;\r\n  }\r\n  #peekButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 65px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n  }\r\n  #peekButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #peekButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #peekButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #settingsPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 0.4s;\r\n  }\r\n  #settingsPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  #settingsHeader {\r\n    display: flex;\r\n    gap: 15px;\r\n    overflow-x: auto;\r\n  }\r\n  .settingsHeaderButton {\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: rgb(95, 95, 95);\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    font-size: 1em;\r\n  }\r\n  .settingsHeaderButton:hover {\r\n    color: black;\r\n  }\r\n  .headerSelected {\r\n    color: rgb(58, 153, 255) !important;\r\n  }\r\n  .headerSelected:hover {\r\n    color: rgb(58, 153, 255) !important;\r\n  }\r\n  #settingsPanel.darkModifier .settingsHeaderButton {\r\n    color: white;\r\n  }\r\n  #settingsPanel.darkModifier .settingsHeaderButton:hover {\r\n    color: rgb(200, 200, 200);\r\n  }\r\n  #settingsContent {\r\n    overflow-y: auto;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #settingsPanel {\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { saveNotes } from \"../../data/storage\";\r\n  import { notesColors } from \"../../data/config\";\r\n  import Note from \"./Note.svelte\";\r\n\r\n  let isPanelShown = false;\r\n  let isPanelShownRemote = false;\r\n  let userNotes = []; //local data for notes (excluding important)\r\n  let importantNotes = [] //local data for important notes\r\n  let darkMode = false;\r\n  let showSaveIcon = false;\r\n  let showSaveIconTimeout;\r\n\r\n  export const remoteOpenNotes = () => {\r\n    isPanelShown = true;\r\n    isPanelShownRemote = true;\r\n  }\r\n\r\n  //Subscribe to notes\r\n  userData.subscribe((data) => {\r\n    userNotes = data.notes.filter((note) => !note.important);\r\n    importantNotes = data.notes.filter((note) => note.important);\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const toggleNotesPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  let allowDrag = false; // Allow drag and drop only when the mouse is over the drag handle\r\n  let draggedItem = undefined;\r\n  let draggedItemIndex = undefined;\r\n  let draggedOverIndex = undefined;\r\n  let draggedList = undefined;\r\n\r\n  const handleDragEnd = (index, list) => {\r\n    // If the dragged item is dropped on itself, return early\r\n    if (index === draggedOverIndex) {\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      draggedList = undefined;\r\n      return;\r\n    }\r\n\r\n    if (draggedItemIndex !== undefined) {\r\n      // Remove the dragged item from the list\r\n      list.splice(draggedItemIndex, 1);\r\n\r\n      // Insert the dragged item at the new position\r\n      list.splice(draggedOverIndex, 0, draggedItem);\r\n\r\n      list = [...list];\r\n\r\n      draggedItem = undefined;\r\n      draggedItemIndex = undefined;\r\n      draggedOverIndex = undefined;\r\n      draggedList = undefined;\r\n\r\n      //Save changes\r\n      saveAllNotes();\r\n    }\r\n  };\r\n\r\n  //Create new empty note at the beginning of array\r\n  const createNewNote = (type) => {\r\n    userNotes.unshift({\r\n      text: \"\",\r\n      textColor: type === \"note\" ? notesColors[0].text : notesColors[1].text,\r\n      backgroundColor: type === \"note\" ? notesColors[0].background : notesColors[1].background,\r\n      type,\r\n      important: false,\r\n      completed: false,\r\n      isPinned: false,\r\n    });\r\n\r\n    saveAllNotes();\r\n  };\r\n\r\n  const saveAllNotes = () => {\r\n    showSaveIcon = true;\r\n    clearTimeout(showSaveIconTimeout);\r\n    showSaveIconTimeout = setTimeout(() => {\r\n      showSaveIcon = false;\r\n    }, 720);\r\n\r\n    // Update state\r\n    userData.update((state) => {\r\n      state.notes = [...importantNotes, ...userNotes];\r\n      return state;\r\n    });\r\n\r\n    // Save to local storage\r\n    saveNotes([...importantNotes, ...userNotes]);\r\n  };\r\n\r\n  const deleteNote = (index, list) => {\r\n    list.splice(index, 1);\r\n\r\n    saveAllNotes();\r\n  };\r\n\r\n  const toggleImportant = (index, list) => {\r\n    const moveToImportant = !list[index].important; // Boolean to check which list is first in remake\r\n    list[index].important = !list[index].important;\r\n\r\n    // Remake lists\r\n    const oldUserNotes = [...userNotes];\r\n    const oldImportantNotes = [...importantNotes];\r\n\r\n    if (moveToImportant) {\r\n      // If note is moved to important, remake lists with userNotes first, then importantNotes\r\n      userNotes = [...oldUserNotes, ...oldImportantNotes].filter((note) => !note.important);\r\n      importantNotes = [...oldUserNotes, ...oldImportantNotes].filter((note) => note.important);\r\n    }\r\n    else {\r\n      userNotes = [...oldImportantNotes, ...oldUserNotes].filter((note) => !note.important);\r\n      importantNotes = [...oldImportantNotes, ...oldUserNotes].filter((note) => note.important);\r\n    }\r\n\r\n    saveAllNotes();\r\n  }\r\n\r\n  const toggleCompleted = (index, list) => {\r\n    list[index].completed = !list[index].completed;\r\n\r\n    saveAllNotes();\r\n  }\r\n\r\n  const changeColor = (index, list, color) => {\r\n    list[index].backgroundColor = color.background;\r\n    list[index].textColor = color.text;\r\n\r\n    saveAllNotes();\r\n  }\r\n\r\n  const togglePin = (index, list) => {\r\n    const isPinning = !list[index].isPinned;\r\n\r\n    // Remove pin from all notes\r\n    userNotes.forEach((note) => note.isPinned = false);\r\n    importantNotes.forEach((note) => note.isPinned = false);\r\n\r\n    // Pin the selected note\r\n    if (isPinning) {\r\n      list[index].isPinned = true;\r\n    }\r\n\r\n    saveAllNotes();\r\n  }\r\n\r\n  // Transition\r\n  function notesEntrance() {\r\n    let aux = isPanelShownRemote;\r\n    isPanelShownRemote = false;\r\n\r\n    return {\r\n      duration: 500,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at ${aux ? '80px' : 'calc(100% - 80px)'} 3.5vh)`,\r\n    };\r\n  }\r\n\r\n  function notesExit() {\r\n    return {\r\n      duration: 500,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at calc(100% - 80px) 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleNotesPanel}\r\n  id=\"notesButton\"\r\n  aria-label=\"Notes\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={darkMode}\r\n>\r\n  <i class=\"fa-solid fa-note-sticky\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"notesPanel\" class:darkModifier={darkMode} in:notesEntrance out:notesExit>\r\n    <div id=\"notesTop\">\r\n      <h2>Notes</h2>\r\n      <div id=\"notesNewButtons\">\r\n        <button class=\"newButton\" id=\"newNoteButton\" on:click={() => createNewNote(\"note\")}>New note</button>\r\n        <button class=\"newButton\" id=\"newTaskButton\" on:click={() => createNewNote(\"task\")}>New task</button>\r\n        {#if showSaveIcon}\r\n          <div class=\"saveIcon\">\r\n            <i class=\"fa-solid fa-floppy-disk\" />\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"notesContainer\">\r\n      <div id=\"notesSection\">\r\n        <h3 class=\"sectionTitle\">\r\n          General\r\n        </h3>\r\n    \r\n        <div class=\"notesList\" class:notDragged={draggedList !== undefined && draggedList !== \"userNotes\"}>\r\n          {#if !userNotes.length}\r\n            <p>You don't have any notes yet</p>\r\n          {/if}\r\n          {#each userNotes as note, index}\r\n            <div\r\n              class=\"noteContainer\"\r\n              draggable={allowDrag}\r\n              on:dragstart={() => { draggedItem = note; draggedItemIndex = index; draggedList = \"userNotes\" }}\r\n              on:dragend={() => handleDragEnd(index, userNotes)}\r\n              on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n              on:dragenter={(e) => { e.preventDefault(); }}\r\n            >\r\n              <div\r\n                class=\"note\"\r\n                style=\"\r\n                  background-color: {note.backgroundColor};\r\n                  color: {note.textColor};\r\n                  background: {\r\n                    index === draggedItemIndex && draggedList === \"userNotes\" ? `linear-gradient(to right, red, ${note.backgroundColor} 50px)` :\r\n                    index === draggedOverIndex && draggedList === \"userNotes\" ?\r\n                      draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                      `linear-gradient(135deg, #3a99ff, ${note.backgroundColor} 40px)` :\r\n                      `linear-gradient(45deg, #3a99ff, ${note.backgroundColor} 40px)` :\r\n                    note.backgroundColor\r\n                  };\r\n                \"\r\n              >\r\n                <div class=\"dragHandle\"\r\n                  on:focus={() => { allowDrag = true; }}\r\n                  on:mouseover={() => { allowDrag = true; }}\r\n                  on:mouseleave={() => { allowDrag = false; }}\r\n                >\r\n                  <i class=\"fa-solid fa-grip-vertical\" />\r\n                </div>\r\n\r\n                <div class=\"noteContent\">\r\n                  <Note {note} {saveAllNotes} />\r\n\r\n                  <div class=\"noteActions\">\r\n                    <button on:click={() => deleteNote(index, userNotes)}>\r\n                      <i class=\"fa-solid fa-trash\" style={`color: ${note.textColor}`} />\r\n                    </button>\r\n                    <button on:click={() => togglePin(index, userNotes)}>\r\n                      <i class=\"fa-solid fa-thumbtack\" style={`color: ${note.isPinned ? \"#3a54ff\" : note.textColor}`} />\r\n                    </button>\r\n                    <button on:click={() => toggleImportant(index, userNotes)}>\r\n                      <i class=\"fa-solid fa-star\" style={`color: ${note.textColor}`} />\r\n                    </button>\r\n                    <button on:click={() => toggleCompleted(index, userNotes)}>\r\n                      <i class=\"fa-solid fa-check\" style={`color: ${note.completed ? \"#41ff1e\" : note.textColor}`} />\r\n                    </button>\r\n                    <div class=\"noteColors\">\r\n                      {#each notesColors as color}\r\n                        <button\r\n                          style=\"background-color: {color.background};\"\r\n                          on:click={() => changeColor(index, userNotes, color)}\r\n                        />\r\n                      {/each}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"importantSection\">\r\n        <h3 class=\"sectionTitle\">\r\n          Important\r\n          <i class=\"fa-solid fa-star\" style=\"color: #f0d732\" />\r\n        </h3>\r\n    \r\n        <div class=\"notesList\" class:notDragged={draggedList !== undefined && draggedList !== \"importantNotes\"}>\r\n          {#if !importantNotes.length}\r\n            <p>No notes are marked as important</p>\r\n          {/if}\r\n          {#each importantNotes as note, index}\r\n            <div\r\n              class=\"noteContainer\"\r\n              draggable={allowDrag}\r\n              on:dragstart={() => { draggedItem = note; draggedItemIndex = index; draggedList = \"importantNotes\" }}\r\n              on:dragend={() => handleDragEnd(index, importantNotes)}\r\n              on:dragover={(e) => { e.preventDefault(); draggedOverIndex = index; }}\r\n              on:dragenter={(e) => { e.preventDefault(); }}\r\n            >\r\n              <div\r\n                class=\"note\"\r\n                style=\"\r\n                  background-color: {note.backgroundColor};\r\n                  color: {note.textColor};\r\n                  background: {\r\n                    index === draggedItemIndex && draggedList === \"importantNotes\" ? `linear-gradient(to right, red, ${note.backgroundColor} 50px)` :\r\n                    index === draggedOverIndex && draggedList === \"importantNotes\" ?\r\n                      draggedItemIndex !== undefined && draggedItemIndex > index ?\r\n                      `linear-gradient(135deg, #3a99ff, ${note.backgroundColor} 40px)` :\r\n                      `linear-gradient(45deg, #3a99ff, ${note.backgroundColor} 40px)` :\r\n                    note.backgroundColor\r\n                  };\r\n                \"\r\n              >\r\n                <div class=\"dragHandle\"\r\n                  on:focus={() => { allowDrag = true; }}\r\n                  on:mouseover={() => { allowDrag = true; }}\r\n                  on:mouseleave={() => { allowDrag = false; }}\r\n                >\r\n                  <i class=\"fa-solid fa-grip-vertical\" />\r\n                </div>\r\n\r\n                <div class=\"noteContent\">\r\n                  <Note {note} {saveAllNotes} />\r\n\r\n                  <div class=\"noteActions\">\r\n                    <button on:click={() => deleteNote(index, importantNotes)}>\r\n                      <i class=\"fa-solid fa-trash\" style={`color: ${note.textColor}`} />\r\n                    </button>\r\n                    <button on:click={() => togglePin(index, importantNotes)}>\r\n                      <i class=\"fa-solid fa-thumbtack\" style={`color: ${note.isPinned ? \"#3a54ff\" : note.textColor}`} />\r\n                    </button>\r\n                    <button on:click={() => toggleImportant(index, importantNotes)}>\r\n                      <i class=\"fa-solid fa-star\" style=\"color: #ffe11e\" />\r\n                    </button>\r\n                    <button on:click={() => toggleCompleted(index, importantNotes)}>\r\n                      <i class=\"fa-solid fa-check\" style={`color: ${note.completed ? \"#41ff1e\" : note.textColor}`} />\r\n                    </button>\r\n                    <div class=\"noteColors\">\r\n                      {#each notesColors as color}\r\n                        <button\r\n                          style=\"background-color: {color.background};\"\r\n                          on:click={() => changeColor(index, importantNotes, color)}\r\n                        />\r\n                      {/each}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #notesButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 65px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 16;\r\n  }\r\n  #notesButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #notesButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #notesButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #notesPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #notesPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  #notesTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n  }\r\n  #notesNewButtons {\r\n    margin-top: 4px;\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n  #notesContainer {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n  #notesSection {\r\n    flex-grow: 1;\r\n    flex-basis: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  #importantSection {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    flex-basis: 50%;\r\n  }\r\n  .sectionTitle {\r\n    margin: 8px 0px;\r\n  }\r\n  .newButton {\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    transition: 0.3s;\r\n  }\r\n  #newNoteButton {\r\n    background-color: #0b1;\r\n  }\r\n  #newNoteButton:hover {\r\n    background-color: #0c2;\r\n  }\r\n  #newTaskButton {\r\n    background-color: #3a99ff;\r\n  }\r\n  #newTaskButton:hover {\r\n    background-color: #2f84e0;\r\n  }\r\n  .saveIcon {\r\n    font-size: 1.2em;\r\n    margin-left: 8px;\r\n    animation: blink 0.5s infinite both;\r\n  }\r\n  .notesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    transition: 0.3s;\r\n  }\r\n  .notesList.notDragged {\r\n    opacity: 0.5;\r\n  }\r\n  .note {\r\n    display: flex;\r\n    border-radius: 5px;\r\n    align-items: center;\r\n  }\r\n  .dragHandle {\r\n    padding: 5px 5px 5px 10px;\r\n  }\r\n  .noteContent {\r\n    width: 100%;\r\n  }\r\n  .noteActions {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 0px 5px 5px 5px;\r\n  }\r\n  .noteActions > button {\r\n    width: 25px;\r\n    height: 25px;\r\n    padding: 5px;\r\n    border: 0;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .noteActions > button:hover {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n  .noteColors {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center;\r\n    padding: 5px;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border-radius: 5px;\r\n    flex-wrap: wrap;\r\n    transition: 0.3s;\r\n  }\r\n  .noteColors:hover {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n  .noteColors > button {\r\n    width: 12px;\r\n    height: 12px;\r\n    border: 0;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .noteColors > button:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #notesContainer {\r\n      flex-direction: column-reverse;\r\n    }\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #notesPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n    #notesTop {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { entertainmentData } from \"../data/config\";\r\n  import { userData } from \"../store\";\r\n\r\n  let isPanelShown = false;\r\n  let darkMode = false;\r\n\r\n  userData.subscribe((data) => {\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const toggleEntertainmentPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Transition\r\n  function entertainmentEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 74% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleEntertainmentPanel}\r\n  id=\"entertainmentButton\"\r\n  aria-label=\"Entertainment\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={darkMode}\r\n>\r\n  <i class=\"fa-solid fa-gamepad\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"entertainmentPanel\" class:darkModifier={darkMode} transition:entertainmentEntrance>\r\n    <div id=\"entertainmentTop\">\r\n      <h2>Entertainment</h2>\r\n    </div>\r\n\r\n    <div id=\"entertainmentBox\">\r\n      {#each entertainmentData as data}\r\n        <a href={data.link}>\r\n          <img src=\"static/images/entertainment/{data.img}\" alt={data.name} />\r\n          <p>{data.name}</p>\r\n        </a>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #entertainmentButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 105px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 8;\r\n  }\r\n  #entertainmentButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #entertainmentButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #entertainmentButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #entertainmentPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #entertainmentPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  #entertainmentTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n  }\r\n  #entertainmentBox > a {\r\n    width: 85px;\r\n  }\r\n  #entertainmentBox > a > img {\r\n    width: 100%;\r\n  }\r\n  #entertainmentPanel.darkModifier #entertainmentBox > a > img {\r\n    border: 2px solid white;\r\n    border-radius: 8px;\r\n  }\r\n  #entertainmentBox > a > p {\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n    font-size: 0.8em;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n  #entertainmentPanel.darkModifier #entertainmentBox > a > p {\r\n    color: white;\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #entertainmentPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let isPanelShown = false;\r\n  let darkMode = false;\r\n\r\n  userData.subscribe((data) => {\r\n    darkMode = data.darkMode;\r\n  });\r\n\r\n  const hintsLength = 7;\r\n  // Start from a random hint\r\n  let hintIndex = Math.floor(Math.random() * hintsLength);\r\n\r\n  const nextHint = () => {\r\n    hintIndex = (hintIndex + 1) % hintsLength;\r\n  };\r\n\r\n  const prevHint = () => {\r\n    hintIndex = (hintIndex - 1 + hintsLength) % hintsLength;\r\n  };\r\n\r\n  const toggleHintPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Transition\r\n  function hintEntrance() {\r\n    return {\r\n      duration: 400,\r\n      css: (t, u) => `clip-path: circle(${t * 130}% at 65% 3.5vh)`,\r\n    };\r\n  }\r\n</script>\r\n\r\n<button\r\n  on:click={toggleHintPanel}\r\n  id=\"hintButton\"\r\n  aria-label=\"Hints\"\r\n  class:highZIndex={isPanelShown}\r\n  class:darkModifier={darkMode}\r\n>\r\n  <i class=\"fa-solid fa-info\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"hintPanel\" class:darkModifier={darkMode} transition:hintEntrance>\r\n    <div id=\"hintPanelTop\">\r\n      <h2>Hints</h2>\r\n    </div>\r\n\r\n    <div id=\"hint\">\r\n      <!-- Use hardcoded hints to easily display icons -->\r\n      {#if hintIndex === 0}\r\n        <span>You can change the background image by clicking on the <i class=\"fas fa-sliders-h\" /> icon in the top right corner and then navigating to the \"Background\" tab.</span>\r\n      {:else if hintIndex === 1}\r\n        <span>You can change visual settings such as tile size, border radius, and colors by clicking on the <i class=\"fas fa-sliders-h\" /> icon in the top right corner and then navigating to the \"Visuals\" tab.</span>\r\n      {:else if hintIndex === 2}\r\n        <span>You can add more pages to the speed dial by clicking on the <i class=\"fas fa-sliders-h\" /> icon in the top right corner and then navigating to the \"Pages\" tab.</span>\r\n      {:else if hintIndex === 3}\r\n        <span>You can select a different theme by clicking on the <i class=\"fas fa-sliders-h\" /> icon in the top right corner and then navigating to the \"Themes\" tab.</span>\r\n      {:else if hintIndex === 4}\r\n        <span>You can search the web using the search bar at the top of the speed dial.</span>\r\n      {:else if hintIndex === 5}\r\n        <span>You can write notes by clicking on the <i class=\"fa-solid fa-note-sticky\" /> icon in the top right corner.</span>\r\n      {:else if hintIndex === 6}\r\n        <span>You can quickly access your history & downloads using the action buttons from the top left corner.</span>\r\n      {/if}\r\n    </div>\r\n\r\n    <div id=\"indicatorDots\">\r\n      {#each Array(hintsLength) as _, index}\r\n        <span\r\n          class=\"indicatorDot\"\r\n          class:active={index === hintIndex}\r\n          on:click={() => (hintIndex = index)}\r\n        ></span>\r\n      {/each}\r\n    </div>\r\n\r\n    <div id=\"navigationButtons\">\r\n      <button on:click={prevHint}><i class=\"fa-solid fa-chevron-left\" /></button>\r\n      <button on:click={nextHint}><i class=\"fa-solid fa-chevron-right\" /></button>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #hintButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 145px;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    transition: 0.3s;\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 8;\r\n  }\r\n  #hintButton:hover {\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  #hintButton.darkModifier.highZIndex {\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    color: black;\r\n  }\r\n  #hintButton.darkModifier.highZIndex:hover {\r\n    background-color: rgba(255, 255, 255, 0.85);\r\n  }\r\n  #hintPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 50;\r\n    max-height: 100vh;\r\n    width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  #hintPanel.darkModifier {\r\n    background-color: rgb(3, 7, 15);\r\n    color: white;\r\n  }\r\n  #hintPanelTop {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  #hint {\r\n    padding: 8px 12px;\r\n    border-radius: 8px;\r\n    min-height: 90px;\r\n    background-color: rgba(0, 0, 0, 0.07);\r\n  }\r\n  #hint i {\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    font-size: 0.9em;\r\n  }\r\n  #hintPanel.darkModifier #hint {\r\n    border: 1px solid #3a99ff;\r\n    background-color: rgba(255, 255, 255, 0.07);\r\n  }\r\n  #indicatorDots {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  .indicatorDot {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 100%;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    cursor: pointer;\r\n  }\r\n  .indicatorDot.active {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  #hintPanel.darkModifier .indicatorDot {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n  #hintPanel.darkModifier .indicatorDot.active {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  #navigationButtons {\r\n    display: flex;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n  #navigationButtons button {\r\n    flex: 1;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    transition: 0.3s;\r\n  }\r\n  #navigationButtons button:hover {\r\n    background-color: rgba(0, 0, 0, 0.07);\r\n  }\r\n  #hintPanel.darkModifier #navigationButtons button {\r\n    color: white;\r\n  }\r\n  #hintPanel.darkModifier #navigationButtons button:hover {\r\n    background-color: rgba(255, 255, 255, 0.07);\r\n  }\r\n  .highZIndex {\r\n    z-index: 60 !important;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #hintPanel {\r\n      width: 100vw;\r\n      padding: 20px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import \"./data/storage\";\r\n  import { userData } from \"./store\";\r\n\r\n  import Cover from \"./components/Cover.svelte\";\r\n  import QuickNav from \"./components/QuickNav.svelte\";\r\n  import SearchBar from \"./components/SearchBar/SearchBar.svelte\";\r\n  import SpeedDial from \"./components/SpeedDial.svelte\";\r\n  import Settings from \"./components/Settings/Settings.svelte\";\r\n  import Notes from \"./components/Notes/Notes.svelte\";\r\n  import Entertainment from \"./components/Entertainment.svelte\";\r\n  import Hint from \"./components/Hint.svelte\";\r\n  import { getBackgroundFormat } from \"./data/tools\";\r\n\r\n  let backgroundImage;\r\n  let isBackgroundSolid = false;\r\n  let backgroundSolidColor;\r\n\r\n  let remoteOpenNotes;\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    isBackgroundSolid = data.isBackgroundSolid;\r\n    backgroundSolidColor = data.backgroundSolidColor;\r\n  });\r\n\r\n  //Update background image url when background image changes\r\n  $: backgroundImageUrl = \"static/images/bg/\" + backgroundImage + \".\" + getBackgroundFormat(backgroundImage);\r\n</script>\r\n\r\n<!--Use the url made above if user selects image provided by the extension (bgXXX)-->\r\n<main\r\n  style={isBackgroundSolid\r\n    ? \"background-color: \" + backgroundSolidColor + \";\"\r\n    : backgroundImage.length > 5\r\n    ? \"background-image: url(\" + backgroundImage + \");\"\r\n    : \"background-image: url(\" + backgroundImageUrl + \");\"}\r\n>\r\n  <Cover />\r\n  <QuickNav />\r\n  <SearchBar remoteOpenNotes={remoteOpenNotes} />\r\n  <SpeedDial />\r\n  <Settings />\r\n  <Notes bind:remoteOpenNotes />\r\n  <Entertainment />\r\n  <Hint />\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n  }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","$$","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","globals","globalThis","global","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","this","$on","splice","$set","$$props","obj","$$set","keys","yourName","clockBackground","backgroundSolidColor","tileZoom","tileGrow","tileBorderRadius","tileBorderColor","g","groupTileBorderRadius","groupTileGrow","navbarColor","coverColor","coverTextColor","searchEngineList","label","link","entertainmentData","img","notesColors","background","backgrounds","format","source","sourceDetails","themes","author","thumbnail","changesTiles","changesBackground","changesColors","settings","isBackgroundSolid","backgroundImage","tileMinWidth","tileHeight","tileGap","tileBorder","groupTileGap","navbarOpacity","changesPanelColors","darkMode","tileThemes","knownPages","subscriber_queue","userData","stop","subscribers","new_value","run_queue","subscriber","subscribe","invalidate","writable","saveConfig","localStorage","setItem","showCover","clock24Hour","JSON","stringify","notes","pages","searchEngine","saveNotes","err","alert","saveTileImage","image","getTileImage","getItem","CONFIG.yourName","CONFIG.clockBackground","CONFIG.backgroundSolidColor","CONFIG.tileZoom","CONFIG.tileGrow","CONFIG.tileBorderRadius","parse","CONFIG.tileBorderColor","CONFIG.groupTileBorderRadius","CONFIG.groupTileGrow","CONFIG.navbarColor","CONFIG.coverColor","CONFIG.coverTextColor","imageName","isActive","tileImageType","tileName","backgroundColor","textColor","isGroup","legacyPagesCookie","nameEQ","ca","cookie","charAt","substring","getCookie","oldPages","page","toUpperCase","slice","hasOwnProperty","parseNotes","note","CONFIG.notesColors","completed","isPinned","div1","div0","h1","create_if_block","showCoverAtLoad","setTimeout","$$invalidate","div","a0","a1","a2","a3","onClickChromeTabs","elem","chrome","tabs","span","time","auxHours","getHours","hours","minutes","getMinutes","ampm","setInterval","showGithub","innerWidth","chance","floor","random","checked","textarea","textarea_style_value","pre","t1","t1_value","saveAllNotes","overrideMaxHeight","button0","button0_style_value","button1","button1_style_value","div1_style_value","apply","arguments","note_changes","current","form","button","pinnedNote","remoteOpenNotes","searchQuery","innerHeight","find","entityMap","escapeHTML","string","String","replace","s","state","modifiedNote","preventDefault","selectedSearchEngine","item","location","assign","getBackgroundFormat","bg","backgroundImageElem","backgroundImageFormat","toHex","color","toString","toRGB","hex","result","exec","parseInt","clearOldExtension","fileName","lastIndexOf","create_if_block_2","create_if_block_1","each_value_1","div_style_value","a_href_value","a_aria_label_value","t0","t0_value","t_value","if_block","create_if_block_3","div2","small","div68","h2","hr0","label0","input0","div5","div3","hr1","div4","label1","input1","div8","div6","hr2","div7","label2","input2","div11","div9","hr3","div10","label3","input3","div14","div12","hr4","div13","label4","input4","div17","div15","hr5","div16","label5","input5","div20","div18","hr6","div19","label6","input6","div24","div21","hr7","div23","label7","div22","input7","input8","div28","div25","hr8","div27","label8","div26","input9","input10","div32","div29","hr9","div31","label9","div30","input11","input12","div36","div33","hr10","div35","label10","div34","input13","input14","div40","div37","hr11","div39","label11","div38","input15","input16","div43","div41","hr12","div42","label12","input17","div46","div44","hr13","div45","label13","input18","div50","div47","hr14","div49","label14","div48","input19","input20","div54","div51","hr15","div53","label15","div52","input21","input22","div58","div55","hr16","div57","label16","div56","input23","input24","div61","div59","hr17","div60","label17","input25","div64","div62","hr18","div63","label18","input26","div67","div65","hr19","div66","label19","input27","div71","div69","div70","settingsData","saveSettings","resetVisuals","unsavedSettings","resetLocalVisuals","h4","fileinput","changeBackground","onFileSelected","files","reader","FileReader","readAsDataURL","onload","click","$$value","img_src_value","src","img_alt_value","if_block1","h20","h40","h41","h21","savedBackgroundSolidColor","newBackgroundSolidColor","changeBackgroundColor","backgroundSolidColorChanged","backgroundSources","localStorageUsedSpace","Blob","values","toFixed","showLocalStorageInfo","backgroundImageUrl","p0","p1","p2","button2","button3","t12","t12_value","stopImmediatePropagation","unsavedPages","modalActive","removeItem","i3","if_block0","each_value","h3","draggedItem","draggedItemIndex","draggedOverIndex","deletePage","addPage","movePage","getImageNameFor","checkWebsite","addPageInput","allowDrag","imageModalActive","selectedImageIndex","handleDragEnd","t2","t2_value","create_if_block_6","create_if_block_5","create_if_block_4","createGroup","showDeleteTileImageConfirm","selectedIndex","groupModalActive","selectedGroupIndex","deleteAllTileImages","create_if_block_7","tileImages","if_block2","if_block3","visuals","if_block4","if_block5","create_if_block_8","small0","small1","fileInput","importPages","importTileImages","importBackground","importVisuals","importNotes","importSearchEngine","exportPages","exportTileImages","exportBackground","exportVisuals","exportNotes","exportSearchEngine","importErrors","importFinishedSuccessfully","exportData","exportDataObject","links","getTileImageLinks","dataStr","encodeURIComponent","dlAnchorElem","getElementById","file","readAsText","settingsToSave","errorsFound","isArray","subPage","match","parseFloat","currentSearchEngine","changeSearchEngine","span3","span4","create_if_block_10","create_if_block_11","create_if_block_9","applyTheme","theme","button4","button5","button6","hr","searchengine_changes","slide","u","isPanelShown","isPeekPressed","tabIndex","changeTab","pageName","extractWebsiteName","toLowerCase","CONFIG.knownPages","includes","sitename","engine","saveSearchEngine","saveBackground","saveBackgroundColor","list","linkToAdd","h30","h31","each_blocks_1","each_blocks","running","cleanup","start_time","end_time","started","reset","i1","i1_style_value","i2","i2_style_value","i3_style_value","i4","i4_style_value","notesExit","showSaveIconTimeout","isPanelShownRemote","userNotes","importantNotes","showSaveIcon","draggedList","createNewNote","unshift","clearTimeout","deleteNote","toggleImportant","moveToImportant","oldUserNotes","oldImportantNotes","toggleCompleted","changeColor","togglePin","isPinning","aux","entertainmentEntrance","hintsLength","hintEntrance","hintIndex","main","body"],"mappings":"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OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,WAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,OACN8M,OAAQ,OACRC,OAAQ,oBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,MACN8M,OAAQ,OACRC,OAAQ,mBAEV,CACE/M,KAAM,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EACnBC,eAAe,EACfC,SAAU,CACR3B,UAAU,EACVC,UAAU,EACV6B,aAAc,GACdC,WAAY,GACZC,QAAS,EACT9B,iBAAkB,GAClBgC,aAAc,EACd7B,sBAAuB,GACvBC,eAAe,IAGnB,CACElM,KAAM,gBACNuM,MAAO,gBACPW,OAAQ,mBACRC,UAAW,kBACXC,aAAc,UACdC,mBAAmB,EACnBC,eAAe,EACfC,SAAU,CACR3B,UAAU,EACVC,UAAU,EACV6B,aAAc,GACdC,WAAY,GACZC,QAAS,GACT9B,iBAAkB,EAClBgC,aAAc,GACd7B,sBAAuB,EACvBC,eAAe,IAGnB,CACElM,KAAM,iBACNuM,MAAO,iBACPW,OAAQ,mBACRC,UAAW,mBACXC,aAAc,UACdC,mBAAmB,EACnBC,eAAe,EACfC,SAAU,CACR3B,UAAU,EACVC,UAAU,EACV6B,aAAc,GACdC,WAAY,GACZC,QAAS,EACT9B,iBAAkB,IAClBgC,aAAc,EACd7B,sBAAuB,IACvBC,eAAe,IAGnB,CACElM,KAAM,iBACNuM,MAAO,iBACPW,OAAQ,mBACRC,UAAW,mBACXC,aAAc,UACdC,mBAAmB,EACnBC,eAAe,EACfC,SAAU,CACR3B,UAAU,EACVC,UAAU,EACV6B,aAAc,GACdC,WAAY,GACZC,QAAS,EACT9B,iBAAkB,IAClBgC,aAAc,EACd7B,sBAAuB,EACvBC,eAAe,IAGnB,CACElM,KAAM,cACNuM,MAAO,cACPW,OAAQ,mBACRC,UAAW,gBACXC,aAAc,UACdC,mBAAmB,EACnBC,eAAe,EACfC,SAAU,CACR3B,UAAU,EACVC,UAAU,EACV6B,aAAc,GACdC,WAAY,GACZC,QAAS,EACT9B,iBAAkB,EAClBgC,aAAc,IACd7B,sBAAuB,EACvBC,eAAe,KAMRiC,GAAa,CAExB,SACA,WACA,UACA,QACA,SACA,UACA,SACA,OACA,MACA,WACA,SACA,OACA,aACA,SACA,OACA,cACA,KACA,UACA,KACA,QACA,cACA,cACA,mBACA,eACA,WACA,gBACA,YACA,YACA,SACA,gBACA,aACA,YACA,MACA,eACA,YACA,aACA,cACA,WACA,UACA,MACA,QACA,aACA,UACA,SACA,MACA,QACA,YACA,QACA,OACA,YACA,aACA,SACA,MACA,cACA,SACA,WACA,UACA,WACA,OACA,OAGA,cACA,mBACA,kBACA,eACA,QACA,YACA,OACA,SACA,OACA,UACA,aAEA,MACA,iBACA,UACA,QACA,SACA,SACA,UAEA,KACA,OACA,aACA,KACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,UACA,WACA,KACA,WACA,QACA,QACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,SACA,QACA,aACA,UACA,OACA,OACA,SACA,WAGA,YACA,kBACA,gBACA,QAGA,UACA,cACA,SACA,mBC3vCIC,GAAmB,GCDlB,MAAMC,GDiBb,SAAkBzR,EAAOsL,EAAQ9M,GAC7B,IAAIkT,EACJ,MAAMC,EAAc,IAAIjR,IACxB,SAAS8F,EAAIoL,GACT,GAAIvS,EAAeW,EAAO4R,KACtB5R,EAAQ4R,EACJF,GAAM,CACN,MAAMG,GAAaL,GAAiBtO,OACpC,IAAK,MAAM4O,KAAcH,EACrBG,EAAW,KACXN,GAAiBtJ,KAAK4J,EAAY9R,GAEtC,GAAI6R,EAAW,CACX,IAAK,IAAI5O,EAAI,EAAGA,EAAIuO,GAAiBtO,OAAQD,GAAK,EAC9CuO,GAAiBvO,GAAG,GAAGuO,GAAiBvO,EAAI,IAEhDuO,GAAiBtO,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAEsD,MAAKgC,OAlBd,SAAgB5J,GACZ4H,EAAI5H,EAAGoB,GACV,EAgBqB+R,UAftB,SAAmBpT,EAAKqT,EAAaxT,GACjC,MAAMsT,EAAa,CAACnT,EAAKqT,GAMzB,OALAL,EAAYrQ,IAAIwQ,GACS,IAArBH,EAAY3Q,OACZ0Q,EAAOpG,EAAM9E,IAAQhI,GAEzBG,EAAIqB,GACG,KACH2R,EAAY7Q,OAAOgR,GACM,IAArBH,EAAY3Q,OACZ0Q,IACAA,EAAO,KACV,CAER,EAEL,CCzDwBO,CAAS,ICCpBC,GAAc5O,IACzB6O,aAAaC,QAAQ,MAAM,GAC3BD,aAAaC,QAAQ,WAAY9O,EAAKuL,UACtCsD,aAAaC,QAAQ,YAAa9O,EAAK+O,WACvCF,aAAaC,QAAQ,kBAAmB9O,EAAKwL,iBAC7CqD,aAAaC,QAAQ,cAAe9O,EAAKgP,aACzCH,aAAaC,QAAQ,WAAY9O,EAAK+N,UACtCc,aAAaC,QAAQ,oBAAqB9O,EAAKsN,mBAC/CuB,aAAaC,QAAQ,uBAAwB9O,EAAKyL,sBAClDoD,aAAaC,QAAQ,kBAAmB9O,EAAKuN,iBAC7CsB,aAAaC,QAAQ,WAAY9O,EAAK0L,UACtCmD,aAAaC,QAAQ,WAAY9O,EAAK2L,UACtCkD,aAAaC,QAAQ,eAAgB9O,EAAKwN,cAC1CqB,aAAaC,QAAQ,aAAc9O,EAAKyN,YACxCoB,aAAaC,QAAQ,UAAW9O,EAAK0N,SACrCmB,aAAaC,QAAQ,aAAc9O,EAAK2N,YACxCkB,aAAaC,QAAQ,mBAAoB9O,EAAK4L,kBAC9CiD,aAAaC,QAAQ,kBAAmBG,KAAKC,UAAUlP,EAAK6L,kBAC5DgD,aAAaC,QAAQ,eAAgB9O,EAAK4N,cAC1CiB,aAAaC,QAAQ,wBAAyB9O,EAAK+L,uBACnD8C,aAAaC,QAAQ,gBAAiB9O,EAAKgM,eAC3C6C,aAAaC,QAAQ,gBAAiB9O,EAAK6N,eAC3CgB,aAAaC,QAAQ,cAAeG,KAAKC,UAAUlP,EAAKiM,cACxD4C,aAAaC,QAAQ,aAAcG,KAAKC,UAAUlP,EAAKkM,aACvD2C,aAAaC,QAAQ,iBAAkBG,KAAKC,UAAUlP,EAAKmM,iBAC3D0C,aAAaC,QAAQ,QAASG,KAAKC,UAAUlP,EAAKmP,QAClDN,aAAaC,QAAQ,QAASG,KAAKC,UAAUlP,EAAKoP,QAClDP,aAAaC,QAAQ,eAAgB9O,EAAKqP,aAAa,EAa5CC,GAAaH,IACxB,IACEN,aAAaC,QAAQ,QAASG,KAAKC,UAAUC,GAS9C,CAPD,MAAMI,GACY,uBAAbA,EAAIzP,KACL0P,MAAM,mDAGNA,MAAM,qBAET,GAGUC,GAAgB,CAACnD,EAAMoD,KAClCb,aAAaC,QAAQxC,EAAMoD,EAAM,EAOtBC,GAAgBrD,GACpBuC,aAAae,QAAQtD,GA6BxBtM,GAAO,CACXuL,SACEsD,aAAae,QAAQ,aACrBC,GAEFd,UACwC,OAAtCF,aAAae,QAAQ,cAEmB,SAAtCf,aAAae,QAAQ,aAEzBpE,gBAC8C,OAA5CqD,aAAae,QAAQ,mBACnBE,GAC4C,SAA5CjB,aAAae,QAAQ,mBAEzBZ,YAC0C,OAAxCH,aAAae,QAAQ,gBAEqB,SAAxCf,aAAae,QAAQ,eAEzB7B,SACuC,OAArCc,aAAae,QAAQ,aAEkB,SAArCf,aAAae,QAAQ,YAEzBtC,kBACgD,OAA9CuB,aAAae,QAAQ,sBAE2B,SAA9Cf,aAAae,QAAQ,qBAEzBnE,qBACEoD,aAAae,QAAQ,yBACrBG,GAEFxC,gBACEsB,aAAae,QAAQ,oBH1HM,MG6H7BlE,SACuC,OAArCmD,aAAae,QAAQ,YACnBI,GACqC,SAArCnB,aAAae,QAAQ,YAEzBjE,SACuC,OAArCkD,aAAae,QAAQ,YACnBK,GACqC,SAArCpB,aAAae,QAAQ,YAEzBpC,aACEqB,aAAae,QAAQ,iBHrIG,GGwI1BnC,WACEoB,aAAae,QAAQ,eHxIC,GG2IxBlC,QACEmB,aAAae,QAAQ,YH3IF,EG8IrBjC,WACEkB,aAAae,QAAQ,eH9IC,EGiJxBhE,iBACEiD,aAAae,QAAQ,qBACrBM,GAEFrE,gBACEoD,KAAKkB,MAAMtB,aAAae,QAAQ,qBAChCQ,GAEFxC,aACEiB,aAAae,QAAQ,iBHvJG,EG0J1B7D,sBACE8C,aAAae,QAAQ,0BACrBS,GAEFrE,cAC4C,OAA1C6C,aAAae,QAAQ,iBACnBU,GAC0C,SAA1CzB,aAAae,QAAQ,iBAEzB/B,cACEgB,aAAae,QAAQ,kBHjKI,EGoK3B3D,YACEgD,KAAKkB,MAAMtB,aAAae,QAAQ,iBAChCW,GAEFrE,WACE+C,KAAKkB,MAAMtB,aAAae,QAAQ,gBAChCY,GAEFrE,eACE8C,KAAKkB,MAAMtB,aAAae,QAAQ,oBAChCa,GAEFtB,MACEF,KAAKkB,MAAMtB,aAAae,QAAQ,WHlGf,GGqGnBR,MACEH,KAAKkB,MAAMtB,aAAae,QAAQ,WHpGf,CACnB,CACEtD,KAAM,yBACNoE,UAAW,SACXC,UAAU,EACVC,cAAe,aACfC,SAAU,SACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,2BACNoE,UAAW,WACXC,UAAU,EACVC,cAAe,aACfC,SAAU,WACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,0BACNoE,UAAW,UACXC,UAAU,EACVC,cAAe,aACfC,SAAU,UACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,wBACNoE,UAAW,QACXC,UAAU,EACVC,cAAe,aACfC,SAAU,QACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,yBACNoE,UAAW,SACXC,UAAU,EACVC,cAAe,aACfC,SAAU,SACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,iCACNoE,UAAW,UACXC,UAAU,EACVC,cAAe,aACfC,SAAU,UACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,0BACNoE,UAAW,UACXC,UAAU,EACVC,cAAe,aACfC,SAAU,UACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEjR,KAAM,WACNkR,SAAS,EACTL,UAAU,EACVvB,MAAO,CACL,CACE9C,KAAM,yBACNoE,UAAW,SACXC,UAAU,EACVC,cAAe,aACfC,SAAU,SACVC,gBAAiB,UACjBC,UAAW,WAEb,CACEzE,KAAM,0BACNoE,UAAW,UACXC,UAAU,EACVC,cAAe,aACfC,SAAU,UACVC,gBAAiB,UACjBC,UAAW,cGkBjB1B,aACER,aAAae,QAAQ,iBHpLG,UG0L5B,IAAIqB,GA+FJ,SAAmBnR,GACjB,IAAIoR,EAASpR,EAAO,IAChBqR,EAAK7U,SAAS8U,OAAO3N,MAAM,KAC/B,IAAK,IAAI9D,EAAI,EAAGA,EAAIwR,EAAGvR,OAAQD,IAAK,CAClC,IAAIpC,EAAI4T,EAAGxR,GACX,KAAsB,KAAfpC,EAAE8T,OAAO,IAAW9T,EAAIA,EAAE+T,UAAU,EAAG/T,EAAEqC,QAChD,GAAyB,GAArBrC,EAAEsG,QAAQqN,GAAc,OAAO3T,EAAE+T,UAAUJ,EAAOtR,OAAQrC,EAAEqC,OACjE,CACD,OAAO,IACT,CAxGwB2R,CAAU,SAElC,GAAyB,MAArBN,GAA2B,CAC7B,IAAIO,EAAW,GACevC,KAAKkB,MAAMc,IAIjBrV,SAAQ,CAAC6V,EAAM9I,KACrC6I,EAAS7I,GAAS,CAChB2D,KAAMmF,EAAK,GACXf,UAAWe,EAAK,GAChBd,WAAUc,EAAK,GACfb,cAAea,EAAK,GAAG7R,OAAS,EAAI,aAAe,OACnDiR,SAAUY,EAAK,GAAG,GAAGC,cAAgBD,EAAK,GAAGE,MAAM,GACnDb,gBAAiB,UACjBC,UAAW,UACZ,IAGH/Q,GAAKoP,MAAQoC,EAsFM1R,GArFP,QAsFZxD,SAAS8U,OAAStR,GAAO,wBArFzB8O,GAAW5O,GACb,CAmFA,IAAqBF,GAhFjBE,GAAKoP,QACPpP,GAAKoP,MAAMxT,SAAQ6V,IACbA,EAAKT,UAIJS,EAAKG,eAAe,mBACvBH,EAAKb,cAAgBa,EAAKf,UAAU9Q,OAAS,EAAI,aAAe,QAE7D6R,EAAKG,eAAe,cACvBH,EAAKZ,SAAWY,EAAKf,UAAU,GAAGgB,cAAgBD,EAAKf,UAAUiB,MAAM,IAEpEF,EAAKG,eAAe,qBACvBH,EAAKX,gBAAkB,WAEpBW,EAAKG,eAAe,eACvBH,EAAKV,UAAY,WAClB,IAEHlC,aAAaC,QAAQ,QAASG,KAAKC,UAAUlP,GAAKoP,SAI7C,MAAMyC,GAAc1C,IACrBA,GAASA,EAAMvP,QACjBuP,EAAMvT,SAAQkW,IACZ,IAAI7L,EAAO,OACN6L,EAAKF,eAAe,UACvBE,EAAK/R,KAAO,IAGT+R,EAAKF,eAAe,QAKvB3L,EAAO6L,EAAK7L,KAJZ6L,EAAK7L,KAAOA,EAOT6L,EAAKF,eAAe,eACvBE,EAAKf,UAAqB,SAAT9K,EAAkB8L,GAAmB,GAAGhS,KAAOgS,GAAmB,GAAGhS,MAEnF+R,EAAKF,eAAe,qBACvBE,EAAKhB,gBAA2B,SAAT7K,EAAkB8L,GAAmB,GAAGrF,WAAaqF,GAAmB,GAAGrF,YAG/FoF,EAAKF,eAAe,eACvBE,EAAKxQ,WAAY,GAEdwQ,EAAKF,eAAe,eACvBE,EAAKE,WAAY,GAEdF,EAAKF,eAAe,cACvBE,EAAKG,UAAW,EACjB,IAGE9C,6EC/PE1J,EAAQ,uIALNA,EAAU,GAACmB,EAAI,IAAAnB,KAAWqG,EAAC,IAAGrG,EAAU,GAACxJ,EAAC,wBAE1CwJ,EAAc,GAACmB,EAAI,IAAAnB,KAAeqG,EAAC,IAAGrG,EAAc,GAACxJ,EAAC,0CANjEiD,EAWMf,EAAA+T,EAAA/S,GAHJjB,EAEMgU,EAAAC,GADJjU,EAAmBiU,EAAAC,2BAAd3M,EAAQ,uCALNA,EAAU,GAACmB,EAAI,IAAAnB,KAAWqG,EAAC,IAAGrG,EAAU,GAACxJ,EAAC,6BAE1CwJ,EAAc,GAACmB,EAAI,IAAAnB,KAAeqG,EAAC,IAAGrG,EAAc,GAACxJ,EAAC,4CAP9DwJ,EAAe,IAAA4M,GAAA5M,oEAAfA,EAAe,8HA1Bd8F,EACAwD,EACA7C,EACAC,EAEJgC,GAASM,WAAWzO,QAClBuL,EAAWvL,EAAKuL,UAChBwD,EAAY/O,EAAK+O,cACjB7C,EAAalM,EAAKkM,gBAClBC,EAAiBnM,EAAKmM,eAAc,IAMlC,IAAAmG,EAAkBvD,wCAIfuD,GACLC,uBACEC,EAAA,EAAAF,GAAkB,KACjB,iBDgRPtS,GAAKmP,MAAQ0C,GAAW7R,GAAKmP,OACzBnP,GAAKmP,OAASnP,GAAKmP,MAAMvP,QAC3BiP,aAAaC,QAAQ,QAASG,KAAKC,UAAUlP,GAAKmP,QAIpDhB,GAASjL,IAAIlD,+vBEzSbd,EAiBMf,EAAAsU,EAAAtT,GAfJjB,EAEIuU,EAAAC,UAEJxU,EAEIuU,EAAAE,UAEJzU,EAEIuU,EAAAG,UAEJ1U,EAEIuU,EAAAI,8IArBE,MAAAC,EAAqBC,IACzBC,OAAOC,KAAKxX,OAAS,CAAAY,gBAAiB0W,KAAI,WAMK,IAAAD,EAAkB,WAIhB,IAAAA,EAAkB,aAIlB,IAAAA,EAAkB,aAIjB,IAAAA,EAAkB,mICmBnDrN,EAAI,2DAArBvG,EAA6Bf,EAAA+U,EAAA/T,4BAAZsG,EAAI,sDADjBA,EAAW,IAAA4M,GAAA5M,6BADhBA,EAAK,QAAC,qBAAqBA,EAAO,kIADPA,EAAe,YAA7CvG,EAKMf,EAAAsU,EAAAtT,iBAJIjB,EAAmCuU,EAAAS,mDAA1CzN,EAAK,aAAsBA,EAAO,IAC7BA,EAAW,gFAFWA,EAAe,4DAjCvC+F,EACAwD,EAEJb,GAASM,WAAWzO,QAClBwL,EAAkBxL,EAAKwL,qBACvBwD,EAAchP,EAAKgP,YAAW,IAG5B,IAAAmE,MAAWpW,KACXqW,EAAWD,EAAKE,WACfrE,IACHoE,GAAsB,GACL,IAAbA,IAAgBA,EAAW,KAE7B,IAAAE,GAAS,IAAMF,GAAUzB,OAAO,GAChC4B,GAAW,IAAMJ,EAAKK,cAAc7B,OAAO,GAC3C8B,EAAON,EAAKE,YAAc,GAAK,KAAO,YAG1CK,kBACEP,MAAWpW,KACXqW,EAAWD,EAAKE,WACXrE,IACHoE,GAAsB,GACL,IAAbA,IAAgBA,EAAW,KAEjCZ,EAAA,EAAAc,GAAS,IAAMF,GAAUzB,OAAO,QAChC4B,GAAW,IAAMJ,EAAKK,cAAc7B,OAAO,QAC3C8B,EAAON,EAAKE,YAAc,GAAK,KAAO,KAAI,GACzC,uSCVHnU,EAIMf,EAAAsU,EAAAtT,0DALHsG,EAAU,IAAA4M,0GAAV5M,EAAU,0HApBT,IAAAkO,GAAa,EAGbC,EAAa,SAEjBF,4BACMG,EAAS/L,KAAKgM,MAAsB,IAAhBhM,KAAKiM,UAK3BvB,EAAA,EAAAmB,EADa,IAAXE,GAAgBD,EAAa,OAKhC,uPCRD1U,EAQMf,EAAAsU,EAAAtT,GAPJjB,EAMEuU,EAAAtR,GAJcA,EAAA6S,QAAAvO,KAAKuM,4EAAL7Q,EAAA6S,QAAAvO,KAAKuM,gFASyEvM,EAAI,GAAC1F,KAAO,OAb3F,SAAd0F,EAAI,GAACQ,MAAeoM,GAAA5M,mIAaQA,EAAiB,kBAAkBA,EAAiB,QAAQ,oEAQxE/E,EAAAuT,EAAA,QAAAC,EAAA,UAAAzO,KAAKsL,mCAAmCtL,EAAK,GAAAsL,cAActL,EAAiB,kBAAkBA,EAAiB,QAAQ,oCADnHhE,EAAAwS,EAAA,gBAAAxO,KAAKuM,gGArBhC9S,EAyBMf,EAAA+T,EAAA/S,yBAbJjB,EAYMgU,EAAAC,GAVJjU,EAAuHiU,EAAAgC,iBACvHjW,EAQEiU,EAAA8B,GANY/S,EAAA+S,EAAAxO,KAAK1F,kEAhBF,SAAd0F,EAAI,GAACQ,wEAawFR,EAAI,GAAC1F,KAAO,OAAIiB,EAAAoT,EAAAC,eAAjF5O,EAAiB,kBAAkBA,EAAiB,QAAQ,oBAQxE,EAAAD,GAAA0O,KAAAA,EAAA,UAAAzO,KAAKsL,mCAAmCtL,EAAK,GAAAsL,cAActL,EAAiB,kBAAkBA,EAAiB,QAAQ,2BAL5HvE,EAAA+S,EAAAxO,KAAK1F,WAII0B,EAAAwS,EAAA,gBAAAxO,KAAKuM,kFA1BnBF,GAAI3G,gBACJmJ,GAAYnJ,GACZoJ,kBAAAA,GAA6BpJ,gKAQpB2G,EAAKE,UAASjH,KAAAiJ,qBAE1BM,GAAY,aAUJxC,EAAK/R,KAAIgL,KAAArO,mBAEnB4X,GAAY,gYC+DF7O,EAAU,gBAAgBA,EAAe,GAAqB8O,kBAAA9O,EAAc,GAAA,IAAO,IAAM,2EAEtB,sCACN,SAD9C/E,EAAA8T,EAAA,QAAAC,EAAA,UAAAhP,KAAWsL,2CACXrQ,EAAAgU,EAAA,QAAAC,EAAA,UAAAlP,KAAWsL,qGAJGrQ,EAAAwR,EAAA,QAAA0C,EAAA,qBAAAnP,EAAW,GAAAqL,2BAA2BrL,KAAWsL,mDAA5F7R,EAMMf,EAAA+T,EAAA/S,uBAJJjB,EAGMgU,EAAAC,GAFJjU,EAAgGiU,EAAAqC,iBAChGtW,EAAqFiU,EAAAuC,8CADzB7Y,EAAA4J,OAAAA,EAAe,GAAAoP,MAAA9J,KAAA+J,0BACfrP,EAAS,gDAH3DA,EAAU,IAAoD,GAAAD,IAAAuP,EAAAR,kBAAA9O,EAAc,GAAA,IAAO,IAAM,gBAE1EuP,GAAA,GAAAxP,GAAAiP,KAAAA,EAAA,UAAAhP,KAAWsL,iCACXiE,GAAA,GAAAxP,GAAAmP,KAAAA,EAAA,UAAAlP,KAAWsL,iCAJGiE,GAAA,GAAAxP,GAAAoP,KAAAA,EAAA,qBAAAnP,EAAW,GAAAqL,2BAA2BrL,KAAWsL,mOADzFtL,EAAU,GAAA,4gBAFgBA,EAAW,GAACmB,EAAC,IAAGnB,EAAW,GAACqG,EAAC,IAAGrG,EAAW,GAACxJ,EAAC,IAAGwJ,EAAa,GAAA,0CAF9FvG,EA4BMf,EAAAsU,EAAAtT,yBAbJjB,EAWOuU,EAAAwC,GAVL/W,EAME+W,EAAA9T,OADYsE,EAAW,WAEzBvH,EAES+W,EAAAC,uFAVqBzP,EAAY,oKAM5BA,EAAW,+CAnBIA,EAAW,GAACmB,EAAC,IAAGnB,EAAW,GAACqG,EAAC,IAAGrG,EAAW,GAACxJ,EAAC,IAAGwJ,EAAa,GAAA,oJAzExFoI,EACA5B,EACAoD,EACA8F,mBANOC,GAAejK,EAEtBkK,EAAc,GAMdC,EAAc,EAElBnH,GAASM,WAAWzO,IAClBqP,EAAerP,EAAKqP,iBACpBxB,EAAgB7N,EAAK6N,mBACrB5B,EAAcjM,EAAKiM,iBACnBkJ,EAAanV,EAAKmP,MAAMoG,MAAMzD,GAASA,EAAKG,WAAQ,QA4ClDuD,EAAS,CACX,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,UAEE,SAAAC,EAAWC,GACX,OAAAC,OAAOD,GAAQE,QAAQ,qBAAsBC,GAC3C,OAAAL,EAAUK,uFAlDA,KACnB1H,GAASjJ,QAAQ4Q,QACXC,EAAeD,EAAM3G,MAAMoG,MAAMzD,GAASA,EAAKG,kBACnD8D,EAAahW,KAAOoV,EAAWpV,KAC/BgW,EAAa/D,UAAYmD,EAAWnD,UACpC8D,EAAM3G,MAAY,IAAA2G,EAAM3G,OAExBG,GAAUwG,EAAM3G,OACT2G,CAAK,KAID,KACb3H,GAASjJ,QAAQ4Q,IACfA,EAAM3G,MAAMoG,MAAMzD,GAASA,EAAKG,WAAUA,UAAW,EACrD3C,GAAUwG,EAAM3G,OACT2G,MAIWzV,IAEhB,GADJA,EAAM2V,iBACc,KAAhBX,EAAkB,OACdY,EAAuB7J,GAAiBmJ,MAC3CW,GAASA,EAAKpW,OAASuP,IAGtB4G,EACFrZ,OAAOuZ,SAASC,OACdH,EAAqB3J,KAAOmJ,EAAWJ,IAKzCzY,OAAOuZ,SAASC,OACd,mCAAqCX,EAAWJ,mDA2CxCA,EAAWtK,KAAArO,kGCrGtB,MAAM2Z,GAAuBC,IAClC,MAAMC,EAAsB5J,GAAY4I,MAAM7I,GAAeA,EAAW5M,OAASwW,IACjF,IAAIE,EAAwB,OAI5B,OAHGD,IACDC,EAAwBD,EAAoB3J,QAEvC4J,CAAqB,EAGjBC,GAASC,GACV,MAAQ,GAAK,KAAOA,EAAM9P,GAAK,KAAO8P,EAAM5K,GAAK,GAAK4K,EAAMza,GAAG0a,SAAS,IAAIhF,MAAM,GAIjFiF,GAASC,IACpB,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACdlQ,EAAGoQ,SAASF,EAAO,GAAI,IACvBhL,EAAGkL,SAASF,EAAO,GAAI,IACvB7a,EAAG+a,SAASF,EAAO,GAAI,KACrB,IAAI,EAGGG,GAAqBC,IACK,IAAlCA,EAASC,YAAY,QACfD,EAASvF,MAAM,EAAGuF,EAASC,YAAY,SAGvCD,yJCUK,OAAAzR,MAAKuL,QA6BDvL,EAAI,IAACuL,SAAWvL,MAAK2J,MAAMxP,OAAS,EAACwX,UA7B7BC,wNA6DPC,EAAA7R,MAAK2J,2BAAVxP,OAAID,GAAA,8HA7BAe,EAAA+R,EAAA,QAAA8E,EAAA,SAAA9R,EAAK,IAAA2J,MAAMxP,QAAU,GAAK6F,EAAY,GAAGA,EAAe,GAAA,GAClD,mBAAAA,EAAW,GAAA,EAAI,GACf,gBAAAA,EACH,GAAA,eAAAA,aACPA,EAAa,IAAsB,kCAAnB,uBAChBA,EAAa,IAsBX,+CApBFA,KAAeA,EAAU,GACrBA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,UACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,cACA,kBACgB,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAEa,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAAgB6F,EAAe,GAAAA,EAAa,GAAAA,KAAe,EADtE,MAGEA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,UACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,cACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,kBACA,mDA1BlBV,EA0FMf,EAAAsU,EAAAtT,kFA5DGmY,EAAA7R,MAAK2J,cAAVxP,OAAID,GAAA,EAAA,gHAAJC,OA7BI,KAAA4F,GAAA+R,KAAAA,EAAA,SAAA9R,EAAK,IAAA2J,MAAMxP,QAAU,GAAK6F,EAAY,GAAGA,EAAe,GAAA,GAClD,mBAAAA,EAAW,GAAA,EAAI,GACf,gBAAAA,EACH,GAAA,eAAAA,aACPA,EAAa,IAAsB,kCAAnB,uBAChBA,EAAa,IAsBX,+CApBFA,KAAeA,EAAU,GACrBA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,UACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,cACA,kBACgB,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAEa,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAAgB6F,EAAe,GAAAA,EAAa,GAAAA,KAAe,EADtE,MAGEA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,UACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,cACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,kBACA,oHA/BQ,SAAvB6F,EAAI,IAACmL,cAA2BnL,MAAKoL,SAAW,IAAE,oCAtB7CnQ,EAAA1E,EAAA,OAAAwb,EAAA/R,MAAK6G,+CAEC5L,EAAA1E,EAAA,aAAAyb,EAAAhS,MAAK6G,qBAEU,WAAvB7G,EAAI,IAACmL,eAA8BjB,GAAalK,EAAI,IAAC6G,MACnD,0BAA4BqD,GAAalK,MAAK6G,OAAS,IAAM,IACtC,SAAvB7G,EAAI,IAACmL,cACH,mDAAqDqG,GAAkBxR,EAAK,IAAAiL,WAAa,UACzF,2BAEajL,EAAI,IAACqL,gBAChB,YAAArL,MAAKsL,UAAS,gBACVtL,EAAgB,IAAuB,GAAvBA,MAAKoL,SAASjR,QAAgB,IAAM,IAA6B,GAAvB6F,EAAK,IAAAoL,SAASjR,QAAY,mBACpF6F,EAAQ,GAAG,EAAI,GACf,gBAAAA,oBACHA,EAAU,GAAA,eACVA,EAAU,GAAA,gBAAeA,EAAgB,GAAAmB,EAAI,IAAAnB,KAAgBqG,EAAC,IAAGrG,EAAe,GAACxJ,EAC1E,qBAAAwJ,EACf,GAAA,QAAAA,KAAaA,EAAY,GAAG,8BAAgC,IAC3D,KAAAA,EAAW,GAA+B,GAA/B,uCApBjBvG,EAwBIf,EAAAnC,EAAAmD,sCADsB,SAAvBsG,EAAI,IAACmL,cAA2BnL,MAAKoL,SAAW,IAAE,KAAA7P,EAAA0W,EAAAC,GAtB7C,EAAAnS,GAAAgS,KAAAA,EAAA/R,MAAK6G,qBAEC,EAAA9G,GAAAiS,KAAAA,EAAAhS,MAAK6G,0CAEU,WAAvB7G,EAAI,IAACmL,eAA8BjB,GAAalK,EAAI,IAAC6G,MACnD,0BAA4BqD,GAAalK,MAAK6G,OAAS,IAAM,IACtC,SAAvB7G,EAAI,IAACmL,cACH,mDAAqDqG,GAAkBxR,EAAK,IAAAiL,WAAa,UACzF,2BAEajL,EAAI,IAACqL,gBAChB,YAAArL,MAAKsL,UAAS,gBACVtL,EAAgB,IAAuB,GAAvBA,MAAKoL,SAASjR,QAAgB,IAAM,IAA6B,GAAvB6F,EAAK,IAAAoL,SAASjR,QAAY,mBACpF6F,EAAQ,GAAG,EAAI,GACf,gBAAAA,oBACHA,EAAU,GAAA,eACVA,EAAU,GAAA,gBAAeA,EAAgB,GAAAmB,EAAI,IAAAnB,KAAgBqG,EAAC,IAAGrG,EAAe,GAACxJ,EAC1E,qBAAAwJ,EACf,GAAA,QAAAA,KAAaA,EAAY,GAAG,8BAAgC,IAC3D,KAAAA,EAAW,GAA+B,GAA/B,+FA8FkB,SAA1BA,EAAO,IAACmL,cAA2BnL,MAAQoL,SAAW,IAAE,8BArDnDnQ,EAAA1E,EAAA,OAAAwb,EAAA/R,MAAQ6G,+CAEF5L,EAAA1E,EAAA,aAAAyb,EAAAhS,MAAQ6G,qBAEU,WAA1B7G,EAAO,IAACmL,eAA8BjB,GAAalK,EAAO,IAAC6G,MACzD,0BAA4BqD,GAAalK,MAAQ6G,OAAS,IAAM,IACtC,SAA1B7G,EAAO,IAACmL,cACN,mDAAqDqG,GAAkBxR,EAAQ,IAAAiL,WAAa,UAC5F,2BAEajL,EAAO,IAACqL,gBACnB,YAAArL,MAAQsL,UAAS,gBAEvBtL,EACG,IAA0B,GAA1BA,MAAQoL,SAASjR,QAAgB,IAAM,IAAgC,GAA1B6F,EAAQ,IAAAoL,SAASjR,SAE/D6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,IACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,IACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,IACA,KAGD,eAAA6F,EAAyB,GAAA,gBAAAA,EAAgB,GAAAmB,EAAI,IAAAnB,EAAgB,GAAAqG,EAAI,IAAArG,EAAgB,GAAAxJ,EAC1E,qBAAAwJ,EAEf,IAAA,yBAAAA,KAAaA,EAAY,GAAG,8BAAgC,SAC3DA,EAAQ,GAAmC,GAAhC,oCACZA,EAAa,oFAGVA,KAAeA,EAAU,GACvBA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,OACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAI,IAAC2J,MAAMxP,QAAU,GACnB,MACA,MACgB,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAAgB6F,EAAe,GAAAA,EAAa,GAAAA,KAAe,EACpE,OACAA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAI,IAAC2J,MAAMxP,QAAU,GACnB,MACA,iCAEV,aApDRV,EAuDIf,EAAAnC,EAAAmD,+BADyB,SAA1BsG,EAAO,IAACmL,cAA2BnL,MAAQoL,SAAW,IAAE,KAAA7P,EAAAwB,EAAAoV,GArDnD,EAAApS,GAAAgS,KAAAA,EAAA/R,MAAQ6G,qBAEF,EAAA9G,GAAAiS,KAAAA,EAAAhS,MAAQ6G,2CAEU,WAA1B7G,EAAO,IAACmL,eAA8BjB,GAAalK,EAAO,IAAC6G,MACzD,0BAA4BqD,GAAalK,MAAQ6G,OAAS,IAAM,IACtC,SAA1B7G,EAAO,IAACmL,cACN,mDAAqDqG,GAAkBxR,EAAQ,IAAAiL,WAAa,UAC5F,2BAEajL,EAAO,IAACqL,gBACnB,YAAArL,MAAQsL,UAAS,gBAEvBtL,EACG,IAA0B,GAA1BA,MAAQoL,SAASjR,QAAgB,IAAM,IAAgC,GAA1B6F,EAAQ,IAAAoL,SAASjR,SAE/D6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,IACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,IACA6F,EAAK,IAAA2J,MAAMxP,QAAU,GACnB,IACA,KAGD,eAAA6F,EAAyB,GAAA,gBAAAA,EAAgB,GAAAmB,EAAI,IAAAnB,EAAgB,GAAAqG,EAAI,IAAArG,EAAgB,GAAAxJ,EAC1E,qBAAAwJ,EAEf,IAAA,yBAAAA,KAAaA,EAAY,GAAG,8BAAgC,SAC3DA,EAAQ,GAAmC,GAAhC,oCACZA,EAAa,oFAGVA,KAAeA,EAAU,GACvBA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,OACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAI,IAAC2J,MAAMxP,QAAU,GACnB,MACA,MACgB,IAAtB6F,EAAK,IAAA2J,MAAMxP,QAAgB6F,EAAe,GAAAA,EAAa,GAAAA,KAAe,EACpE,OACAA,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAK,IAAA2J,MAAMxP,QAAU,EACnB,MACA6F,EAAI,IAAC2J,MAAMxP,QAAU,GACnB,MACA,iCAEV,0DArDLiY,EAAApS,MAAQkL,UAAQmH,GAAArS,kEAAhBA,MAAQkL,0HA/DhBkH,EAAApS,MAAKkL,UAAQ0B,GAAA5M,kEAAbA,MAAKkL,gIADLlL,EAAK,wBAAV7F,OAAID,GAAA,sJAD0B8F,EAAO,GAAA,kFAF7CvG,EAqIMf,EAAA4Z,EAAA5Y,GApIJjB,EAmIM6Z,EAAA7F,GAlIJhU,EAiIMgU,EAAAC,+EAhIG1M,EAAK,WAAV7F,OAAID,GAAA,EAAA,mHAAJC,uBAD8B6F,EAAO,GAAA,4DA/BvCiG,EACAC,EACA6B,EACAC,EACAC,EACAC,EACA/B,EACAC,EACA+B,EACA7B,EACAC,EAXAoD,EAAK,UAaTjB,GAASM,WAAWzO,QAClBoP,EAAQpP,EAAKoP,WACb1D,EAAW1L,EAAK0L,cAChBC,EAAW3L,EAAK2L,cAChB6B,EAAexN,EAAKwN,kBACpBC,EAAazN,EAAKyN,gBAClBC,EAAU1N,EAAK0N,aACfC,EAAa3N,EAAK2N,gBAClB/B,EAAmB5L,EAAK4L,sBACxBC,EAAkB7L,EAAK6L,qBACvB+B,EAAe5N,EAAK4N,mBACpB7B,EAAwB/L,EAAK+L,4BAC7BC,EAAgBhM,EAAKgM,cAAa,6OCkiB9B9M,EAAgEf,EAAA6Z,EAAA7Y,usBAD7DsG,EAAe,IAAA4M,29cAthB2B5Q,EAAAwW,EAAA,eAAAxS,KAAasI,yWAhBlE7O,EAAgBf,EAAA+Z,EAAA/Y,YAChBD,EAwjBOf,EAAA8W,EAAA9V,GAziBLjB,EAghBM+W,EAAAgD,GA/gBJ/Z,EAkBM+Z,EAAAF,GAjBJ7Z,EAEM6Z,EAAA5F,UACNjU,EAAK6Z,EAAAI,UACLja,EAYM6Z,EAAA7F,GAXJhU,EAA2CgU,EAAAkG,UAC3Cla,EASEgU,EAAAmG,GAJYnX,EAAAmX,EAAA5S,KAAa8F,iBAQ/BrN,EAkBM+Z,EAAAK,GAjBJpa,EAEMoa,EAAAC,UACNra,EAAKoa,EAAAE,UACLta,EAYMoa,EAAAG,GAXJva,EAA6Cua,EAAAC,UAC7Cxa,EASEua,EAAAE,GAJcA,EAAA3E,QAAAvO,KAAasJ,iBAQjC7Q,EAkBM+Z,EAAAW,GAjBJ1a,EAEM0a,EAAAC,UACN3a,EAAK0a,EAAAE,UACL5a,EAYM0a,EAAAG,GAXJ7a,EAAyD6a,EAAAC,UACzD9a,EASE6a,EAAAE,GAJcA,EAAAjF,QAAAvO,KAAa+F,uBAQjCtN,EAkBM+Z,EAAAiB,GAjBJhb,EAEMgb,EAAAC,UACNjb,EAAKgb,EAAAE,UACLlb,EAYMgb,EAAAG,GAXJnb,EAAkDmb,EAAAC,WAClDpb,EASEmb,EAAAE,IAJcA,GAAAvF,QAAAvO,KAAauJ,oBAQjC9Q,EAkBM+Z,EAAAuB,IAjBJtb,EAEMsb,GAAAC,aACNvb,EAAKsb,GAAAE,aACLxb,EAYMsb,GAAAG,IAXJzb,EAA6Cyb,GAAAC,aAC7C1b,EASEyb,GAAAE,eAJcpU,EAAQ,WAQ5BvH,EAkBM+Z,EAAA6B,IAjBJ5b,EAEM4b,GAAAC,aACN7b,EAAK4b,GAAAE,aACL9b,EAYM4b,GAAAG,IAXJ/b,EAAoD+b,GAAAC,aACpDhc,EASE+b,GAAAE,IAJcA,GAAAnG,QAAAvO,KAAaiG,iBAQjCxN,EAkBM+Z,EAAAmC,IAjBJlc,EAEMkc,GAAAC,aACNnc,EAAKkc,GAAAE,aACLpc,EAYMkc,GAAAG,IAXJrc,EAAiDqc,GAAAC,aACjDtc,EASEqc,GAAAE,IAJcA,GAAAzG,QAAAvO,KAAakG,iBAQjCzN,EAkCM+Z,EAAAyC,IAjCJxc,EAEMwc,GAAAC,aACNzc,EAAKwc,GAAAE,aACL1c,EA4BMwc,GAAAG,IA3BJ3c,EAA4D2c,GAAAC,aAC5D5c,EAyBM2c,GAAAE,IAxBJ7c,EAUE6c,GAAAC,IAJY9Z,EAAA8Z,GAAAvV,KAAa+H,uBAK3BtP,EAYE6c,GAAAE,IAJY/Z,EAAA+Z,GAAAxV,KAAa+H,sBASjCtP,EAkCM+Z,EAAAiD,IAjCJhd,EAEMgd,GAAAC,aACNjd,EAAKgd,GAAAE,aACLld,EA4BMgd,GAAAG,IA3BJnd,EAA+Cmd,GAAAC,aAC/Cpd,EAyBMmd,GAAAE,IAxBJrd,EAUEqd,GAAAC,IAJYta,EAAAsa,GAAA/V,KAAagI,qBAK3BvP,EAYEqd,GAAAE,IAJYva,EAAAua,GAAAhW,KAAagI,oBASjCvP,EAkCM+Z,EAAAyD,IAjCJxd,EAEMwd,GAAAC,aACNzd,EAAKwd,GAAAE,aACL1d,EA4BMwd,GAAAG,IA3BJ3d,EAAyC2d,GAAAC,aACzC5d,EAyBM2d,GAAAE,IAxBJ7d,EAUE6d,GAAAC,IAJY9a,EAAA8a,GAAAvW,KAAaiI,kBAK3BxP,EAYE6d,GAAAE,IAJY/a,EAAA+a,GAAAxW,KAAaiI,iBASjCxP,EAkCM+Z,EAAAiE,IAjCJhe,EAEMge,GAAAC,aACNje,EAAKge,GAAAE,aACLle,EA4BMge,GAAAG,IA3BJne,EAA4Dme,GAAAC,aAC5Dpe,EAyBMme,GAAAE,IAxBJre,EAUEqe,GAAAC,IAJYtb,EAAAsb,GAAA/W,KAAamG,2BAK3B1N,EAYEqe,GAAAE,IAJYvb,EAAAub,GAAAhX,KAAamG,0BASjC1N,EAkCM+Z,EAAAyE,IAjCJxe,EAEMwe,GAAAC,aACNze,EAAKwe,GAAAE,aACL1e,EA4BMwe,GAAAG,IA3BJ3e,EAAoD2e,GAAAC,aACpD5e,EAyBM2e,GAAAE,IAxBJ7e,EAUE6e,GAAAC,IAJY9b,EAAA8b,GAAAvX,KAAakI,qBAK3BzP,EAYE6e,GAAAE,IAJY/b,EAAA+b,GAAAxX,KAAakI,oBASjCzP,EAkBM+Z,EAAAiF,IAjBJhf,EAEMgf,GAAAC,aACNjf,EAAKgf,GAAAE,aACLlf,EAYMgf,GAAAG,IAXJnf,EAA0Dmf,GAAAC,aAC1Dpf,EASEmf,GAAAE,SAJY9X,EAAe,YAQjCvH,EAkBM+Z,EAAAuF,IAjBJtf,EAEMsf,GAAAC,aACNvf,EAAKsf,GAAAE,aACLxf,EAYMsf,GAAAG,IAXJzf,EAA4Dyf,GAAAC,aAC5D1f,EASEyf,GAAAE,IAJcA,GAAA7J,QAAAvO,KAAauG,sBAQjC9N,EAkCM+Z,EAAA6F,IAjCJ5f,EAEM4f,GAAAC,aACN7f,EAAK4f,GAAAE,aACL9f,EA4BM4f,GAAAG,IA3BJ/f,EAAoD+f,GAAAC,aACpDhgB,EAyBM+f,GAAAE,IAxBJjgB,EAUEigB,GAAAC,IAJYld,EAAAkd,GAAA3Y,KAAamI,uBAK3B1P,EAYEigB,GAAAE,IAJYnd,EAAAmd,GAAA5Y,KAAamI,sBASjC1P,EAkCM+Z,EAAAqG,IAjCJpgB,EAEMogB,GAAAC,aACNrgB,EAAKogB,GAAAE,aACLtgB,EA4BMogB,GAAAG,IA3BJvgB,EAAuEugB,GAAAC,aACvExgB,EAyBMugB,GAAAE,IAxBJzgB,EAUEygB,GAAAC,IAJY1d,EAAA0d,GAAAnZ,KAAasG,gCAK3B7N,EAYEygB,GAAAE,IAJY3d,EAAA2d,GAAApZ,KAAasG,+BASjC7N,EAkCM+Z,EAAA6G,IAjCJ5gB,EAEM4gB,GAAAC,aACN7gB,EAAK4gB,GAAAE,aACL9gB,EA4BM4gB,GAAAG,IA3BJ/gB,EAAqD+gB,GAAAC,aACrDhhB,EAyBM+gB,GAAAE,IAxBJjhB,EAUEihB,GAAAC,IAJYle,EAAAke,GAAA3Z,KAAaoI,wBAK3B3P,EAYEihB,GAAAE,IAJYne,EAAAme,GAAA5Z,KAAaoI,uBASjC3P,EAkBM+Z,EAAAqH,IAjBJphB,EAEMohB,GAAAC,aACNrhB,EAAKohB,GAAAE,aACLthB,EAYMohB,GAAAG,IAXJvhB,EAAiDuhB,GAAAC,aACjDxhB,EASEuhB,GAAAE,SAJYla,EAAW,YAQ7BvH,EAkBM+Z,EAAA2H,IAjBJ1hB,EAEM0hB,GAAAC,aACN3hB,EAAK0hB,GAAAE,aACL5hB,EAYM0hB,GAAAG,IAXJ7hB,EAA+C6hB,GAAAC,aAC/C9hB,EASE6hB,GAAAE,SAJYxa,EAAU,YAQ5BvH,EAkBM+Z,EAAAiI,IAjBJhiB,EAEMgiB,GAAAC,aACNjiB,EAAKgiB,GAAAE,aACLliB,EAYMgiB,GAAAG,IAXJniB,EAAwDmiB,GAAAC,aACxDpiB,EASEmiB,GAAAE,SAJY9a,EAAc,YASlCvH,EAsBM+W,EAAAuL,IArBJtiB,EAMMsiB,GAAAC,IALJviB,EAA8DuiB,GAAAjM,wCAOhEtW,EAYMsiB,GAAAE,IAXJxiB,EAUSwiB,GAAAhM,80CAzhBO,EAAAlP,EAAA,IAAA6S,EAAA3b,QAAA+I,KAAa8F,UAAbrK,EAAAmX,EAAA5S,KAAa8F,mBAoBXoN,EAAA3E,QAAAvO,KAAasJ,oBAoBbkK,EAAAjF,QAAAvO,KAAa+F,0BAoBb+N,GAAAvF,QAAAvO,KAAauJ,kCAoBbvJ,EAAQ,aAoBR0U,GAAAnG,QAAAvO,KAAaiG,mBAoBb+O,GAAAzG,QAAAvO,KAAakG,kBAsBbzK,EAAA8Z,GAAAvV,KAAa+H,cAab,EAAAhI,EAAA,IAAAzE,EAAAka,GAAAve,SAAA+I,KAAa+H,cAAbtM,EAAA+Z,GAAAxV,KAAa+H,sBAuBbtM,EAAAsa,GAAA/V,KAAagI,YAab,EAAAjI,EAAA,IAAAzE,EAAA0a,GAAA/e,SAAA+I,KAAagI,YAAbvM,EAAAua,GAAAhW,KAAagI,oBAuBbvM,EAAA8a,GAAAvW,KAAaiI,SAab,EAAAlI,EAAA,IAAAzE,EAAAkb,GAAAvf,SAAA+I,KAAaiI,SAAbxM,EAAA+a,GAAAxW,KAAaiI,iBAuBbxM,EAAAsb,GAAA/W,KAAamG,kBAab,EAAApG,EAAA,IAAAzE,EAAA0b,GAAA/f,SAAA+I,KAAamG,kBAAb1K,EAAAub,GAAAhX,KAAamG,0BAuBb1K,EAAA8b,GAAAvX,KAAakI,YAab,EAAAnI,EAAA,IAAAzE,EAAAkc,GAAAvgB,SAAA+I,KAAakI,YAAbzM,EAAA+b,GAAAxX,KAAakI,0BAqBflI,EAAe,aAoBboY,GAAA7J,QAAAvO,KAAauG,uBAsBb9K,EAAAkd,GAAA3Y,KAAamI,cAab,EAAApI,EAAA,IAAAzE,EAAAsd,GAAA3hB,SAAA+I,KAAamI,cAAb1M,EAAAmd,GAAA5Y,KAAamI,sBAuBb1M,EAAA0d,GAAAnZ,KAAasG,uBAab,EAAAvG,EAAA,IAAAzE,EAAA8d,GAAAniB,SAAA+I,KAAasG,uBAAb7K,EAAA2d,GAAApZ,KAAasG,+BAuBb7K,EAAAke,GAAA3Z,KAAaoI,eAab,EAAArI,EAAA,IAAAzE,EAAAse,GAAA3iB,SAAA+I,KAAaoI,eAAb3M,EAAAme,GAAA5Z,KAAaoI,6BAqBfpI,EAAW,mBAoBXA,EAAU,mBAoBVA,EAAc,YAzgBiBhE,EAAAwW,EAAA,eAAAxS,KAAasI,UAshBvDtI,EAAe,+JA5jBbkb,GAAYxV,gBACZyV,GAAYzV,gBACZ0V,GAAY1V,mBACZ2V,GAAe3V,EAGtB4C,EAAW4S,EAAa5S,SAExBlC,EAAkB4K,GAAMkK,EAAa9U,iBACrCI,EAAcwK,GAAMkK,EAAa1U,aACjCC,EAAauK,GAAMkK,EAAazU,YAChCC,EAAiBsK,GAAMkK,EAAaxU,sBAElC4U,EAAiB,SACrBhT,EAAW4S,EAAa5S,UACxByE,EAAA,EAAA3G,EAAkB4K,GAAMkK,EAAa9U,kBACrC2G,EAAA,EAAAvG,EAAcwK,GAAMkK,EAAa1U,cACjCuG,EAAA,EAAAtG,EAAauK,GAAMkK,EAAazU,aAChCsG,EAAA,EAAArG,EAAiBsK,GAAMkK,EAAaxU,gBAAc,oOAiChCwU,EAAapV,SAAQR,KAAArO,mBAE/B8V,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAa5R,UAAShE,KAAAiJ,qBAElCxB,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAanV,gBAAeT,KAAAiJ,qBAExCxB,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAa3R,YAAWjE,KAAAiJ,qBAEpCxB,EAAA,EAAAsO,GAAkB,EAAI,aAkBV/S,EAAQhD,KAAAiJ,qBAEpBxB,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAajV,SAAQX,KAAAiJ,qBAEjCxB,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAahV,SAAQZ,KAAAiJ,qBAEjCxB,EAAA,EAAAsO,GAAkB,EAAI,aAoBVH,EAAanT,aAAYzM,EAAAgK,KAAArO,oBAEnC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAanT,aAAYzM,EAAAgK,KAAArO,oBAEnC8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAalT,WAAU1M,EAAAgK,KAAArO,oBAEjC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAalT,WAAU1M,EAAAgK,KAAArO,oBAEjC8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAajT,QAAO3M,EAAAgK,KAAArO,oBAE9B8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAajT,QAAO3M,EAAAgK,KAAArO,oBAE9B8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAa/U,iBAAgB7K,EAAAgK,KAAArO,oBAEvC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAa/U,iBAAgB7K,EAAAgK,KAAArO,oBAEvC8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAahT,WAAU5M,EAAAgK,KAAArO,oBAEjC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAahT,WAAU5M,EAAAgK,KAAArO,oBAEjC8V,EAAA,EAAAsO,GAAkB,EAAI,aAmBdjV,EAAed,KAAArO,mBAEzB8V,EAAA,EAAAsO,GAAkB,EAAI,aAkBVH,EAAa3U,cAAajB,KAAAiJ,qBAEtCxB,EAAA,EAAAsO,GAAkB,EAAI,aAoBVH,EAAa/S,aAAY7M,EAAAgK,KAAArO,oBAEnC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAa/S,aAAY7M,EAAAgK,KAAArO,oBAEnC8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAa5U,sBAAqBhL,EAAAgK,KAAArO,oBAE5C8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAa5U,sBAAqBhL,EAAAgK,KAAArO,oBAE5C8V,EAAA,EAAAsO,GAAkB,EAAI,aAqBZH,EAAa9S,cAAa9M,EAAAgK,KAAArO,oBAEpC8V,EAAA,EAAAsO,GAAkB,EAAI,aAWZH,EAAa9S,cAAa9M,EAAAgK,KAAArO,oBAEpC8V,EAAA,EAAAsO,GAAkB,EAAI,aAmBd7U,EAAWlB,KAAArO,mBAErB8V,EAAA,EAAAsO,GAAkB,EAAI,aAkBZ5U,EAAUnB,KAAArO,mBAEpB8V,EAAA,EAAAsO,GAAkB,EAAI,aAkBZ3U,EAAcpB,KAAArO,mBAExB8V,EAAA,EAAAsO,GAAkB,EAAI,OAqBxBD,IACAE,IACAvO,EAAA,EAAAsO,GAAkB,EAAK,EA/iBnBza,IAEVmM,EAAA,EAAAmO,EAAa9U,gBAAkB+K,GAAM/K,GAAe8U,GACpDnO,EAAA,EAAAmO,EAAa1U,YAAc2K,GAAM3K,GAAW0U,GAC5CnO,EAAA,EAAAmO,EAAazU,WAAa0K,GAAM1K,GAAUyU,GAC1CnO,EAAA,EAAAmO,EAAaxU,eAAiByK,GAAMzK,GAAcwU,OAElDA,EAAa5S,SAAWA,EAAQ4S,GAEhCC,EAAaD,EAActa,GAC3BmM,EAAA,EAAAsO,GAAkB,EAAK,ggBCvB3B5hB,EAiBMf,EAAAsU,EAAAtT,GAhBJjB,EAAgCuU,EAAAuO,UAChC9iB,EAOSuU,EAAAyC,UACThX,EAMEuU,EAAAtR,sIA7BEmV,EAAI2K,oBADGC,GAAgB/V,EAGrB,MAAAgW,EAAkB9a,IAClB,IAAAqJ,EAAQrJ,EAAElI,OAAOijB,MAAM,GACvBC,MAAaC,WACjBD,EAAOE,cAAc7R,GACrB2R,EAAOG,OAAUnb,IACfiQ,EAAKjQ,EAAElI,OAAO2Y,OACdoK,EAAiB5K,EAAE,qFAUnB2K,EAAUQ,OAAK,EASLpb,GAAM8a,EAAe9a,2CACtB4a,EAASS,mRCqBZjc,EAAe,GAAC7F,OAAS,EAAI6F,EAAe,GAAGA,EAAkB,KAAA/E,EAAA8L,EAAA,MAAAmV,wEADzEziB,EAGEf,EAAAqO,EAAArN,6BAFMsG,EAAe,GAAC7F,OAAS,EAAI6F,EAAe,GAAGA,EAAkB,6KAuBrEvG,EAOSf,EAAA+W,EAAA/V,oOAiBfD,EAEQf,EAAA6Z,EAAA7Y,wCAUC0Y,EAAApS,EAAG,IAAAoH,SAAWpH,MAAO3F,oGAGc3D,EAAAqQ,EAAAoV,IAAAD,EAAA,+BAAAlc,EAAG,IAAA3F,KAAO,IAAA2F,MAAGmH,SAAMlM,EAAA8L,EAAA,MAAAmV,GACpCjhB,EAAA8L,EAAA,MAAAqV,EAAA,eAAApc,MAAQ,iIAH7BvG,EAOMf,EAAAsU,EAAAtT,GANJjB,EAKEuU,EAAAjG,mEAPwB6F,CAAA5M,kEAAzBA,EAAG,IAAAoH,SAAWpH,MAAO3F,MAAI+X,EAAAtV,EAAAkD,EAAAD,gEAJsB6O,EAAA5O,MAAO4G,MAAK,KAG3DM,wBAAL/M,OAAID,GAAA,iDAJD,8GACmCe,EAAA1E,EAAA,OAAAwb,EAAA/R,MAAOpJ,8DADjD6C,EAEQf,EAAA6Z,EAAA7Y,UADwBjB,EAAyC8Z,EAAAhc,mBAEzEkD,EAaMf,EAAAsU,EAAAtT,oFAZGwN,WAAL/M,OAAID,GAAA,EAAA,gHAAJC,iJA5DI6F,EAAiB,IAAAqS,GAAArS,6CAwBhB,IAAAqc,IAAArc,OAAgCA,EAAiB,KAAA2R,GAAA3R,MAwBvDA,EAAoB,IAAA4R,YAOd5R,EAAiB,4BAA1B7F,OAAID,GAAA,2aAboB8F,EAAqB,QAAC,2SA9CpCA,EAAiB,GACvB,kDAAoDA,EAAyB,GAAG,IAChF,6eA2CqG,IAAtBA,EAAqB,GAAK,mCAAtEhE,EAAA6W,EAAA,SAAA7S,KAAwB,2QAlDjEvG,EAAmBf,EAAA4jB,EAAA5iB,YACnBD,EAeMf,EAAA+T,EAAA/S,GAdJjB,EAAiCgU,EAAA8P,UACjC9jB,EAYMgU,EAAAC,2BAGRjT,EA2BMf,EAAAsa,EAAAtZ,uBAzBJjB,EAwBMua,EAAAF,GAvBJra,EAAgCqa,EAAA0J,UAChC/jB,EAqBMqa,EAAAR,GApBJ7Z,EASE6Z,EAAA5W,OAJYsE,EAAuB,qCAmB3CvG,EASMf,EAAA4a,EAAA5Z,GARJjB,EAAkC6a,EAAAf,UAClC9Z,EAGM6a,EAAAF,GAFJ3a,EAAuH2a,EAAAP,UACvHpa,EAA6D2a,EAAAtW,wBAE/DrE,EAES6a,EAAA7D,mCAQXhW,EAAgBf,EAAA+jB,EAAA/iB,qJAtDNsG,EAAiB,+EAJfA,EAAiB,GACvB,kDAAoDA,EAAyB,GAAG,IAChF,sFAqBcA,EAAuB,IAKhCA,OAAgCA,EAAiB,kGAiB+C,IAAtBA,EAAqB,GAAK,8BAAtEhE,EAAA6W,EAAA,SAAA7S,KAAwB,oBACvCA,EAAqB,IAM1CA,EAAoB,4FAOdA,EAAiB,cAA1B7F,OAAID,GAAA,EAAA,qIAAJC,oQA/FI2N,EACA4U,EACAC,EACA9U,oBANO4T,GAAgB/V,yBAChBkX,GAAqBlX,EAM5BmX,GAA8B,EAC9BC,MAAwBnlB,IAExBolB,OAA6BC,KAAKjnB,OAAOknB,OAAO7T,eAAenR,KAAO,KAAO,MAAMilB,QAAQ,GAC3FC,GAAuB,EAG3BjW,GAAY/Q,SAAS0a,IAChBxJ,GAAc9J,IAAIsT,EAAGzJ,SACtB0V,EAAkBvkB,IAAI8O,GAAc9J,IAAIsT,EAAGzJ,YAI/CsB,GAASM,WAAWzO,QAClBuN,EAAkBvN,EAAKuN,qBACvB4U,EAA4BniB,EAAKyL,0BACjC2W,EAA0BpiB,EAAKyL,0BAC/B6B,EAAoBtN,EAAKsN,kBAAiB,qKAG3CkF,EAAA,EAAEqQ,EAAqB,+BAAiCtV,EAAkB,IAAM8I,GAAoB9I,kBAC9FA,GAELiF,EAAA,EAAAgQ,OAA6BC,KAAKjnB,OAAOknB,OAAO7T,eAAenR,KAAO,KAAO,MAAMilB,QAAQ,uCAgC3EP,EAAuBrX,KAAArO,mBAEjC8V,EAAA,EAAA8P,GAA8B,EAAI,OAOhC9P,EAAA,EAAA8P,GAA8B,GAC9BD,EAAsBD,EAAuB,OAeF5P,EAAA,EAAAoQ,GAAwBA,EAAoB,KAuBvE1B,EAAiB5K,EAAGxW,sLC7BZ,WAAvB2F,EAAI,GAACmL,eAA8BjB,GAAalK,EAAI,GAAC6G,mBAmBrD7G,EAAoB,IAAAqS,iRANCrS,EAAqB,QAAC,sVAD2D,IAAtBA,EAAqB,GAAK,mCAAtEhE,EAAA0Q,EAAA,SAAA1M,KAAwB,sQA9BnEvG,EA0CMf,EAAAoa,EAAApZ,GAzCJjB,EAAgCqa,EAAAyI,UAChC9iB,EAOSqa,EAAA/D,UACTtW,EAMEqa,EAAApX,yCAWFjD,EASMqa,EAAAR,GARJ7Z,EAAkC6Z,EAAAC,UAClC9Z,EAGM6Z,EAAA7F,GAFJhU,EAAuHgU,EAAAC,UACvHjU,EAA6DgU,EAAA3P,wBAE/DrE,EAES6Z,EAAArD,iHAjBiB,WAAvBjP,EAAI,GAACmL,eAA8BjB,GAAalK,EAAI,GAAC6G,uFAYiD,IAAtB7G,EAAqB,GAAK,4BAAtEhE,EAAA0Q,EAAA,SAAA1M,KAAwB,aACvCA,EAAqB,IAM1CA,EAAoB,wPAlBvBvG,EAKSf,EAAA+W,EAAA/V,qBAHGsG,EAAa,4MAiBzBvG,EAEQf,EAAA6Z,EAAA7Y,kiBAiBE,oJASA,8IASA,2EA7BdD,EA+BMf,EAAAsU,EAAAtT,GA9BJjB,EAAiBuU,EAAAuO,UACjB9iB,EAAgBuU,EAAAqQ,UAChB5kB,EASEuU,EAAA4F,GALYnX,EAAAmX,EAAA5S,KAAKoL,iBAMnB3S,EAAuBuU,EAAAsQ,UACvB7kB,EAOEuU,EAAAkG,GAHYzX,EAAAyX,EAAAlT,KAAKqL,wBAInB5S,EAAiBuU,EAAAuQ,UACjB9kB,EAOEuU,EAAAwG,GAHY/X,EAAA+X,EAAAxT,KAAKsL,sJApBL,EAAAvL,GAAA6S,EAAA3b,QAAA+I,KAAKoL,UAAL3P,EAAAmX,EAAA5S,KAAKoL,eAWL3P,EAAAyX,EAAAlT,KAAKqL,sBASL5P,EAAA+X,EAAAxT,KAAKsL,wKAsCnB7R,EAA4Ef,EAAA6Z,EAAA7Y,qGATtD,SAAvBsG,EAAI,GAACmL,cAA2BnL,KAAKoL,SAAW,IAAE,KAvGzB,WAAvBpL,EAAI,GAACmL,eAA0BwG,GAAA3R,KA8CR,SAAvBA,EAAI,GAACmL,eAAwByG,GAAA5R,KAiE3BA,EAAY,IAAA4M,mHAhIhB,sCAMA,kCAMA,0OAdgD,eAAvB5M,EAAI,GAACmL,cAAiC,iBAAmB,IAAE,oDAMpC,WAAvBnL,EAAI,GAACmL,cAA6B,iBAAmB,IAAE,oDAMhC,SAAvBnL,EAAI,GAACmL,cAA2B,iBAAmB,IAAE,uHA6FpD,WAAvBnL,EAAI,GAACmL,eAA8BjB,GAAalK,EAAI,GAAC6G,MACnD,0BAA4BqD,GAAalK,KAAK6G,OAAS,IAAM,IACtC,SAAvB7G,EAAI,GAACmL,cACH,mDAAqDqG,GAAkBxR,EAAK,GAAAiL,WAAa,UACzF,IAAE,uBAEWjL,EAAK,GAAAqL,4BAChBrL,EAAI,GAACsL,UACD,gBAAAtL,KAAa+H,cAAuC,GAAvB/H,EAAK,GAAAoL,SAASjR,QAAgB,IAAM,IAA6B,GAAvB6F,EAAI,GAACoL,SAASjR,QAAY,cACrG6F,EAAa,GAAA+H,4BACZ/H,EAAY,GAACgI,WACb,eAAAhI,KAAakI,WAAU,gBAAelI,EAAY,GAACoG,gBAAgBjF,EAAI,IAAAnB,KAAaoG,gBAAgBC,EAAI,IAAArG,EAAa,GAAAoG,gBAAgB5P,uBAC9HwJ,EAAY,GAACmG,iBAC5B,QAAAnG,KAAagI,WAAahI,EAAY,GAAC+H,aAAe,8BAAgC,IAAE,KACvF/H,EAAY,GAACiG,SAA0C,GAA/B,qPA3HyBjK,EAAA8W,EAAA,eAAA9S,KAAasI,+FADxE7O,EA4IMf,EAAAsa,EAAAtZ,GA3IJjB,EA0IMua,EAAAF,GAzIJra,EAoBMqa,EAAApG,GAnBJjU,EAAwBiU,EAAA6P,UACxB9jB,EAKSiU,EAAAqC,iBACTtW,EAKSiU,EAAAuC,iBACTxW,EAKSiU,EAAA8Q,6DAoFX/kB,EAAgBqa,EAAA0J,UAChB/jB,EAsBMqa,EAAArG,iBACNhU,EASMqa,EAAAR,GARJ7Z,EAIS6Z,EAAAmL,gMAjIwC,eAAvBzd,EAAI,GAACmL,cAAiC,iBAAmB,IAAE,kEAMpC,WAAvBnL,EAAI,GAACmL,cAA6B,iBAAmB,IAAE,kEAMhC,SAAvBnL,EAAI,GAACmL,cAA2B,iBAAmB,IAAE,kCAOrD,WAAvBnL,EAAI,GAACmL,qEA8CkB,SAAvBnL,EAAI,GAACmL,kFAyDgB,SAAvBnL,EAAI,GAACmL,cAA2BnL,KAAKoL,SAAW,IAAE,KAAA7P,EAAAmiB,EAAAC,gBAjBxB,WAAvB3d,EAAI,GAACmL,eAA8BjB,GAAalK,EAAI,GAAC6G,MACnD,0BAA4BqD,GAAalK,KAAK6G,OAAS,IAAM,IACtC,SAAvB7G,EAAI,GAACmL,cACH,mDAAqDqG,GAAkBxR,EAAK,GAAAiL,WAAa,UACzF,IAAE,uBAEWjL,EAAK,GAAAqL,4BAChBrL,EAAI,GAACsL,UACD,gBAAAtL,KAAa+H,cAAuC,GAAvB/H,EAAK,GAAAoL,SAASjR,QAAgB,IAAM,IAA6B,GAAvB6F,EAAI,GAACoL,SAASjR,QAAY,cACrG6F,EAAa,GAAA+H,4BACZ/H,EAAY,GAACgI,WACb,eAAAhI,KAAakI,WAAU,gBAAelI,EAAY,GAACoG,gBAAgBjF,EAAI,IAAAnB,KAAaoG,gBAAgBC,EAAI,IAAArG,EAAa,GAAAoG,gBAAgB5P,uBAC9HwJ,EAAY,GAACmG,iBAC5B,QAAAnG,KAAagI,WAAahI,EAAY,GAAC+H,aAAe,8BAAgC,IAAE,KACvF/H,EAAY,GAACiG,SAA0C,GAA/B,+CAWvBjG,EAAY,yDAtIoChE,EAAA8W,EAAA,eAAA9S,KAAasI,gFAAqB1H,IAAQA,EAAEgd,0BAAwB,yBAjCzH/M,EAAI2K,QARGxP,GAAItG,gBACJwV,GAAYxV,gBACZmY,GAAYnY,GACZoY,YAAAA,GAAc,GAAKpY,EAE1BqX,OAA6BC,KAAKjnB,OAAOknB,OAAO7T,eAAenR,KAAO,KAAO,MAAMilB,QAAQ,GAC3FC,GAAuB,EAGrB,MAAAzB,EAAkB9a,IAClB,IAAAqJ,EAAQrJ,EAAElI,OAAOijB,MAAM,GACvBC,MAAaC,WACjBD,EAAOE,cAAc7R,GACrB2R,EAAOG,OAAUnb,IACfmM,EAAA,EAAA8D,EAAKjQ,EAAElI,OAAO2Y,YAGZrH,GAAcgC,EAAKnF,KAAMgK,OACzB7E,EAAKb,cAAgB,SAAQa,GAC7Be,EAAA,EAAA8Q,GAAe,SAEf9T,MACE,qTAYD8G,GAA6B,WAAvB7E,EAAKb,gBAEhB4B,EAAA,EAAAgQ,OAA6BC,KAAKjnB,OAAOknB,OAAO7T,eAAenR,KAAO,KAAO,MAAMilB,QAAQ,sBAR1E,KZqCU,IAACrW,IYpCZmF,EAAKnF,KZqCvBuC,aAAa2U,WAAWlX,OYpCtBmF,EAAKb,cAAgB,SAAQa,GAC7Be,EAAA,EAAA8Q,GAAe,EAAI,aAeG7R,EAAKb,cAAgB,aAAYa,GAAEe,EAAA,EAAA8Q,GAAe,EAAI,WAMtD7R,EAAKb,cAAgB,SAAQa,GAAEe,EAAA,EAAA8Q,GAAe,EAAI,WAMlD7R,EAAKb,cAAgB,OAAMa,GAAEe,EAAA,EAAA8Q,GAAe,EAAI,OAY9DrC,EAAUQ,OAAK,EASLpb,GAAM8a,EAAe9a,2CACtB4a,EAASS,kBAkBiClP,EAAA,EAAAoQ,GAAwBA,EAAoB,aAoBrFnR,EAAKZ,SAAQ9F,KAAArO,mBACN8V,EAAA,EAAA8Q,GAAe,EAAI,aAU1B7R,EAAKX,gBAAe/F,KAAArO,mBACb8V,EAAA,EAAA8Q,GAAe,EAAI,aAQ1B7R,EAAKV,UAAShG,KAAArO,mBACP8V,EAAA,EAAA8Q,GAAe,EAAI,EAiC7Bjd,IAAQA,EAAEgd,2BAA4B7Q,EAAA,EAAA+Q,GAAc,EAAK,EApInBld,IAAQA,EAAEgd,2BAA4B7Q,EAAA,EAAA+Q,GAAc,EAAK,4RCa5GrkB,EAAqCf,EAAA6Z,EAAA7Y,8nCA4DjB,8UA5CGiC,EAAAqX,EAAA,eAAAhT,QAAUA,EAAgB,IAAG,MAAQA,QAAUA,EAAgB,IAAG,UAAY,aAE3FrE,EAAAqX,EAAA,aAAAhT,QAAUA,EAAgB,IAAG,mDAC7BA,QAAUA,EAAgB,SACHoD,IAArBpD,EAAqB,KAAaA,MAAmBA,EAAK,IAC1D,qDACA,oDACF,qFAhBKA,EAAS,aAFtBvG,EAgFMf,EAAAma,EAAAnZ,GAxEJjB,EAuEMoa,EAAAG,GAzDJva,EA2CMua,EAAAV,GA1CJ7Z,EAMM6Z,EAAA5F,UACNjU,EAiBM6Z,EAAA7F,GAhBJhU,EAOSgU,EAAAsC,UACTtW,EAOSgU,EAAAwC,UAEXxW,EAgBE6Z,EAAAM,GAZYnX,EAAAmX,EAAA5S,MAAK6G,aAcrBpO,EAYMua,EAAAF,GAXJra,EAAiHqa,EAAAkL,UACjHvlB,EAA0Gqa,EAAAI,GAAzDA,EAAA3E,QAAAvO,MAAKkL,gBACtDzS,EAQEqa,EAAAU,kUAzBY,EAAAzT,EAAA,IAAA6S,EAAA3b,QAAA+I,MAAK6G,MAALpL,EAAAmX,EAAA5S,MAAK6G,eAgB8BqM,EAAA3E,QAAAvO,MAAKkL,sBAzDvCvP,EAAAqX,EAAA,eAAAhT,QAAUA,EAAgB,IAAG,MAAQA,QAAUA,EAAgB,IAAG,UAAY,yBAE3FrE,EAAAqX,EAAA,aAAAhT,QAAUA,EAAgB,IAAG,mDAC7BA,QAAUA,EAAgB,SACHoD,IAArBpD,EAAqB,KAAaA,MAAmBA,EAAK,IAC1D,qDACA,oDACF,oCAhBKA,EAAS,sMA6GxBvG,EAA2Ff,EAAA6Z,EAAA7Y,+YAN3E,yJApBhBD,EAwBMf,EAAAsU,EAAAtT,GAvBJjB,EAAqBuU,EAAAuO,UACrB9iB,EAqBOuU,EAAAwC,GAVL/W,EAQE+W,EAAA9T,OAJYsE,EAAY,YAK1BvH,EAAwD+W,EAAAC,qFAL1CzP,EAAY,SAAZA,EAAY,kKAmB5BvG,EAA4Ef,EAAA6Z,EAAA7Y,gHAOhEsG,EAAY,QACpBA,EAAK,GAAC2J,MAAM3J,EAAkB,kBACL,IAAZA,EAAY,oBAAZA,EAAY,SACG,IAAhBA,EAAgB,oBAAhBA,EAAgB,2LAHpBA,EAAY,wBACpBA,EAAK,GAAC2J,MAAM3J,EAAkB,uCACjBA,EAAY,sDACbA,EAAgB,mKA3I/BkS,EAAAlS,KAAM3F,KAAI,GAEV4jB,EAAuB,IAAvBje,EAAM,GAAA2J,MAAMxP,QAAYkY,KAKpB6L,EAAAle,KAAM2J,2BAAXxP,OAAID,GAAA,qCAqFH,OAAA8F,EAAM,GAAA2J,MAAMxP,OAAS,GAAEwX,0BAoCrB3R,EAAY,IAAA4R,OAMhB5R,EAAgB,KAAA4M,GAAA5M,ueAvIgChE,EAAAsW,EAAA,eAAAtS,KAAasI,2FADpE7O,EAgJMf,EAAAoa,EAAApZ,GA/IJjB,EAqIMqa,EAAAR,GApIJ7Z,EAAqB6Z,EAAA6L,uCAMrB1lB,EAoFM6Z,EAAA5F,wEAgCNjU,EASM6Z,EAAA7F,GARJhU,EAISgU,EAAAgD,qIA/HNF,GAAA,EAAAxP,EAAA,KAAAmS,KAAAA,EAAAlS,KAAM3F,KAAI,KAAAkB,EAAA0W,EAAAC,GAEa,IAAvBlS,EAAM,GAAA2J,MAAMxP,4EAKR+jB,EAAAle,KAAM2J,cAAXxP,OAAID,GAAA,EAAA,mHAAJC,oEAyHG6F,EAAY,4DAjIgChE,EAAAsW,EAAA,eAAAtS,KAAasI,UAuI7DtI,EAAgB,mOAxHEY,IAAQA,EAAE2P,gBAAc,KAfwC3P,IAAQA,EAAEgd,0BAAwB,yBAtCrHQ,EACAC,EACAC,SAdO7b,GAAKiD,gBACLwV,GAAYxV,cACZ6Y,GAAU7Y,WACV8Y,GAAO9Y,YACP+Y,GAAQ/Y,mBACRgZ,GAAehZ,gBACfiZ,GAAYjZ,cACZsK,GAAUtK,gBACVmY,GAAYnY,EACnBkZ,EAAe,GAEfC,GAAY,EAMZC,GAAmB,EACnBC,GAAsB,GAGfjB,YAAAA,GAAc,GAAKpY,EAExB,MAAAsZ,EAAiB9b,IAEjB,GAAAA,IAAUob,SACZvR,EAAA,GAAAqR,OAAchb,GACd2J,EAAA,GAAAsR,OAAmBjb,QACnB2J,EAAA,GAAAuR,OAAmBlb,QAIIA,IAArBib,IAEF5b,EAAMkH,MAAMnE,OAAO6Y,EAAkB,GAGrC5b,EAAMkH,MAAMnE,OAAO8Y,EAAkB,EAAGF,GAExCrR,EAAA,EAAAtK,EAAMkH,MAAY,IAAAlH,EAAMkH,OAAKlH,GAC7BsK,EAAA,EAAA8Q,GAAe,GAEf9Q,EAAA,GAAAqR,OAAchb,GACd2J,EAAA,GAAAsR,OAAmBjb,GACnB2J,EAAA,GAAAuR,OAAmBlb,mcAuCS2J,EAAA,GAAA8R,GAAY,EAAI,OACZ9R,EAAA,GAAA8R,GAAY,EAAI,OACf9R,EAAA,GAAA8R,GAAY,EAAK,MAOpCJ,EAAShc,EAAMkH,MAAOzG,EAAO,MAC7B6J,EAAA,EAAA8Q,GAAe,EAAI,MAOnBY,EAAShc,EAAMkH,MAAOzG,EAAO,QAC7B6J,EAAA,EAAA8Q,GAAe,EAAI,qBAUNhX,KAAIvB,KAAArO,mBAKnB8V,EAAA,EAAA8Q,GAAe,EAAI,YAGd9Q,EAAA,EAAAmR,EAAAhb,GAAA2D,KAAOmJ,EAAW2O,EAAa3S,EAAKnF,OAAIpE,GACxCsK,EAAA,EAAAmR,EAAAhb,GAAA+H,UAAYyT,EAAgB1S,EAAKnF,MAAIpE,GACrCsK,EAAA,EAAAmR,EAAAhb,GAAAkI,SAAWY,EAAKf,UAAU,GAAGgB,cAAgBD,EAAKf,UAAUiB,MAAM,GAACzJ,EAAA,MAKvDsK,EAAA,GAAA+R,GAAmB,GAAM/R,EAAA,GAAAgS,EAAqB7b,EAAK,qBAClBgI,SAAQ5F,KAAAiJ,qBAAoBxB,EAAA,EAAA8Q,GAAe,EAAI,MAGjGU,EAAW9b,EAAMkH,MAAOzG,GACxB6J,EAAA,EAAA8Q,GAAe,EAAI,UArEL9Q,EAAA,GAAAqR,EAAcpS,GAAMe,EAAA,GAAAsR,EAAmBnb,EAAK,EAChDA,GAAA8b,EAAc9b,MAClBtC,KAAQA,EAAE2P,iBAAkBxD,EAAA,GAAAuR,EAAmBpb,EAAK,aAiGpD0b,EAAYtZ,KAAArO,eAbd2J,IACV4d,EAAQ/b,EAAMkH,MAAOiV,EAAche,GAGnCmM,EAAA,GAAA6R,EAAe,IAEf7R,EAAA,EAAA8Q,GAAe,EAAI,EAsBZjd,IAAQA,EAAEgd,2BAA4B7Q,EAAA,EAAA+Q,GAAc,EAAK,cAanDD,EAAY5mB,sBACb6nB,EAAgB7nB,gBA7IoB8V,EAAA,EAAA+Q,GAAc,EAAK,ylBC2FrD,UAPZrkB,EAgBEf,EAAAgD,EAAAhC,GAZY+B,EAAAC,EAAAsE,MAAK6G,kFAAL,EAAA9G,EAAA,IAAArE,EAAAzE,QAAA+I,MAAK6G,MAALpL,EAAAC,EAAAsE,MAAK6G,qZAbP,UARZpN,EAAkCf,EAAAwB,EAAAR,YAClCD,EAcEf,EAAAgD,EAAAhC,GAVY+B,EAAAC,EAAAsE,MAAK3F,kFAAL,EAAA0F,EAAA,IAAArE,EAAAzE,QAAA+I,MAAK3F,MAALoB,EAAAC,EAAAsE,MAAK3F,uMA4CE6P,GAAalK,EAAI,IAAC6G,eAHvCpN,EAIEf,EAAAwB,EAAAR,oEADmBwQ,GAAalK,EAAI,IAAC6G,qEAXhC7G,EAAI,IAAC2J,MAAMxP,OAAM,KAAyB,IAAtB6F,EAAI,IAAC2J,MAAMxP,OAAe,OAAS,wLAA9DV,EAA6Ef,EAAA+U,EAAA/T,iCAC7ED,EAKSf,EAAA+W,EAAA/V,yDANFsG,EAAI,IAAC2J,MAAMxP,OAAM,KAAAoB,EAAA0W,EAAAC,kBAAyB,IAAtBlS,EAAI,IAAC2J,MAAMxP,OAAe,OAAS,UAAOoB,EAAA0jB,EAAAC,uLAvClE,OAAAlf,MAAKuL,QAAO4T,wCAsCZ,OAAAnf,MAAKuL,QAAO6T,g+BA3EFzjB,EAAAqX,EAAA,eAAAhT,QAAUA,EAAgB,IAAG,MAAQA,QAAUA,EAAgB,IAAG,UAAY,aAE3FrE,EAAAqX,EAAA,aAAAhT,QAAUA,EAAgB,IAAG,mDAC7BA,QAAUA,EAAgB,SACHoD,IAArBpD,EAAqB,KAAaA,MAAmBA,EAAK,IAC1D,qDACA,oDACF,qFAhBKA,EAAS,aAFtBvG,EAiHMf,EAAAma,EAAAnZ,GAzGJjB,EAwGMoa,EAAAG,GA1FJva,EA8DMua,EAAAV,GA7DJ7Z,EAMM6Z,EAAA5F,UACNjU,EAiBM6Z,EAAA7F,GAhBJhU,EAOSgU,EAAAsC,UACTtW,EAOSgU,EAAAwC,6BAuCbxW,EA0BMua,EAAAF,sBAVJra,EAA0Gqa,EAAAF,GAAzDA,EAAArE,QAAAvO,MAAKkL,gBACtDzS,EAQEqa,EAAAI,qYAT+CN,EAAArE,QAAAvO,MAAKkL,sBA1FvCvP,EAAAqX,EAAA,eAAAhT,QAAUA,EAAgB,IAAG,MAAQA,QAAUA,EAAgB,IAAG,UAAY,yBAE3FrE,EAAAqX,EAAA,aAAAhT,QAAUA,EAAgB,IAAG,mDAC7BA,QAAUA,EAAgB,SACHoD,IAArBpD,EAAqB,KAAaA,MAAmBA,EAAK,IAC1D,qDACA,oDACF,oCAhBKA,EAAS,uLAyJlBvG,EAAgEf,EAAA6Z,EAAA7Y,uDAWzD,+FAFyB,uRAQhCD,EAKSf,EAAAqW,EAAArV,YACTD,EAKSf,EAAAuW,EAAAvV,sBATGsG,EAAsB,0KA2BxBA,EAAY,QACpBA,EAAY,GAAC2J,MAAM3J,EAAa,kBACP,IAAZA,EAAY,oBAAZA,EAAY,SACG,IAAhBA,EAAgB,oBAAhBA,EAAgB,2LAHpBA,EAAY,yBACpBA,EAAY,GAAC2J,MAAM3J,EAAa,uCACnBA,EAAY,sDACbA,EAAgB,sMAM3BA,EAAY,GAAC2J,MAAM3J,EAAkB,kBAC9BA,EAAY,cACdA,EAAU,WACbA,EAAO,YACNA,EAAQ,mBACDA,EAAe,gBAClBA,EAAY,cACdA,EAAU,gBACS,IAAZA,EAAY,oBAAZA,EAAY,SACG,IAAhBA,EAAgB,oBAAhBA,EAAgB,yLAT3BA,EAAY,GAAC2J,MAAM3J,EAAkB,8BAC9BA,EAAY,0BACdA,EAAU,uBACbA,EAAO,yBACNA,EAAQ,gCACDA,EAAe,8BAClBA,EAAY,4BACdA,EAAU,qCACHA,EAAY,uDACbA,EAAgB,6LA5N7Bke,EAAAle,KAAa2J,2BAAlBxP,OAAID,GAAA,2BA2JG8F,EAAY,IAAAqf,4BAUVrf,EAA0B,IAAAqS,0BAO5BrS,EAA0B,KAAA2R,GAAA3R,KA4BhCA,EAAgB,KAAA4R,GAAA5R,KAShBA,EAAgB,KAAA4M,GAAA5M,0uBAvEL,iQAwBDA,EAA0B,IAAG,8BAAgC,yBAAuB,2MApKzDhE,EAAA6W,EAAA,eAAA7S,KAAasI,kBADzD7O,EAAcf,EAAA+Z,EAAA/Y,YACdD,EAiOMf,EAAAma,EAAAnZ,GAhOJjB,EAqHMoa,EAAAnG,qDAENjU,EAgFMoa,EAAAG,GA/EJva,EAAqBua,EAAAuI,UACrB9iB,EAqBOua,EAAAxD,GAVL/W,EAQE+W,EAAA9T,OAJYsE,EAAY,YAK1BvH,EAAwD+W,EAAAT,UAG1DtW,EAsDMua,EAAAF,GArDJra,EAcMqa,EAAArG,GAbJhU,EASSgU,EAAAwC,gCAMXxW,EAoCMqa,EAAAR,GAnCJ7Z,EASS6Z,EAAAkL,4CAiBT/kB,EAQS6Z,EAAAmL,qMAnMNS,EAAAle,KAAa2J,cAAlBxP,OAAID,GAAA,EAAA,mHAAJC,4BAuIc6F,EAAY,SAAZA,EAAY,KAoBnBA,EAAY,mIAORA,EAA0B,IAAG,8BAAgC,yBAAuB,mCAUxFA,EAA0B,2DA4BhCA,EAAgB,8GAShBA,EAAgB,0HAnNqBhE,EAAA6W,EAAA,eAAA7S,KAAasI,iKASlC1H,IAAQA,EAAE2P,gBAAc,yBA1DzC6N,EACAC,EACAC,gBAfOpD,GAAYxV,cACZ6Y,GAAU7Y,WACV8Y,GAAO9Y,gBACPyV,GAAYzV,YACZ+Y,GAAQ/Y,mBACRgZ,GAAehZ,gBACfiZ,GAAYjZ,cACZsK,GAAUtK,gBACVmY,GAAYnY,eACZ4Z,GAAW5Z,EAElBkZ,EAAe,GACfC,GAAY,EAMZU,GAA6B,EAG7BT,GAAmB,EACnBU,GAAiB,EAGjBC,GAAmB,EACnBC,GAAsB,EAEpB,MAAAV,EAAiB9b,IAEjB,GAAAA,IAAUob,SACZvR,EAAA,GAAAqR,OAAchb,GACd2J,EAAA,GAAAsR,OAAmBjb,QACnB2J,EAAA,GAAAuR,OAAmBlb,QAIIA,IAArBib,IAEFnD,EAAavR,MAAMnE,OAAO6Y,EAAkB,GAG5CnD,EAAavR,MAAMnE,OAAO8Y,EAAkB,EAAGF,GAE/CrR,EAAA,EAAAmO,EAAavR,MAAY,IAAAuR,EAAavR,OAAKuR,GAC3CnO,EAAA,EAAA8Q,GAAe,GAEf9Q,EAAA,GAAAqR,OAAchb,GACd2J,EAAA,GAAAsR,OAAmBjb,GACnB2J,EAAA,GAAAuR,OAAmBlb,kdAIK,KdeK,MACjC,IAAK,IAAIxH,KAAOwN,cACe,IAAzBxN,EAAIwC,QAAQ,SACdgL,aAAa2U,WAAWniB,EAE3B,EcnBC+jB,GACA5S,EAAA,EAAAmO,EAAavR,MAAY,IAAAuR,EAAavR,OAAKuR,GAC3CnO,EAAA,GAAAwS,GAA6B,GAC7BxS,EAAA,EAAA8Q,GAAe,EAAI,OAgCS9Q,EAAA,GAAA8R,GAAY,EAAI,OACZ9R,EAAA,GAAA8R,GAAY,EAAI,OACf9R,EAAA,GAAA8R,GAAY,EAAK,MAOpCJ,EAASvD,EAAavR,MAAOzG,EAAO,MACpC6J,EAAA,EAAA8Q,GAAe,EAAI,MAOnBY,EAASvD,EAAavR,MAAOzG,EAAO,QACpC6J,EAAA,EAAA8Q,GAAe,EAAI,qBAYJxjB,KAAIiL,KAAArO,mBAKnB8V,EAAA,EAAA8Q,GAAe,EAAI,YAGd9Q,EAAA,EAAAmR,EAAAhb,GAAA7I,KAAO2V,EAAWhE,EAAK3R,MAAI6gB,EAAA,qBAQjBrU,KAAIvB,KAAArO,mBAKnB8V,EAAA,EAAA8Q,GAAe,EAAI,YAGd9Q,EAAA,EAAAmR,EAAAhb,GAAA2D,KAAOmJ,EAAW2O,EAAa3S,EAAKnF,OAAIqU,GACxCnO,EAAA,EAAAmR,EAAAhb,GAAA+H,UAAYyT,EAAgB1S,EAAKnF,MAAIqU,GACrCnO,EAAA,EAAAmR,EAAAhb,GAAAkI,SAAWY,EAAKf,UAAU,GAAGgB,cAAgBD,EAAKf,UAAUiB,MAAM,GAACgP,EAAA,MASxDnO,EAAA,GAAA0S,GAAmB,GAAM1S,EAAA,GAAA2S,EAAqBxc,EAAK,MAOnD6J,EAAA,GAAA+R,GAAmB,GAAM/R,EAAA,GAAAyS,EAAgBtc,EAAK,qBAKdgI,SAAQ5F,KAAAiJ,qBAAoBxB,EAAA,EAAA8Q,GAAe,EAAI,MAGjGU,EAAWrD,EAAavR,MAAOzG,GAC/B6J,EAAA,EAAA8Q,GAAe,EAAI,UAtGL9Q,EAAA,GAAAqR,EAAcpS,GAAMe,EAAA,GAAAsR,EAAmBnb,EAAK,EAChDA,GAAA8b,EAAc9b,MAClBtC,KAAQA,EAAE2P,iBAAkBxD,EAAA,GAAAuR,EAAmBpb,EAAK,aAiItD0b,EAAYtZ,KAAArO,eAbd2J,IACV4d,EAAQtD,EAAavR,MAAOiV,EAAche,GAG1CmM,EAAA,GAAA6R,EAAe,IAEf7R,EAAA,EAAA8Q,GAAe,EAAI,EAkBNjd,IACTua,EAAaD,EAActa,GAC3BmM,EAAA,EAAA8Q,GAAe,EAAK,OAeL9Q,EAAA,GAAAwS,GAA6B,EAAI,OAkB/BxS,EAAA,GAAAwS,GAA6B,EAAK,OASnDD,IACAvS,EAAA,EAAA8Q,GAAe,EAAI,cAaNA,EAAY5mB,sBACb6nB,EAAgB7nB,uBAcf4mB,EAAY5mB,sBACbwoB,EAAgBxoB,weCkdtCwC,EAKMf,EAAA4Z,EAAA5Y,0DAYGukB,EAAAje,MAAa2J,OAAKiW,KAGlBvD,EAAArc,MAAa6f,YAAUV,KAGvBW,EAAA9f,MAAaiH,YAAUmY,KAGvBW,EAAA/f,MAAaggB,SAAOX,KAGpBY,EAAAjgB,MAAa4J,cAAYyI,KAGzB6N,EAAAlgB,MAAa0J,OAAKiI,qBAGlB,OAAA3R,MAAa2J,OAAS3J,EAAY,IAACiH,YAAcjH,EAAa,IAAAggB,SAAWhgB,EAAY,IAAC4J,cAAgB5J,MAAa0J,MAAKkI,sTApBjInY,EA2BMf,EAAA4Z,EAAA5Y,GA1BJjB,EAwBM6Z,EAAA5F,0JACNjU,EAAkC6Z,EAAA7F,WAxB3BzM,MAAa2J,oDAGb3J,MAAa6f,yDAGb7f,MAAaiH,yDAGbjH,MAAaggB,sDAGbhgB,MAAa4J,2DAGb5J,MAAa0J,6RAdhBjQ,EAAgDf,EAAA+U,EAAA/T,iIAGhDD,EAAsDf,EAAA+U,EAAA/T,oIAGtDD,EAAyDf,EAAA+U,EAAA/T,6HAGzDD,EAAkDf,EAAA+U,EAAA/T,uIAGlDD,EAA4Df,EAAA+U,EAAA/T,2HAG5DD,EAAgDf,EAAA+U,EAAA/T,oJAKhDD,EAAyEf,EAAA+U,EAAA/T,4JAFzED,EAAiFf,EAAA+U,EAAA/T,yPArCpFsG,EAA0B,KAAAmgB,SAS1BngB,EAAY,IAAC2J,OACb3J,MAAa6f,YACb7f,EAAa,IAAAiH,YACbjH,EAAY,IAACggB,SACbhgB,MAAa4J,cACb5J,EAAY,IAAC0J,QAAKkD,GAAA5M,82HAjMiBhE,EAAA+X,EAAA,eAAA/T,KAAasI,kBAArD7O,EAiLMf,EAAAqb,EAAAra,GAhLJjB,EA0FMsb,EAAAX,GAzFJ3a,EAAwB2a,EAAAkJ,UAExB7jB,EASM2a,EAAA1G,GARJjU,EAMEiU,EAAAkG,aADc5S,EAAW,UAE3BvH,EAA8CiU,EAAAiG,UAGhDla,EASM2a,EAAA3G,GARJhU,EAMEgU,EAAAyG,aADclT,EAAgB,UAEhCvH,EAAyDgU,EAAAwG,UAG3Dxa,EASM2a,EAAAd,GARJ7Z,EAME6Z,EAAAkB,aADcxT,EAAgB,UAEhCvH,EAAwD6Z,EAAAiB,UAG1D9a,EASM2a,EAAAN,GARJra,EAMEqa,EAAAgB,aADc9T,EAAa,UAE7BvH,EAAkDqa,EAAAe,UAGpDpb,EASM2a,EAAAJ,GARJva,EAMEua,EAAAoB,aADcpU,EAAkB,UAElCvH,EAA6Dua,EAAAmB,UAG/D1b,EASM2a,EAAAP,GARJpa,EAMEoa,EAAA6B,aADc1U,EAAW,UAE3BvH,EAA8Coa,EAAA4B,UAGhDhc,EAIQ2a,EAAAgN,UAER3nB,EAOS2a,EAAArE,UACTtW,EAME2a,EAAA4B,mBAGJvc,EAmFMsb,EAAAG,GAlFJzb,EAAwByb,EAAAuI,YAExBhkB,EASMyb,EAAAZ,IARJ7a,EAME6a,GAAAiC,eADcvV,EAAW,YAE3BvH,EAA8C6a,GAAAyB,YAGhDtc,EASMyb,EAAAf,IARJ1a,EAME0a,GAAAqC,eADcxV,EAAgB,YAEhCvH,EAAyD0a,GAAAkC,YAG3D5c,EASMyb,EAAAR,IARJjb,EAMEib,GAAAqC,eADc/V,EAAgB,aAEhCvH,EAAwDib,GAAAmC,YAG1Dpd,EASMyb,EAAAN,IARJnb,EAMEmb,GAAAoC,eADchW,EAAa,aAE7BvH,EAAkDmb,GAAAyC,YAGpD5d,EASMyb,EAAAT,IARJhb,EAMEgb,GAAA8C,eADcvW,EAAkB,aAElCvH,EAA6Dgb,GAAAoD,YAG/Dpe,EASMyb,EAAAF,IARJvb,EAMEub,GAAAwC,eADcxW,EAAW,aAE3BvH,EAA8Cub,GAAAqD,YAGhD5e,EAEQyb,EAAAmM,YAER5nB,EAOSyb,EAAAjF,YAETxW,EAAoDyb,EAAA3d,2ZArKlCyJ,EAAW,uBAWXA,EAAgB,wBAWhBA,EAAgB,wBAWhBA,EAAa,yBAWbA,EAAkB,wBAWlBA,EAAW,0BAqCXA,EAAW,0BAWXA,EAAgB,2BAWhBA,EAAgB,4BAWhBA,EAAa,4BAWbA,EAAkB,4BAWlBA,EAAW,aA7JOhE,EAAA+X,EAAA,eAAA/T,KAAasI,UAmLhDtI,EAA0B,sEAS1BA,EAAY,IAAC2J,OACb3J,MAAa6f,YACb7f,EAAa,IAAAiH,YACbjH,EAAY,IAACggB,SACbhgB,MAAa4J,cACb5J,EAAY,IAAC0J,4MA1vBZ9B,EAAU0Y,gBAHHpF,GAAYxV,gBACZyV,GAAYzV,EAGnB6a,GAAc,EAAMC,GAAmB,EAAMC,GAAmB,EAAMC,GAAgB,EAAMC,GAAc,EAAMC,GAAqB,EACrIC,GAAc,EAAMC,GAAmB,EAAMC,GAAmB,EAAMC,GAAgB,EAAMC,GAAc,EAAMC,GAAqB,EAGrIC,EAAY,CACdxX,OAAO,EACPkW,YAAY,EACZ5Y,YAAY,EACZ+Y,SAAS,EACTpW,cAAc,EACdF,OAAO,GAEL0X,GAA6B,QAa3BC,EAAU,SAEVC,EAAgB,CAAA,KACjBT,IACDS,EAAiB3X,MAAQuR,EAAavR,OAErCsX,IACDK,EAAiB5X,MAAQwR,EAAaxR,OAErCwX,IACDI,EAAiB1X,aAAesR,EAAatR,cAE5CmX,IACDO,EAAiBzZ,kBAAoBqT,EAAarT,kBAClDyZ,EAAiBtb,qBAAuBkV,EAAalV,qBACrDsb,EAAiBxZ,gBAAkBoT,EAAapT,iBAE/CkZ,IACDM,EAAiBxb,SAAWoV,EAAapV,SACzCwb,EAAiBhY,UAAY4R,EAAa5R,UAC1CgY,EAAiBvb,gBAAkBmV,EAAanV,gBAChDub,EAAiB/X,YAAc2R,EAAa3R,YAC5C+X,EAAiBhZ,SAAW4S,EAAa5S,SACzCgZ,EAAiBrb,SAAWiV,EAAajV,SACzCqb,EAAiBpb,SAAWgV,EAAahV,SACzCob,EAAiBvZ,aAAemT,EAAanT,aAC7CuZ,EAAiBtZ,WAAakT,EAAalT,WAC3CsZ,EAAiBrZ,QAAUiT,EAAajT,QACxCqZ,EAAiBpZ,WAAagT,EAAahT,WAC3CoZ,EAAiBnb,iBAAmB+U,EAAa/U,iBACjDmb,EAAiBlb,gBAAkB8U,EAAa9U,gBAChDkb,EAAiBnZ,aAAe+S,EAAa/S,aAC7CmZ,EAAiBhb,sBAAwB4U,EAAa5U,sBACtDgb,EAAiB/a,cAAgB2U,EAAa3U,cAC9C+a,EAAiBlZ,cAAgB8S,EAAa9S,cAC9CkZ,EAAiB9a,YAAc0U,EAAa1U,YAC5C8a,EAAiB7a,WAAayU,EAAazU,WAC3C6a,EAAiB5a,eAAiBwU,EAAaxU,gBAE9Coa,EAAgB,CfUU,MAC/B,IAAIS,EAAQ,GACZ,IAAK,IAAI3lB,KAAOwN,cACe,IAAzBxN,EAAIwC,QAAQ,SACdmjB,EAAMpiB,KAAKvD,GAGf,OAAO2lB,CAAK,EehBMC,GACRrrB,SAAQ0Q,IACZya,EAAiBza,GAAQqD,GAAarD,EAAI,QAK1C4a,EAAU,gCAAkCC,mBAAmBlY,KAAKC,UAAU6X,IAC9EK,EAAe9qB,SAAS+qB,eAAe,sBAC3CD,EAAatmB,aAAa,OAAQomB,GAClCE,EAAatmB,aAAa,WAAY,yBACtCsmB,EAAa3F,OAAK,EAGdN,EAAkB9a,IAClB,IAAAihB,EAAOjhB,EAAElI,OAAOijB,MAAM,GACtBC,MAAaC,WACjBD,EAAOkG,WAAWD,GAClBjG,EAAOG,OAAUnb,QAEbgH,EAAW4B,KAAKkB,MAAM9J,EAAElI,OAAO2Y,aAtEnC8P,EAAY,CACVxX,OAAO,EACPkW,YAAY,EACZ5Y,YAAY,EACZ+Y,SAAS,EACTpW,cAAc,EACdF,OAAO,IAmELqD,EAAA,GAAAqU,GAA6B,GAGzB,IAAAW,EAAiB7G,KAGlBqF,EAAW,CACR,IAAAyB,GAAc,EAEfpa,EAAS+B,MACV/B,EAAS+B,MAAMxT,SAAQ6V,IAClBA,EAAKT,SAEFS,EAAKG,eAAe,SAAYH,EAAKG,eAAe,UAAapH,MAAMkd,QAAQjW,EAAKrC,SACtFqY,GAAc,GAGhBhW,EAAKrC,MAAMxT,SAAQ+rB,IACbA,EAAQ/V,eAAe,SACrB+V,EAAQ/V,eAAe,cACvB+V,EAAQ/V,eAAe,cAC3B6V,GAAc,GAIZA,GAAgBE,EAAQ/V,eAAe,mBACzC+V,EAAQ/W,cAAgB+W,EAAQjX,UAAU9Q,OAAS,EAAI,aAAe,QAGpE6nB,GAAgBE,EAAQ/V,eAAe,cACzC+V,EAAQ9W,SAAW8W,EAAQjX,UAAU,GAAGgB,cAAgBiW,EAAQjX,UAAUiB,MAAM,IAG9E8V,GAAgBE,EAAQ/V,eAAe,qBACzC+V,EAAQ7W,gBAAkB,WAGxB2W,GAAgBE,EAAQ/V,eAAe,eACzC+V,EAAQ5W,UAAY,gBAMpBU,EAAKG,eAAe,SAClBH,EAAKG,eAAe,cACpBH,EAAKG,eAAe,cACxB6V,GAAc,GAIZA,GAAgBhW,EAAKG,eAAe,mBACtCH,EAAKb,cAAgBa,EAAKf,UAAU9Q,OAAS,EAAI,aAAe,QAG9D6nB,GAAgBhW,EAAKG,eAAe,cACtCH,EAAKZ,SAAWY,EAAKf,UAAU,GAAGgB,cAAgBD,EAAKf,UAAUiB,MAAM,IAGrE8V,GAAgBhW,EAAKG,eAAe,qBACtCH,EAAKX,gBAAkB,WAGrB2W,GAAgBhW,EAAKG,eAAe,eACtCH,EAAKV,UAAY,eAMvB0W,GAAc,EAIZA,OAIFb,EAAaxX,OAAQ,EAAIwX,GAHzBY,EAAepY,MAAQ/B,EAAS+B,SAQjCgX,EAAW,CACR,IAAAqB,GAAc,EAEfpa,EAAS8B,MACV9B,EAAS8B,MAAMvT,SAAQkW,IACjBA,EAAKF,eAAe,SAAYE,EAAKF,eAAe,eACtD6V,GAAc,MAKlBA,GAAc,EAGZA,OAIFb,EAAazX,OAAQ,EAAIyX,GAHzBY,EAAerY,MAAQ0C,GAAWxE,EAAS8B,UAQ5CkX,EAAkB,CACf,IAAAoB,GAAc,EAEfpa,EAASuE,eAAe,gBACW,iBAA1BvE,EAASgC,eACjBoY,GAAc,GAIhBA,GAAc,EAGZA,OAIFb,EAAavX,cAAe,EAAIuX,GAHhCY,EAAenY,aAAehC,EAASgC,gBAQxC4W,EACO,IAAA,IAAA5kB,KAAOgM,EACV,IAAyB,IAAzBhM,EAAIwC,QAAQ,QAAc,OACrB6L,EAAQrC,EAAShM,GACH,iBAAVqO,GAAsBA,EAAM9P,OAAS,GAC7C6P,GAAcpO,EAAKqO,MAOxBwW,EAAgB,CACb,IAAAuB,GAAc,EAGfpa,EAASuE,eAAe,qBACgB,kBAA/BvE,EAASC,oBACjBma,GAAc,GAIhBA,GAAc,EAIbpa,EAASuE,eAAe,yBACmB,iBAAlCvE,EAAS5B,sBAC2B,IAAzC4B,EAAS5B,qBAAqB7L,QACc,MAA5CyN,EAAS5B,qBAAqB4F,OAAO,IACpChE,EAAS5B,qBAAqBmc,MAAM,wCAK1CH,GAAc,GAIbpa,EAASuE,eAAe,oBACc,iBAA7BvE,EAASE,iBAAoE,IAApCF,EAASE,gBAAgB3N,SAK5E6nB,GAAc,GAGZA,OAMFb,EAAala,YAAa,EAAIka,IAL9BY,EAAela,kBAAoBD,EAASC,kBAC5Cka,EAAe/b,qBAAuB4B,EAAS5B,qBAC/C+b,EAAeja,gBAAkBF,EAASE,oBAQ3C4Y,EAAa,CACV,IAAAsB,GAAc,EAEfpa,EAASuE,eAAe,YACO,iBAAtBvE,EAAS9B,WACjBkc,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,aACQ,kBAAvBvE,EAAS0B,YACjB0Y,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,mBACc,kBAA7BvE,EAAS7B,kBACjBic,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,eACU,kBAAzBvE,EAAS2B,cACjByY,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,YACO,kBAAtBvE,EAASU,WACjB0Z,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,YACO,kBAAtBvE,EAAS3B,WACjB+b,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,YACO,kBAAtBvE,EAAS1B,WACjB8b,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,iBACzBvE,EAASG,aAAeqa,WAAWxa,EAASG,eACR,iBAA1BH,EAASG,cAA6BH,EAASG,aAAe,IAAMH,EAASG,aAAe,OACpGia,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,eACzBvE,EAASI,WAAaoa,WAAWxa,EAASI,aACR,iBAAxBJ,EAASI,YAA2BJ,EAASI,WAAa,GAAKJ,EAASI,WAAa,MAC7Fga,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,YACzBvE,EAASK,QAAUma,WAAWxa,EAASK,UACR,iBAArBL,EAASK,SAAwBL,EAASK,QAAU,GAAKL,EAASK,QAAU,MACpF+Z,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,eACzBvE,EAASM,WAAaka,WAAWxa,EAASM,aACR,iBAAxBN,EAASM,YAA2BN,EAASM,WAAa,GAAKN,EAASM,WAAa,MAC7F8Z,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,qBACzBvE,EAASzB,iBAAmBic,WAAWxa,EAASzB,mBACR,iBAA9ByB,EAASzB,kBAAiCyB,EAASzB,iBAAmB,GAAKyB,EAASzB,iBAAmB,MAC/G6b,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,iBACzBvE,EAASO,aAAeia,WAAWxa,EAASO,eACR,iBAA1BP,EAASO,cAA6BP,EAASO,aAAe,GAAKP,EAASO,aAAe,KACnG6Z,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,0BACzBvE,EAAStB,sBAAwB8b,WAAWxa,EAAStB,wBACR,iBAAnCsB,EAAStB,uBAAsCsB,EAAStB,sBAAwB,GAAKsB,EAAStB,sBAAwB,MAC9H0b,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,iBACY,kBAA3BvE,EAASrB,gBACjByb,GAAc,GAIhBA,GAAc,EAGbpa,EAASuE,eAAe,kBACzBvE,EAASQ,cAAgBga,WAAWxa,EAASQ,gBACR,iBAA3BR,EAASQ,eAA8BR,EAASQ,cAAgB,GAAKR,EAASQ,cAAgB,KACtG4Z,GAAc,IAIhBA,GAAc,EAGbpa,EAASuE,eAAe,oBACtBvE,EAASxB,gBAAgB+F,eAAe,MAAQvE,EAASxB,gBAAgB+F,eAAe,MAAQvE,EAASxB,gBAAgB+F,eAAe,MACzIvE,EAASxB,gBAAgBjF,EAAIihB,WAAWxa,EAASxB,gBAAgBjF,IACxB,iBAA/ByG,EAASxB,gBAAgBjF,GAAkByG,EAASxB,gBAAgBjF,EAAI,GAAKyG,EAASxB,gBAAgBjF,EAAI,OAClH6gB,GAAc,GAEhBpa,EAASxB,gBAAgBC,EAAI+b,WAAWxa,EAASxB,gBAAgBC,IACxB,iBAA/BuB,EAASxB,gBAAgBC,GAAkBuB,EAASxB,gBAAgBC,EAAI,GAAKuB,EAASxB,gBAAgBC,EAAI,OAClH2b,GAAc,GAEhBpa,EAASxB,gBAAgB5P,EAAI4rB,WAAWxa,EAASxB,gBAAgB5P,IACxB,iBAA/BoR,EAASxB,gBAAgB5P,GAAkBoR,EAASxB,gBAAgB5P,EAAI,GAAKoR,EAASxB,gBAAgB5P,EAAI,OAClHwrB,GAAc,IAQlBA,GAAc,EAGbpa,EAASuE,eAAe,gBACtBvE,EAASpB,YAAY2F,eAAe,MAAQvE,EAASpB,YAAY2F,eAAe,MAAQvE,EAASpB,YAAY2F,eAAe,MAC7HvE,EAASpB,YAAYrF,EAAIihB,WAAWxa,EAASpB,YAAYrF,IACpB,iBAA3ByG,EAASpB,YAAYrF,GAAkByG,EAASpB,YAAYrF,EAAI,GAAKyG,EAASpB,YAAYrF,EAAI,OACtG6gB,GAAc,GAEhBpa,EAASpB,YAAYH,EAAI+b,WAAWxa,EAASpB,YAAYH,IACpB,iBAA3BuB,EAASpB,YAAYH,GAAkBuB,EAASpB,YAAYH,EAAI,GAAKuB,EAASpB,YAAYH,EAAI,OACtG2b,GAAc,GAEhBpa,EAASpB,YAAYhQ,EAAI4rB,WAAWxa,EAASpB,YAAYhQ,IACpB,iBAA3BoR,EAASpB,YAAYhQ,GAAkBoR,EAASpB,YAAYhQ,EAAI,GAAKoR,EAASpB,YAAYhQ,EAAI,OACtGwrB,GAAc,IAQlBA,GAAc,EAGbpa,EAASuE,eAAe,eACtBvE,EAASnB,WAAW0F,eAAe,MAAQvE,EAASnB,WAAW0F,eAAe,MAAQvE,EAASnB,WAAW0F,eAAe,MAC1HvE,EAASnB,WAAWtF,EAAIihB,WAAWxa,EAASnB,WAAWtF,IACnB,iBAA1ByG,EAASnB,WAAWtF,GAAkByG,EAASnB,WAAWtF,EAAI,GAAKyG,EAASnB,WAAWtF,EAAI,OACnG6gB,GAAc,GAEhBpa,EAASnB,WAAWJ,EAAI+b,WAAWxa,EAASnB,WAAWJ,IACnB,iBAA1BuB,EAASnB,WAAWJ,GAAkBuB,EAASnB,WAAWJ,EAAI,GAAKuB,EAASnB,WAAWJ,EAAI,OACnG2b,GAAc,GAEhBpa,EAASnB,WAAWjQ,EAAI4rB,WAAWxa,EAASnB,WAAWjQ,IACnB,iBAA1BoR,EAASnB,WAAWjQ,GAAkBoR,EAASnB,WAAWjQ,EAAI,GAAKoR,EAASnB,WAAWjQ,EAAI,OACnGwrB,GAAc,IAQlBA,GAAc,EAGbpa,EAASuE,eAAe,mBACtBvE,EAASlB,eAAeyF,eAAe,MAAQvE,EAASlB,eAAeyF,eAAe,MAAQvE,EAASlB,eAAeyF,eAAe,MACtIvE,EAASlB,eAAevF,EAAIihB,WAAWxa,EAASlB,eAAevF,IACvB,iBAA9ByG,EAASlB,eAAevF,GAAkByG,EAASlB,eAAevF,EAAI,GAAKyG,EAASlB,eAAevF,EAAI,OAC/G6gB,GAAc,GAEhBpa,EAASlB,eAAeL,EAAI+b,WAAWxa,EAASlB,eAAeL,IACvB,iBAA9BuB,EAASlB,eAAeL,GAAkBuB,EAASlB,eAAeL,EAAI,GAAKuB,EAASlB,eAAeL,EAAI,OAC/G2b,GAAc,GAEhBpa,EAASlB,eAAelQ,EAAI4rB,WAAWxa,EAASlB,eAAelQ,IACvB,iBAA9BoR,EAASlB,eAAelQ,GAAkBoR,EAASlB,eAAelQ,EAAI,GAAKoR,EAASlB,eAAelQ,EAAI,OAC/GwrB,GAAc,IAQlBA,GAAc,EAGZA,OAuBFb,EAAanB,SAAU,EAAImB,IAtB3BY,EAAejc,SAAW8B,EAAS9B,SACnCic,EAAezY,UAAY1B,EAAS0B,UACpCyY,EAAehc,gBAAkB6B,EAAS7B,gBAC1Cgc,EAAexY,YAAc3B,EAAS2B,YACtCwY,EAAezZ,SAAWV,EAASU,SACnCyZ,EAAe9b,SAAW2B,EAAS3B,SACnC8b,EAAe7b,SAAW0B,EAAS1B,SACnC6b,EAAeha,aAAeH,EAASG,aACvCga,EAAe/Z,WAAaJ,EAASI,WACrC+Z,EAAe9Z,QAAUL,EAASK,QAClC8Z,EAAe7Z,WAAaN,EAASM,WACrC6Z,EAAe5b,iBAAmByB,EAASzB,iBAC3C4b,EAAe3b,gBAAkBwB,EAASxB,gBAC1C2b,EAAe5Z,aAAeP,EAASO,aACvC4Z,EAAezb,sBAAwBsB,EAAStB,sBAChDyb,EAAexb,cAAgBqB,EAASrB,cACxCwb,EAAe3Z,cAAgBR,EAASQ,cACxC2Z,EAAevb,YAAcoB,EAASpB,YACtCub,EAAetb,WAAamB,EAASnB,WACrCsb,EAAerb,eAAiBkB,EAASlB,gBAOzCya,EAAaxX,OACXwX,EAAatB,YACbsB,EAAala,YACbka,EAAanB,SACbmB,EAAavX,cACbuX,EAAazX,OAGjBqD,EAAA,GAAAqU,GAA6B,GAG/BjG,EAAa4G,SAGbhY,MAAM,6LAgBQwW,EAAWjb,KAAAiJ,2BAWXiS,EAAgBlb,KAAAiJ,2BAWhBkS,EAAgBnb,KAAAiJ,2BAWhBmS,EAAapb,KAAAiJ,2BAWbqS,EAAkBtb,KAAAiJ,2BAWlBoS,EAAWrb,KAAAiJ,qBAczB+R,EAAUtE,OAAK,EASLpb,GAAM8a,EAAe9a,2CACtB0f,EAASrE,wBAaJ4E,EAAWvb,KAAAiJ,2BAWXuS,EAAgBxb,KAAAiJ,2BAWhBwS,EAAgBzb,KAAAiJ,4BAWhByS,EAAa1b,KAAAiJ,4BAWb2S,EAAkB5b,KAAAiJ,4BAWlB0S,EAAW3b,KAAAiJ,sBAYzB8S,GAAU,wUCvtBR5nB,EAQSf,EAAA+W,EAAA/V,uMAVTD,EAAmDf,EAAA+W,EAAA/V,oDAFjDwY,EAAAlS,KAAa4G,MAAK,0BACjB5G,EAAmB,KAAKA,EAAY,GAAC3F,KAAIuS,oKAFV5M,EAAQ,YAA9CvG,EAeMf,EAAAsU,EAAAtT,GAdJjB,EAA2BuU,EAAAlQ,iIADSkD,EAAQ,uDADzC2G,wBAALxM,OAAID,GAAA,mQAHVT,EAAsBf,EAAA+Z,EAAA/Y,YACtBD,EAqBMf,EAAA+T,EAAA/S,GApBJjB,EAmBMgU,EAAAC,4EAlBG/F,WAALxM,OAAID,GAAA,EAAA,mHAAJC,kGAROkoB,GAAmB3c,sBACnB4c,GAAkB5c,YAClB4C,GAAQ5C,qLAeP2c,EAAsBzY,EAAavP,MACnCioB,EAAmB1Y,EAAavP,KAAI,qRCE5CZ,EAAoDf,EAAAqO,EAAArN,wLAFpDD,EAAyDf,EAAAqO,EAAArN,6GADtDsG,EAAQ,GAAA4M,2/CAFsB5M,EAAQ,YAA/CvG,EAgCMf,EAAA0a,EAAA1Z,GA/BJjB,EAMM2a,EAAA1G,sBAENjU,EAEM2a,EAAA3G,UAENhU,EAEM2a,EAAAd,UAEN7Z,EAEM2a,EAAAN,UAENra,EAIM2a,EAAAJ,GAHJva,EAAeua,EAAAsJ,UACf7jB,EAA0Fua,EAAAuP,UAC1F9pB,EAAqDua,EAAAjE,UAGvDtW,EAIM2a,EAAAP,GAHJpa,EAAgBoa,EAAA4J,UAChBhkB,EAAiGoa,EAAA2P,UACjG/pB,EAAqDoa,EAAA5D,sBANnCjP,EAAW,gBAMXA,EAAY,kGA9BKA,EAAQ,+DAfzC,IAAAsI,GAAW,EAEfI,GAASM,WAAWzO,QAClB+N,EAAW/N,EAAK+N,SAAQ,aAGT,KACfnR,OAAOuZ,SAASC,OAAO,oFAAmF,EAG1F,KAChBxZ,OAAOuZ,SAASC,OAAO,oFAAmF,+SCuChGlX,EAAiCf,EAAAoE,EAAApD,4IAFjCD,EAAgCf,EAAAoE,EAAApD,8IAkBhCD,EAAkCf,EAAAoE,EAAApD,gJAFlCD,EAAoCf,EAAAoE,EAAApD,+IAFpCD,EAAmCf,EAAAoE,EAAApD,4EAjBhCkV,EAAA5O,KAAM4G,MAAK,6BAEY,SAAvB5G,EAAK,GAACyH,aAAuBgb,GAED,YAAvBziB,EAAK,GAACyH,aAA0Bib,wBAIrCrG,EAAArc,KAAM0H,kIACTjO,EAAyBf,EAAAoE,EAAApD,mBADCipB,GAIvB7C,EAAA9f,KAAM2H,0HACTlO,EAAqBf,EAAAoE,EAAApD,mBADCymB,6BAIU,SAA7BngB,EAAK,GAACqI,mBAA6B8W,GAED,UAA7Bnf,EAAK,GAACqI,mBAA8BuX,kPAtBdlpB,EAAAqQ,EAAAoV,IAAAD,EAAA,wBAAAlc,KAAMwH,mBAASvM,EAAA8L,EAAA,MAAAmV,GAAiBjhB,EAAA8L,EAAA,MAAAqV,EAAA,GAAApc,KAAM4G,wSAFtC5K,EAAA8W,EAAA,eAAA9S,KAAasI,kBAAnD7O,EAqCMf,EAAAoa,EAAApZ,GApCJjB,EAEMqa,EAAApG,GADJjU,EAAmGiU,EAAA3F,UAErGtO,EAgCMqa,EAAAR,GA/BJ7Z,EAwBM6Z,EAAA7F,GAvBJhU,EAAsBgU,EAAA0R,sGAwBxB1lB,EAKS6Z,EAAA7C,sDAnCyBzT,EAAA8W,EAAA,eAAA9S,KAAasI,8LAuD3C7O,EAAiCf,EAAAoE,EAAApD,4IAFjCD,EAAgCf,EAAAoE,EAAApD,8IAkBhCD,EAAkCf,EAAAoE,EAAApD,gJAFlCD,EAAoCf,EAAAoE,EAAApD,+IAFpCD,EAAmCf,EAAAoE,EAAApD,4EAjBhCkV,EAAA5O,KAAM4G,MAAK,6BAEY,SAAvB5G,EAAK,GAACyH,aAAuB4X,GAED,YAAvBrf,EAAK,GAACyH,aAA0B2X,wBAIrC/C,EAAArc,KAAM0H,kIACTjO,EAAyBf,EAAAoE,EAAApD,mBADC2Y,GAIvByN,EAAA9f,KAAM2H,0HACTlO,EAAqBf,EAAAoE,EAAApD,mBADCiY,6BAIU,SAA7B3R,EAAK,GAACqI,mBAA6BuE,GAED,UAA7B5M,EAAK,GAACqI,mBAA8BuJ,kPAtBdlb,EAAAqQ,EAAAoV,IAAAD,EAAA,wBAAAlc,KAAMwH,mBAASvM,EAAA8L,EAAA,MAAAmV,GAAiBjhB,EAAA8L,EAAA,MAAAqV,EAAA,GAAApc,KAAM4G,ySAFtC5K,EAAA8W,EAAA,eAAA9S,KAAasI,kBAAnD7O,EAqCMf,EAAAoa,EAAApZ,GApCJjB,EAEMqa,EAAApG,GADJjU,EAAoGiU,EAAA3F,UAEtGtO,EAgCMqa,EAAAR,GA/BJ7Z,EAwBM6Z,EAAA7F,GAvBJhU,EAAsBgU,EAAA0R,sGAwBxB1lB,EAKS6Z,EAAA7C,sDAnCyBzT,EAAA8W,EAAA,eAAA9S,KAAasI,yGA7C9ChB,wBAALnN,OAAID,GAAA,2BA4CCqO,wBAALpO,OAAID,GAAA,+cA/CVT,EAwFMf,EAAA4Z,EAAA5Y,GAvFJjB,EAAe6Z,EAAAgK,UACf7jB,EAyCM6Z,EAAA5F,qDAENjU,EAA6C6Z,EAAAmK,UAC7ChkB,EAyCM6Z,EAAA7F,4EApFGnF,WAALnN,OAAID,GAAA,EAAA,mHAAJC,2BA4CKoO,WAALpO,OAAID,GAAA,EAAA,mHAAJC,kFAhFO+gB,GAAYxV,EAEjB,MAAAkd,EAAchb,IAClBc,GAASjJ,QAAQ4Q,IACfA,EAAM/H,cAAiClF,IAAtBwE,EAASU,SAAyBV,EAASU,SAAW+H,EAAM/H,SAC7E+H,EAAMtK,qBAA+C3C,IAA7BwE,EAAS7B,gBAAgC6B,EAAS7B,gBAAkBsK,EAAMtK,gBAClGsK,EAAMxI,uBAAmDzE,IAA/BwE,EAASC,kBAAkCD,EAASC,kBAAoBwI,EAAMxI,kBACxGwI,EAAMrK,0BAAyD5C,IAAlCwE,EAAS5B,qBAAqC4B,EAAS5B,qBAAuBqK,EAAMrK,qBACjHqK,EAAMvI,qBAA+C1E,IAA7BwE,EAASE,gBAAgCF,EAASE,gBAAkBuI,EAAMvI,gBAClGuI,EAAMpK,cAAiC7C,IAAtBwE,EAAS3B,SAAyB2B,EAAS3B,SAAWoK,EAAMpK,SAC7EoK,EAAMnK,cAAiC9C,IAAtBwE,EAAS1B,SAAyB0B,EAAS1B,SAAWmK,EAAMnK,SAC7EmK,EAAMtI,kBAAyC3E,IAA1BwE,EAASG,aAA6BH,EAASG,aAAesI,EAAMtI,aACzFsI,EAAMrI,gBAAqC5E,IAAxBwE,EAASI,WAA2BJ,EAASI,WAAaqI,EAAMrI,WACnFqI,EAAMpI,aAA+B7E,IAArBwE,EAASK,QAAwBL,EAASK,QAAUoI,EAAMpI,QAC1EoI,EAAMnI,gBAAqC9E,IAAxBwE,EAASM,WAA2BN,EAASM,WAAamI,EAAMnI,WACnFmI,EAAMlK,sBAAiD/C,IAA9BwE,EAASzB,iBAAiCyB,EAASzB,iBAAmBkK,EAAMlK,iBACrGkK,EAAMjK,qBAA+ChD,IAA7BwE,EAASxB,gBAAgCwB,EAASxB,gBAAkBiK,EAAMjK,gBAClGiK,EAAMlI,kBAAyC/E,IAA1BwE,EAASO,aAA6BP,EAASO,aAAekI,EAAMlI,aACzFkI,EAAM/J,2BAA2DlD,IAAnCwE,EAAStB,sBAAsCsB,EAAStB,sBAAwB+J,EAAM/J,sBACpH+J,EAAM9J,mBAA2CnD,IAA3BwE,EAASrB,cAA8BqB,EAASrB,cAAgB8J,EAAM9J,cAC5F8J,EAAMjI,mBAA2ChF,IAA3BwE,EAASQ,cAA8BR,EAASQ,cAAgBiI,EAAMjI,cAC5FiI,EAAM7J,iBAAuCpD,IAAzBwE,EAASpB,YAA4BoB,EAASpB,YAAc6J,EAAM7J,YACtF6J,EAAM5J,gBAAqCrD,IAAxBwE,EAASnB,WAA2BmB,EAASnB,WAAa4J,EAAM5J,WACnF4J,EAAM3J,oBAA6CtD,IAA5BwE,EAASlB,eAA+BkB,EAASlB,eAAiB2J,EAAM3J,eACxF2J,KAITlH,GAAU,IAAK+R,KAAiBtT,GAAQ,wEAyChBgb,EAAWC,EAAMjb,aA4CjBgb,EAAWC,EAAMjb,qRC2KrB5L,EAAAyT,EAAA,eAAAzP,KAAasI,kBAPnC7O,EAUSf,EAAA+W,EAAA/V,kGAHasC,EAAAyT,EAAA,eAAAzP,KAAasI,6JAyE1B,OAAa,IAAbtI,KAAc,EAEI,IAAbA,KAAc,EAED,IAAbA,KAAc,EAED,IAAbA,KAAc,EAED,IAAbA,KAAc,EAED,IAAbA,KAAc,EAED,IAAbA,KAAc,sdA9DAhE,EAAA+S,EAAA,iBAAa,IAAb/O,wDAOAhE,EAAAiT,EAAA,iBAAa,IAAbjP,wDAOAhE,EAAAwhB,EAAA,iBAAa,IAAbxd,wDAOAhE,EAAAyhB,EAAA,iBAAa,IAAbzd,wDAOAhE,EAAA8mB,EAAA,iBAAa,IAAb9iB,wDAOAhE,EAAA+mB,EAAA,iBAAa,IAAb/iB,wDAOAhE,EAAAgnB,EAAA,iBAAa,IAAbhjB,6NA9CgCA,EAAa,IAAsBhE,EAAAsW,EAAA,eAAAtS,KAAasI,kBAA5G7O,EAsEMf,EAAA4Z,EAAA5Y,GArEJjB,EAkDM6Z,EAAA5F,GAjDJjU,EAMSiU,EAAAqC,UACTtW,EAMSiU,EAAAuC,UACTxW,EAMSiU,EAAA8Q,UACT/kB,EAMSiU,EAAA+Q,UACThlB,EAMSiU,EAAAoW,UACTrqB,EAMSiU,EAAAqW,UACTtqB,EAMSiU,EAAAsW,UAEXvqB,EAAK6Z,EAAA2Q,UACLxqB,EAgBM6Z,EAAA7F,4LAjEoBzQ,EAAA+S,EAAA,iBAAa,IAAb/O,YAOAhE,EAAAiT,EAAA,iBAAa,IAAbjP,YAOAhE,EAAAwhB,EAAA,iBAAa,IAAbxd,YAOAhE,EAAAyhB,EAAA,iBAAa,IAAbzd,YAOAhE,EAAA8mB,EAAA,iBAAa,IAAb9iB,YAOAhE,EAAA+mB,EAAA,iBAAa,IAAb/iB,YAOAhE,EAAAgnB,EAAA,iBAAa,IAAbhjB,2LA9CgCA,EAAa,SAAsBhE,EAAAsW,EAAA,eAAAtS,KAAasI,6pBA+DnE+Z,oBAAAriB,KAAa4J,qCAA6CtB,SAAAtI,KAAasI,6EAAvE,EAAAvI,IAAAmjB,EAAAb,oBAAAriB,KAAa4J,cAA6C,EAAA7J,IAAAmjB,EAAA5a,SAAAtI,KAAasI,8dAJV,IAAftI,EAAe,uBAAfA,EAAe,6LAAfA,EAAe,wjBAJqE,IAAfA,EAAe,oBAAfA,EAAe,uLAAfA,EAAe,sJAlFxKA,EAAY,IAAAmgB,GAAAngB,KA0BZA,EAAY,IAAA4M,GAAA5M,sLALDA,EAAe,GAAG,iCAA8BoD,iDAH5CpD,EAAY,IACVhE,EAAAyT,EAAA,eAAAzP,KAAasI,qCACLtI,EAAe,iCAN7CvG,EAUSf,EAAA+W,EAAA/V,GADPjB,EAA8BgX,EAAAvV,wDARpB8F,EAAmB,oBAf1BA,EAAY,sFAqBDA,EAAe,GAAG,iCAA8BoD,iDAH5CpD,EAAY,SACVhE,EAAAyT,EAAA,eAAAzP,KAAasI,0CACLtI,EAAe,IAMxCA,EAAY,6NAhDN,SAAAgQ,GAAWC,OACdF,EAAS,CACX,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,UAEA,OAAAG,OAAOD,GAAQE,QAAQ,qBAAsBC,GAC3C,OAAAL,EAAUK,eAKZ+S,YAEL3mB,SAAU,IACVqG,KAAM9F,EAAGqmB,IAA2B,qBAAI,IAAJrmB,6CAvQpCme,EAAY,CAAA,EACZG,GAAkB,EAClBgI,GAAe,EACfC,GAAgB,EAChBC,EAAW,QAMTC,EAAatgB,IACjB6J,EAAA,EAAAwW,EAAWrgB,EAAK,EAIlBwF,GAASM,WAAWzO,IAClBwS,EAAA,EAAAmO,EAAe3gB,EAAI,UAkLfokB,EAAgB8E,GACa,SAA7BA,EAAS5X,UAAU,EAAG,GACjB4X,EAEA,UAAYA,EAIjB/E,EAAmB7X,IAEnB,IAAAxM,EAAOqpB,EAAmB7c,GAAM8c,cAEhC,OAAAC,GAAkBC,SAASxpB,GAEtBA,EACE,uCAAuCwpB,SAASxpB,EAAK,IAEvDA,EAAK,GAEL,KAILqpB,EAAsB7c,IACtB,IAAAid,EAAWjd,SAGfid,EAAWA,EAASjY,UAAUiY,EAAS1lB,QAAQ,OAAS,GAGvB,QAA7B0lB,EAASjY,UAAU,EAAG,KACxBiY,EAAWA,EAASjY,UAAU,KAIG,IAA/BiY,EAASpS,YAAY,OACvBoS,EAAWA,EAASjY,UAAU,EAAGiY,EAASpS,YAAY,QAIrB,IAA/BoS,EAASpS,YAAY,OACvBoS,EAAWA,EAASjY,UAAU,EAAGiY,EAASpS,YAAY,OAI7B,QAAvBoS,EAAS5X,OAAO,IAAuC,SAAvB4X,EAAS5X,OAAO,KAClD4X,EAAWA,EAASjY,UAAU,EAAGiY,EAASpS,YAAY,OAGjDoS,CAAQ,mBA7OQ,KACvB/W,EAAA,EAAAsW,GAAgBA,EAAY,IAYZ,CAAInI,EAActgB,KAC9BA,GACFA,EAAM2V,iBAIR7H,GAASjJ,QAAQ4Q,IACfA,EAAMvK,SAAWkK,GAAWkL,EAAapV,UACzCuK,EAAM/G,UAAY4R,EAAa5R,UAC/B+G,EAAMtK,gBAAkBmV,EAAanV,gBACrCsK,EAAM9G,YAAc2R,EAAa3R,YACjC8G,EAAM/H,SAAW4S,EAAa5S,SAC9B+H,EAAMpK,SAAWiV,EAAajV,SAC9BoK,EAAMnK,SAAWgV,EAAahV,SAC9BmK,EAAMtI,aAAemT,EAAanT,aAClCsI,EAAMrI,WAAakT,EAAalT,WAChCqI,EAAMpI,QAAUiT,EAAajT,QAC7BoI,EAAMnI,WAAagT,EAAahT,WAChCmI,EAAMlK,iBAAmB+U,EAAa/U,iBACtCkK,EAAMjK,gBAAkB8U,EAAa9U,gBACrCiK,EAAMlI,aAAe+S,EAAa/S,aAClCkI,EAAM/J,sBAAwB4U,EAAa5U,sBAC3C+J,EAAM9J,cAAgB2U,EAAa3U,cACnC8J,EAAMjI,cAAgB8S,EAAa9S,cACnCiI,EAAM7J,YAAc0U,EAAa1U,YACjC6J,EAAM5J,WAAayU,EAAazU,WAChC4J,EAAM3J,eAAiBwU,EAAaxU,eACpC2J,EAAM1G,MAAQuR,EAAavR,MACpB0G,KAITlH,GAAW+R,EAAY,EAGP,KAEhBxS,GAASjJ,QAAQ4Q,IACfA,EAAMvK,SAAWkK,GAAW5F,IAC5BiG,EAAM/G,UtBrEa,KsBsEnB+G,EAAMtK,gBAAkBsE,GACxBgG,EAAM9G,YtBrEe,KsBsErB8G,EAAM/H,StBrEY,MsBsElB+H,EAAMpK,SAAWsE,GACjB8F,EAAMnK,SAAWsE,GACjB6F,EAAMtI,atBlEgB,GsBmEtBsI,EAAMrI,WtBlEc,GsBmEpBqI,EAAMpI,QtBlEW,EsBmEjBoI,EAAMnI,WtBlEc,EsBmEpBmI,EAAMlK,iBAAmBsE,GACzB4F,EAAMjK,gBAAkBuE,GACxB0F,EAAMlI,atBlEgB,EsBmEtBkI,EAAM/J,sBAAwBsE,GAC9ByF,EAAM9J,cAAgBsE,GACtBwF,EAAMjI,ctBlEiB,EsBmEvBiI,EAAM7J,YAAcsE,GACpBuF,EAAM5J,WAAasE,GACnBsF,EAAM3J,eAAiBsE,GAChBqF,KAITlH,GAAW+R,EAAY,EAGG6I,IAC1Brb,GAASjJ,QAAQ4Q,IACfA,EAAMzG,aAAema,EACd1T,KnBvCmB,CAAC0T,IAC/B3a,aAAaC,QAAQ,eAAgB0a,EAAO,EmB0C1CC,CAAiBD,EAAM,EAGClT,QACxBqK,EAAapT,gBAAkB+I,EAAEqK,OnB3EP,CAACrK,IAC7BzH,aAAaC,QAAQ,kBAAmBwH,GACxCzH,aAAaC,QAAQ,qBAAqB,EAAM,EmB6E5C4a,CAAe/I,EAAapT,iBAG5BY,GAASjJ,QAAQ4Q,IACfA,EAAMvI,gBAAkBoT,EAAapT,gBACrCuI,EAAMxI,mBAAoB,EACnBwI,WAGTtG,MACE,8GAKyBkH,QAC7BiK,EAAalV,qBAAuBiL,EAAKiK,GnB1FV,CAACjK,IAClC7H,aAAaC,QAAQ,uBAAwB4H,GAC7C7H,aAAaC,QAAQ,qBAAqB,EAAK,EmB0F7C6a,CAAoBhJ,EAAalV,sBAEjC0C,GAASjJ,QAAQ4Q,IACfA,EAAMrK,qBAAuBiL,EAC7BZ,EAAMxI,mBAAoB,EACnBwI,MAIM,KACf6K,EAAavR,MAAMxK,KAAI,CACrB9E,KAAM,YACNkR,SAAS,EACTL,UAAU,EACVvB,MAAK,aAOQ,CAAAwa,EAAMvF,EAAchkB,KACnCA,EAAM2V,qBAGF6T,EAAYzF,EAAaC,GACzB3T,EAAYyT,EAAgB0F,GAGhCD,EAAKhlB,KAAI,CACP0H,KAAMmJ,GAAWoU,GACNnZ,YACXC,UAAU,EACVC,cAAeF,EAAU9Q,OAAS,EAAI,aAAe,OACrDiR,SAAUH,EAAU,GAAGgB,cAAgBhB,EAAUiB,MAAM,GACvDb,gBAAiB,UACjBC,UAAW,oBAOC,CAAI6Y,EAAMjhB,KAExBihB,EAAK3e,OAAOtC,EAAO,WAMH,CAAAihB,EAAMjhB,EAAO7C,KAEzB,GAAc,OAAdA,GAAgC,IAAV6C,YAGR,SAAd7C,GAAwB6C,IAAUihB,EAAKhqB,OAAS,aAKhDsW,EAAO0T,EAAKjhB,GAGhBihB,EAAK3e,OAAOtC,EAAO,GAGD,OAAd7C,EACF8jB,EAAK3e,OAAOtC,EAAQ,EAAG,EAAGuN,GACH,SAAdpQ,GACT8jB,EAAK3e,OAAOtC,EAAQ,EAAG,EAAGuN,oBAmFP1D,EAAA,EAAAuW,GAAgB,EAAI,OACtBvW,EAAA,EAAAuW,GAAgB,EAAK,OAClBvW,EAAA,EAAAuW,GAAgB,EAAK,OA4BtBE,EAAU,EAAC,OAOXA,EAAU,EAAC,OAOXA,EAAU,EAAC,OAOXA,EAAU,EAAC,OAOXA,EAAU,EAAC,OAOXA,EAAU,EAAC,OAOXA,EAAU,EAAC,cAQ0HnI,EAAepkB,sBAIpFokB,EAAepkB,4YCnL3F+I,EAAY,IAAAqS,KAeTgK,GAAArc,KAAU7F,QAAMwX,OAGf3R,EAAS,wBAAd7F,OAAID,GAAA,+DAwEA,IAAA4lB,GAAA9f,KAAe7F,QAAMyX,QAGpB5R,EAAc,0BAAnB7F,OAAID,GAAA,63BA/EiC8B,EAAAsW,EAAA,kBAAgBlP,IAAhBpD,EAAgB,IAA6B,cAAhBA,gJA2E7BhE,EAAAgX,EAAA,kBAAgB5P,IAAhBpD,EAAgB,IAA6B,mBAAhBA,kMA/FnCA,EAAQ,YAAjDvG,EAoKMf,EAAA4a,EAAA5Z,GAnKJjB,EAWM6a,EAAA7G,GAVJhU,EAAcgU,EAAAgG,UACdha,EAQMgU,EAAAC,GAPJjU,EAAqGiU,EAAAqC,UACrGtW,EAAqGiU,EAAAuC,gCASzGxW,EAqJM6a,EAAAF,GApJJ3a,EAwEM2a,EAAAN,GAvEJra,EAEKqa,EAAAuR,UAEL5rB,EAkEMqa,EAAAR,2EAGR7Z,EAyEM2a,EAAAP,GAxEJpa,EAGKoa,EAAAyR,UAEL7rB,EAkEMoa,EAAAG,0IA3JDhT,EAAY,oDAeTA,KAAU7F,8EAGT6F,EAAS,WAAd7F,OAAID,GAAA,EAAA,8GAAJC,OAAID,EAAAqqB,EAAApqB,OAAAD,GAAA,yBAJiC8B,EAAAsW,EAAA,kBAAgBlP,IAAhBpD,EAAgB,IAA6B,cAAhBA,MA4E9DA,KAAe7F,+EAGd6F,EAAc,YAAnB7F,OAAID,GAAA,EAAA,uHAAJC,OAAID,EAAAsqB,GAAArqB,OAAAD,GAAA,uBAJiC8B,EAAAgX,EAAA,kBAAgB5P,IAAhBpD,EAAgB,IAA6B,mBAAhBA,iCA/FnCA,EAAQ,iCAwBvC7F,OAAID,GAAA,4BA2EJC,OAAID,GAAA,kCxBs2BhB,SAA8BvB,EAAM9C,EAAI+L,GACpC,IAEIK,EACApK,EAHAiK,EAASjM,EAAG8C,EAAMiJ,GAClB6iB,GAAU,EAGV9nB,EAAM,EACV,SAAS+nB,IACDziB,GACAnE,EAAYnF,EAAMsJ,EACzB,CACD,SAASS,IACL,MAAMjG,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGmG,OAAEA,EAASjN,EAAQkN,KAAEA,EAAOnN,EAAIoN,IAAEA,GAAQf,GAAUJ,GACjFmB,IACAZ,EAAiB1F,EAAY5D,EAAM,EAAG,EAAG6D,EAAUC,EAAOkG,EAAQE,EAAKlG,MAC3EiG,EAAK,EAAG,GACR,MAAM+hB,EAAavtB,IAAQqF,EACrBmoB,EAAWD,EAAanoB,EAC1B3E,GACAA,EAAKW,QACTisB,GAAU,EACVvlB,GAAoB,IAAMkB,EAASzH,GAAM,EAAM,WAC/Cd,EAAOK,GAAKd,IACR,GAAIqtB,EAAS,CACT,GAAIrtB,GAAOwtB,EAIP,OAHAhiB,EAAK,EAAG,GACRxC,EAASzH,GAAM,EAAM,OACrB+rB,IACOD,GAAU,EAErB,GAAIrtB,GAAOutB,EAAY,CACnB,MAAM5nB,EAAI4F,GAAQvL,EAAMutB,GAAcnoB,GACtCoG,EAAK7F,EAAG,EAAIA,EACf,CACJ,CACD,OAAO0nB,CAAO,GAErB,CACD,IAAII,GAAU,EACd,MAAO,CACHtiB,QACQsiB,IAEJA,GAAU,EACV/mB,EAAYnF,GACRvC,EAAY0L,IACZA,EAASA,IACT5B,IAAOC,KAAKuC,IAGZA,IAEP,EACDuG,aACI4b,GAAU,CACb,EACDriB,MACQiiB,IACAC,IACAD,GAAU,EAEjB,EAET,iLACA,SAA+B9rB,EAAM9C,EAAI+L,GACrC,IAEIK,EAFAH,EAASjM,EAAG8C,EAAMiJ,GAClB6iB,GAAU,EAEd,MAAMhiB,EAAQxB,GAEd,SAASyB,IACL,MAAMjG,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGmG,OAAEA,EAASjN,EAAQkN,KAAEA,EAAOnN,EAAIoN,IAAEA,GAAQf,GAAUJ,GACjFmB,IACAZ,EAAiB1F,EAAY5D,EAAM,EAAG,EAAG6D,EAAUC,EAAOkG,EAAQE,IACtE,MAAM8hB,EAAavtB,IAAQqF,EACrBmoB,EAAWD,EAAanoB,EAC9B0C,GAAoB,IAAMkB,EAASzH,GAAM,EAAO,WAChDT,GAAKd,IACD,GAAIqtB,EAAS,CACT,GAAIrtB,GAAOwtB,EAQP,OAPAhiB,EAAK,EAAG,GACRxC,EAASzH,GAAM,EAAO,SACf8J,EAAMtB,GAGTlL,EAAQwM,EAAM3K,IAEX,EAEX,GAAIV,GAAOutB,EAAY,CACnB,MAAM5nB,EAAI4F,GAAQvL,EAAMutB,GAAcnoB,GACtCoG,EAAK,EAAI7F,EAAGA,EACf,CACJ,CACD,OAAO0nB,CAAO,GAErB,CAWD,OAtCAhiB,EAAMtB,GAAK,EA4BP/K,EAAY0L,GACZ5B,IAAOC,MAAK,KAER2B,EAASA,IACTY,GAAI,IAIRA,IAEG,CACHF,IAAIsiB,GACIA,GAAShjB,EAAOc,MAChBd,EAAOc,KAAK,EAAG,GAEf6hB,IACIxiB,GACAnE,EAAYnF,EAAMsJ,GACtBwiB,GAAU,EAEjB,EAET,kPwBxjCUhrB,EAEMf,EAAAsU,EAAAtT,iHAaJD,EAAmCf,EAAAoE,EAAApD,4GAqDKiC,EAAA8T,EAAA,mBAAAzP,MAAMiH,kDADlCxN,EAGEf,EAAA+W,EAAA/V,4UAJGsN,wBAAL7M,OAAID,GAAA,mhBAZwCe,EAAA8pB,EAAA,QAAAC,EAAA,UAAAhlB,MAAKsL,gFAGDrQ,EAAAgqB,EAAA,QAAAC,EAAA,UAAAllB,MAAKwM,SAAW,UAAYxM,MAAKsL,2EAGtCrQ,EAAA+iB,EAAA,QAAAmH,EAAA,UAAAnlB,MAAKsL,4EAGJrQ,EAAAmqB,EAAA,QAAAC,EAAA,UAAArlB,MAAKuM,UAAY,UAAYvM,MAAKsL,2MAlCjE3P,EAAAqX,EAAA,mBAAAhT,MAAKqL,iBAChB1P,EAAAqX,EAAA,QAAAhT,MAAKsL,WAEX3P,EAAAqX,EAAA,aAAAhT,EAAU,MAAAA,EAAoB,IAAgB,cAAhBA,KAAgE,kCAAAA,MAAKqL,wBACnGrL,EAAU,MAAAA,EAAoB,IAAgB,cAAhBA,UACPoD,IAArBpD,EAAqB,IAAaA,KAAmBA,EAAK,IACtB,oCAAAA,MAAKqL,wBACN,mCAAArL,MAAKqL,wBAC1CrL,MAAKqL,8DAjBArL,EAAS,YAFtBvG,EA2DMf,EAAAma,EAAAnZ,GAnDJjB,EAkDMoa,EAAAG,GAnCJva,EAMMua,EAAAtG,UAENjU,EAyBMua,EAAAF,uBAtBJra,EAqBMqa,EAAAR,GApBJ7Z,EAES6Z,EAAAvD,GADPtW,EAAkEsW,EAAAgW,UAEpEtsB,EAES6Z,EAAArD,GADPxW,EAAkGwW,EAAAgW,UAEpGxsB,EAES6Z,EAAAkL,GADP/kB,EAAiE+kB,EAAAQ,UAEnEvlB,EAES6Z,EAAAmL,GADPhlB,EAA+FglB,EAAA2H,UAEjG3sB,EAOM6Z,EAAA7F,6UAlB0C8C,GAAA,EAAAxP,EAAA,IAAAilB,KAAAA,EAAA,UAAAhlB,MAAKsL,gCAGDiE,GAAA,EAAAxP,EAAA,IAAAmlB,KAAAA,EAAA,UAAAllB,MAAKwM,SAAW,UAAYxM,MAAKsL,gCAGtCiE,GAAA,EAAAxP,EAAA,IAAAolB,KAAAA,EAAA,UAAAnlB,MAAKsL,gCAGJiE,GAAA,EAAAxP,EAAA,IAAAslB,KAAAA,EAAA,UAAArlB,MAAKuM,UAAY,UAAYvM,MAAKsL,uDAGzEtE,WAAL7M,OAAID,GAAA,EAAA,mHAAJC,qBArCawB,EAAAqX,EAAA,mBAAAhT,MAAKqL,+BAChB1P,EAAAqX,EAAA,QAAAhT,MAAKsL,2BAEX3P,EAAAqX,EAAA,aAAAhT,EAAU,MAAAA,EAAoB,IAAgB,cAAhBA,KAAgE,kCAAAA,MAAKqL,wBACnGrL,EAAU,MAAAA,EAAoB,IAAgB,cAAhBA,UACPoD,IAArBpD,EAAqB,IAAaA,KAAmBA,EAAK,IACtB,oCAAAA,MAAKqL,wBACN,mCAAArL,MAAKqL,wBAC1CrL,MAAKqL,gDAjBArL,EAAS,gNAsEtBvG,EAAuCf,EAAAoE,EAAApD,4GAqDCiC,EAAA8T,EAAA,mBAAAzP,MAAMiH,kDADlCxN,EAGEf,EAAA+W,EAAA/V,wUAJGsN,wBAAL7M,OAAID,GAAA,glBAZwCe,EAAA8pB,EAAA,QAAAC,EAAA,UAAAhlB,MAAKsL,gFAGDrQ,EAAAgqB,EAAA,QAAAC,EAAA,UAAAllB,MAAKwM,SAAW,UAAYxM,MAAKsL,0GAMrCrQ,EAAAmqB,EAAA,QAAAC,EAAA,UAAArlB,MAAKuM,UAAY,UAAYvM,MAAKsL,2MAlCjE3P,EAAAqX,EAAA,mBAAAhT,MAAKqL,iBAChB1P,EAAAqX,EAAA,QAAAhT,MAAKsL,WAEX3P,EAAAqX,EAAA,aAAAhT,EAAU,MAAAA,EAAoB,IAAgB,mBAAhBA,KAAqE,kCAAAA,MAAKqL,wBACxGrL,EAAU,MAAAA,EAAoB,IAAgB,mBAAhBA,UACPoD,IAArBpD,EAAqB,IAAaA,KAAmBA,EAAK,IACtB,oCAAAA,MAAKqL,wBACN,mCAAArL,MAAKqL,wBAC1CrL,MAAKqL,8DAjBArL,EAAS,YAFtBvG,EA2DMf,EAAAma,EAAAnZ,GAnDJjB,EAkDMoa,EAAAG,GAnCJva,EAMMua,EAAAtG,UAENjU,EAyBMua,EAAAF,uBAtBJra,EAqBMqa,EAAAR,GApBJ7Z,EAES6Z,EAAAvD,GADPtW,EAAkEsW,EAAAgW,UAEpEtsB,EAES6Z,EAAArD,GADPxW,EAAkGwW,EAAAgW,UAEpGxsB,EAES6Z,EAAAkL,UACT/kB,EAES6Z,EAAAmL,GADPhlB,EAA+FglB,EAAA2H,UAEjG3sB,EAOM6Z,EAAA7F,6UAlB0C8C,GAAA,EAAAxP,EAAA,IAAAilB,KAAAA,EAAA,UAAAhlB,MAAKsL,gCAGDiE,GAAA,EAAAxP,EAAA,IAAAmlB,KAAAA,EAAA,UAAAllB,MAAKwM,SAAW,UAAYxM,MAAKsL,gCAMrCiE,GAAA,EAAAxP,EAAA,IAAAslB,KAAAA,EAAA,UAAArlB,MAAKuM,UAAY,UAAYvM,MAAKsL,uDAGzEtE,WAAL7M,OAAID,GAAA,EAAA,mHAAJC,qBArCawB,EAAAqX,EAAA,mBAAAhT,MAAKqL,+BAChB1P,EAAAqX,EAAA,QAAAhT,MAAKsL,2BAEX3P,EAAAqX,EAAA,aAAAhT,EAAU,MAAAA,EAAoB,IAAgB,mBAAhBA,KAAqE,kCAAAA,MAAKqL,wBACxGrL,EAAU,MAAAA,EAAoB,IAAgB,mBAAhBA,UACPoD,IAArBpD,EAAqB,IAAaA,KAAmBA,EAAK,IACtB,oCAAAA,MAAKqL,wBACN,mCAAArL,MAAKqL,wBAC1CrL,MAAKqL,gDAjBArL,EAAS,+IAvG7BA,EAAY,IAAA4M,GAAA5M,wMANGA,EAAY,uBACVA,EAAQ,YAL9BvG,EAQSf,EAAA+W,EAAA/V,wDAPGsG,EAAgB,4CAGRA,EAAY,+BACVA,EAAQ,IAKzBA,EAAY,uNAlBNslB,YAEL9oB,SAAU,IACVqG,KAAM9F,EAAGqmB,IAA2B,qBAAI,IAAJrmB,2CA+Cb6D,IAAQA,EAAE2P,gBAAc,KA2ExB3P,IAAQA,EAAE2P,gBAAc,qBA1R/C,IAMAgV,EANAlC,GAAe,EACfmC,GAAqB,EACrBC,EAAS,GACTC,EAAc,GACdpd,GAAW,EACXqd,GAAe,EASnBjd,GAASM,WAAWzO,QAClBkrB,EAAYlrB,EAAKmP,MAAMxL,QAAQmO,IAAUA,EAAKxQ,iBAC9C6pB,EAAiBnrB,EAAKmP,MAAMxL,QAAQmO,GAASA,EAAKxQ,iBAClDyM,EAAW/N,EAAK+N,SAAQ,IAOtB,IACA8V,EACAC,EACAC,EACAsH,EAJA/G,GAAY,QAMVG,EAAa,CAAI9b,EAAOihB,KAExB,GAAAjhB,IAAUob,SACZvR,EAAA,EAAAqR,OAAchb,GACd2J,EAAA,EAAAsR,OAAmBjb,GACnB2J,EAAA,EAAAuR,OAAmBlb,QACnB2J,EAAA,EAAA6Y,OAAcxiB,QAISA,IAArBib,IAEF8F,EAAK3e,OAAO6Y,EAAkB,GAG9B8F,EAAK3e,OAAO8Y,EAAkB,EAAGF,GAEjC+F,MAAWA,GAEXpX,EAAA,EAAAqR,OAAchb,GACd2J,EAAA,EAAAsR,OAAmBjb,GACnB2J,EAAA,EAAAuR,OAAmBlb,GACnB2J,EAAA,EAAA6Y,OAAcxiB,GAGdyL,MAKEgX,EAAiBrlB,IACrBilB,EAAUK,QAAO,CACfxrB,KAAM,GACNgR,UAAoB,SAAT9K,EAAkBwG,GAAY,GAAG1M,KAAO0M,GAAY,GAAG1M,KAClE+Q,gBAA0B,SAAT7K,EAAkBwG,GAAY,GAAGC,WAAaD,GAAY,GAAGC,WAC9EzG,OACA3E,WAAW,EACX0Q,WAAW,EACXC,UAAU,IAGZqC,GAAY,EAGRA,EAAY,KAChB9B,EAAA,EAAA4Y,GAAe,GACfI,aAAaR,GACbA,EAAsBzY,iBACpBC,EAAA,EAAA4Y,GAAe,EAAK,GACnB,KAGHjd,GAASjJ,QAAQ4Q,IACfA,EAAM3G,MAAY,IAAAgc,KAAmBD,GAC9BpV,KAITxG,GAAS,IAAK6b,KAAmBD,GAAS,EAGtCO,EAAU,CAAI9iB,EAAOihB,KACzBA,EAAK3e,OAAOtC,EAAO,GAEnB2L,GAAY,EAGRoX,EAAe,CAAI/iB,EAAOihB,KACxB,MAAA+B,GAAmB/B,EAAKjhB,GAAOrH,UACrCsoB,EAAKjhB,GAAOrH,WAAasoB,EAAKjhB,GAAOrH,UAG/B,MAAAsqB,MAAmBV,GACnBW,MAAwBV,GAE1BQ,OAEFT,EAAS,IAAOU,KAAiBC,GAAmBloB,QAAQmO,IAAUA,EAAKxQ,iBAC3E6pB,EAAc,IAAOS,KAAiBC,GAAmBloB,QAAQmO,GAASA,EAAKxQ,mBAG/E4pB,EAAS,IAAOW,KAAsBD,GAAcjoB,QAAQmO,IAAUA,EAAKxQ,iBAC3E6pB,EAAc,IAAOU,KAAsBD,GAAcjoB,QAAQmO,GAASA,EAAKxQ,cAGjFgT,GAAY,EAGRwX,EAAe,CAAInjB,EAAOihB,KAC9BA,EAAKjhB,GAAOqJ,WAAa4X,EAAKjhB,GAAOqJ,UAErCsC,GAAY,EAGRyX,EAAe,CAAApjB,EAAOihB,EAAMlT,KAChCkT,EAAKjhB,GAAOmI,gBAAkB4F,EAAMhK,WACpCkd,EAAKjhB,GAAOoI,UAAY2F,EAAM3W,KAE9BuU,GAAY,EAGR0X,EAAS,CAAIrjB,EAAOihB,KAClB,MAAAqC,GAAarC,EAAKjhB,GAAOsJ,SAG/BiZ,EAAUtvB,SAASkW,GAASA,EAAKG,UAAW,IAC5CkZ,EAAevvB,SAASkW,GAASA,EAAKG,UAAW,IAG7Cga,IACFrC,EAAKjhB,GAAOsJ,UAAW,GAGzBqC,GAAY,6BA3HQ,KACpB9B,EAAA,EAAAsW,GAAgBA,EAAY,6BA+HxB,IAAAoD,EAAMjB,SACVA,GAAqB,GAGnBhpB,SAAU,IACVqG,IAAM,CAAA9F,EAAGqmB,IAA2B,qBAAI,IAAJrmB,SAAe0pB,EAAM,OAAS,+BAjJ1C,KAC1B1Z,EAAA,EAAAsW,GAAe,GACfmC,GAAqB,CAAI,EA0KwC,IAAAK,EAAc,QACd,IAAAA,EAAc,aA4C/C9Y,EAAA,EAAA8R,GAAY,EAAI,OACZ9R,EAAA,EAAA8R,GAAY,EAAI,OACf9R,EAAA,EAAA8R,GAAY,EAAK,KASdmH,EAAW9iB,EAAOuiB,MAGlBc,EAAUrjB,EAAOuiB,MAGjBQ,EAAgB/iB,EAAOuiB,MAGvBY,EAAgBnjB,EAAOuiB,GAOzB,CAAAviB,EAAA+N,IAAAqV,EAAYpjB,EAAOuiB,EAAWxU,WAhDpClE,EAAA,EAAAqR,EAAc/R,GAAMU,EAAA,EAAAsR,EAAmBnb,GAAO6J,EAAA,EAAA6Y,EAAc,YAAW,KAC3E5G,EAAc9b,EAAOuiB,MACzB7kB,KAAQA,EAAE2P,iBAAkBxD,EAAA,EAAAuR,EAAmBpb,EAAK,OA8F5C6J,EAAA,EAAA8R,GAAY,EAAI,OACZ9R,EAAA,EAAA8R,GAAY,EAAI,OACf9R,EAAA,EAAA8R,GAAY,EAAK,KASdmH,EAAW9iB,EAAOwiB,MAGlBa,EAAUrjB,EAAOwiB,MAGjBO,EAAgB/iB,EAAOwiB,MAGvBW,EAAgBnjB,EAAOwiB,GAOzB,CAAAxiB,EAAA+N,IAAAqV,EAAYpjB,EAAOwiB,EAAgBzU,WAhDzClE,EAAA,EAAAqR,EAAc/R,GAAMU,EAAA,EAAAsR,EAAmBnb,GAAO6J,EAAA,EAAA6Y,EAAc,iBAAgB,KAChF5G,EAAc9b,EAAOwiB,MACzB9kB,KAAQA,EAAE2P,iBAAkBxD,EAAA,EAAAuR,EAAmBpb,EAAK,0OCtPnE4D,wBAAL3M,OAAID,GAAA,oVANuC8F,EAAQ,YAAzDvG,EAaMf,EAAA4Z,EAAA5Y,GAZJjB,EAEM6Z,EAAA5F,UAENjU,EAOM6Z,EAAA7F,+EANG3F,WAAL3M,OAAID,GAAA,EAAA,mHAAJC,+BAN2C6F,EAAQ,gLAS7C4O,EAAA5O,KAAK3F,KAAI,8DAD0B3D,EAAAqQ,EAAAoV,IAAAD,EAAA,+BAAAlc,KAAK+G,MAAG9L,EAAA8L,EAAA,MAAAmV,GAAQjhB,EAAA8L,EAAA,MAAA/G,KAAK3F,gEADrDY,EAAA1E,EAAA,OAAAwb,EAAA/R,KAAK6G,2CAAdpN,EAGIf,EAAAnC,EAAAmD,GAFFjB,EAAoElC,EAAAwQ,UACpEtO,EAAkBlC,EAAAuG,sEAVvBkD,EAAY,IAAA4M,GAAA5M,mNANGA,EAAY,uBACVA,EAAQ,YAL9BvG,EAQSf,EAAA+W,EAAA/V,wDAPGsG,EAAwB,0CAGhBA,EAAY,4BACVA,EAAQ,IAKzBA,EAAY,oNAlBN0mB,YAELlqB,SAAU,IACVqG,KAAM9F,EAAGqmB,IAA2B,qBAAI,IAAJrmB,uCAfpC,IAAAsmB,GAAe,EACf/a,GAAW,EAEfI,GAASM,WAAWzO,QAClB+N,EAAW/N,EAAK+N,SAAQ,eAGI,KAC5ByE,EAAA,EAAAsW,GAAgBA,EAAY,qMCyCrB,OAAc,IAAdrjB,KAAe4R,GAEI,IAAd5R,KAAe2R,GAED,IAAd3R,KAAeqS,GAED,IAAdrS,KAAeqf,GAED,IAAdrf,KAAeof,GAED,IAAdpf,KAAemf,GAED,IAAdnf,KAAe4f,QAAf,uBAMH1B,EAAAnZ,MAAM4hB,yBAAXxsB,OAAID,GAAA,2pBAzB8B8F,EAAQ,YAAhDvG,EAsCMf,EAAAsa,EAAAtZ,GArCJjB,EAEMua,EAAAtG,UAENjU,EAiBMua,EAAAvG,yBAENhU,EAQMua,EAAAV,qDAEN7Z,EAGMua,EAAAF,GAFJra,EAA2Eqa,EAAA/D,UAC3EtW,EAA4Eqa,EAAA7D,2BAD1DjP,EAAQ,gBACRA,EAAQ,gGAXnBke,EAAAnZ,MAAM4hB,YAAXxsB,OAAID,GAAA,EAAA,mHAAJC,+BAzBkC6F,EAAQ,uUAoB1CvG,EAA+Gf,EAAA+U,EAAA/T,gNAF/GD,EAAuHf,EAAA+U,EAAA/T,iKAFvHD,EAAsFf,EAAA+U,EAAA/T,wQAFtFD,EAAqKf,EAAA+U,EAAA/T,+QAFrKD,EAA4Kf,EAAA+U,EAAA/T,oTAF5KD,EAAiNf,EAAA+U,EAAA/T,+QAFjND,EAA4Kf,EAAA+U,EAAA/T,4IAoB5JsC,EAAAyR,EAAA,SAAAzN,OAAUA,EAAS,YAFnCvG,EAIQf,EAAA+U,EAAA/T,+CAFQsC,EAAAyR,EAAA,SAAAzN,OAAUA,EAAS,8DA7BtCA,EAAY,IAAA4M,GAAA5M,+LANGA,EAAY,uBACVA,EAAQ,YAL9BvG,EAQSf,EAAA+W,EAAA/V,wDAPGsG,EAAe,0CAGPA,EAAY,4BACVA,EAAQ,IAKzBA,EAAY,2MAnCT,MAAA2mB,GAAc,WAiBXC,YAELpqB,SAAU,IACVqG,KAAM9F,EAAGqmB,IAA2B,qBAAI,IAAJrmB,uCA3BpC,IAAAsmB,GAAe,EACf/a,GAAW,EAEfI,GAASM,WAAWzO,QAClB+N,EAAW/N,EAAK+N,SAAQ,QAKtBue,EAAYxkB,KAAKgM,MAAMhM,KAAKiM,SAAWqY,iBAE7B,KACZ5Z,EAAA,EAAA8Z,GAAaA,EAAY,GAAKF,GAAW,EAG7B,KACZ5Z,EAAA,EAAA8Z,GAAaA,EAAY,EAAIF,IAAeA,GAAW,EAGpC,KACnB5Z,EAAA,EAAAsW,GAAgBA,EAAY,EAoDLngB,GAAA6J,EAAA,EAAA8Z,EAAY3jB,gNCnCTlD,EAAe,uYARpCA,EAAiB,GACpB,qBAAuBA,EAAoB,GAAG,IAC9CA,EAAe,GAAC7F,OAAS,EACzB,yBAA2B6F,EAAe,GAAG,KAC7C,yBAA2BA,EAAkB,GAAG,2CALtDvG,EAeOf,EAAAouB,EAAAptB,8MANuBsG,EAAe,0GARpCA,EAAiB,GACpB,qBAAuBA,EAAoB,GAAG,IAC9CA,EAAe,GAAC7F,OAAS,EACzB,yBAA2B6F,EAAe,GAAG,KAC7C,yBAA2BA,EAAkB,GAAG,2cAtBhD8H,EAEA9B,EAEA2J,EAHA9H,GAAoB,SAKxBa,GAASM,WAAWzO,QAClBuN,EAAkBvN,EAAKuN,qBACvBD,EAAoBtN,EAAKsN,uBACzB7B,EAAuBzL,EAAKyL,qBAAoB,mCAIjD+G,EAAA,EAAEqQ,EAAqB,oBAAsBtV,EAAkB,IAAM8I,GAAoB9I,gDCzBhF,oEAAQ,CAClBpP,OAAQ7B,SAASkwB"}