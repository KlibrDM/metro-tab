{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/config.js","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/data/storage.js","../../src/components/Cover.svelte","../../src/components/QuickNav.svelte","../../src/components/SearchBar/Clock.svelte","../../src/components/SearchBar/RandomGithub.svelte","../../src/components/SearchBar/SearchBar.svelte","../../src/components/SpeedDial.svelte","../../src/components/Settings/SettingsForm.svelte","../../src/components/Settings/CustomBackgrounds.svelte","../../src/components/Settings/Backgrounds.svelte","../../src/components/Settings/Pages.svelte","../../src/components/Settings/Settings.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*Default settings*/\r\nexport const yourName = \"New Tab\";\r\nexport const isBackgroundWhite = false;\r\nexport const showCover = true;\r\nexport const clockBackground = false;\r\nexport const backgroundImage = \"bg1\";\r\nexport const tileMinWidth = 24;\r\nexport const tileHeight = 55;\r\nexport const tileGap = 0;\r\nexport const navbarOpacity = 0;\r\nexport const navbarColor = { r: 58, g: 153, b: 255 };\r\nexport const coverColor = { r: 58, g: 153, b: 255 };\r\nexport const coverTextColor = { r: 255, g: 255, b: 255 };\r\n\r\nexport const pages = [\r\n  {\r\n    link: \"https://www.google.com\",\r\n    imageName: \"google.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.facebook.com\",\r\n    imageName: \"facebook.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.youtube.com\",\r\n    imageName: \"youtube.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.yahoo.com\",\r\n    imageName: \"yahoo.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.reddit.com\",\r\n    imageName: \"reddit.jpg\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    link: \"https://www.netflix.com/browse\",\r\n    imageName: \"netflix.jpg\",\r\n    isActive: true,\r\n  },\r\n];\r\n\r\nexport const backgrounds = [\r\n  \"bg1\",\r\n  \"bg2\",\r\n  \"bg3\",\r\n  \"bg4\",\r\n  \"bg5\",\r\n  \"bg6\",\r\n  \"bg7\",\r\n  \"bg8\",\r\n  \"bg9\",\r\n  \"bg10\",\r\n  \"bg11\",\r\n  \"bg12\",\r\n  \"bg13\",\r\n  \"bg14\",\r\n  \"bg15\",\r\n];\r\n\r\n//Known pages are the ones that have a thumbnail image\r\nexport const knownPages = [\r\n  \"google\",\r\n  \"facebook\",\r\n  \"youtube\",\r\n  \"yahoo\",\r\n  \"reddit\",\r\n  \"netflix\",\r\n  \"github\",\r\n  \"emag\",\r\n  \"pcg\",\r\n  \"pcgarage\",\r\n  \"amazon\",\r\n  \"ebay\",\r\n  \"craigslist\",\r\n  \"twitch\",\r\n  \"9gag\",\r\n  \"accuweather\",\r\n  \"yr\",\r\n  \"twitter\",\r\n  \"vk\",\r\n  \"gmail\",\r\n  \"maps.google\",\r\n  \"docs.google\",\r\n  \"translate.google\",\r\n  \"drive.google\",\r\n  \"onedrive\",\r\n  \"onedrive.live\",\r\n  \"instagram\",\r\n  \"pinterest\",\r\n  \"tumblr\",\r\n  \"stackoverflow\",\r\n  \"codecademy\",\r\n  \"w3schools\",\r\n  \"php\",\r\n  \"thepiratebay\",\r\n  \"piratebay\",\r\n  \"pirateship\",\r\n  \"pirateproxy\",\r\n  \"filelist\",\r\n  \"kickass\",\r\n  \"kat\",\r\n  \"katcr\",\r\n  \"aliexpress\",\r\n  \"alibaba\",\r\n  \"paypal\",\r\n  \"olx\",\r\n  \"baidu\",\r\n  \"wikipedia\",\r\n  \"tmall\",\r\n  \"live\",\r\n  \"microsoft\",\r\n  \"list.tmall\",\r\n  \"office\",\r\n  \"msn\",\r\n  \"pages.tmall\",\r\n  \"yandex\",\r\n  \"whatsapp\",\r\n  \"spotify\",\r\n  \"linkedin\",\r\n  \"csdn\",\r\n  \"bing\",\r\n];\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const userData = writable({});\r\n","import * as CONFIG from \"./config\";\r\nimport { userData } from \"../store\";\r\n\r\nexport const saveConfig = (data) => {\r\n  localStorage.setItem(\"ft\", true);\r\n  localStorage.setItem(\"yourName\", data.yourName);\r\n  localStorage.setItem(\"isBackgroundWhite\", data.isBackgroundWhite);\r\n  localStorage.setItem(\"showCover\", data.showCover);\r\n  localStorage.setItem(\"clockBackground\", data.clockBackground);\r\n  localStorage.setItem(\"backgroundImage\", data.backgroundImage);\r\n  localStorage.setItem(\"tileMinWidth\", data.tileMinWidth);\r\n  localStorage.setItem(\"tileHeight\", data.tileHeight);\r\n  localStorage.setItem(\"tileGap\", data.tileGap);\r\n  localStorage.setItem(\"navbarOpacity\", data.navbarOpacity);\r\n  localStorage.setItem(\"navbarColor\", JSON.stringify(data.navbarColor));\r\n  localStorage.setItem(\"coverColor\", JSON.stringify(data.coverColor));\r\n  localStorage.setItem(\"coverTextColor\", JSON.stringify(data.coverTextColor));\r\n  localStorage.setItem(\"pages\", JSON.stringify(data.pages));\r\n};\r\n\r\nexport const saveBackground = (bg) => {\r\n  localStorage.setItem(\"backgroundImage\", bg);\r\n};\r\n\r\n/*Load data from localstorage\r\nIf the extension can't get the item from localstorage, use the value from config\r\n(simple || if not bool, ? : if bool)*/\r\n//prettier-ignore\r\nconst data = {\r\n  yourName: \r\n    localStorage.getItem(\"yourName\") ||\r\n    CONFIG.yourName,\r\n\r\n  isBackgroundWhite:\r\n    localStorage.getItem(\"isBackgroundWhite\") === null\r\n    ? CONFIG.isBackgroundWhite\r\n    : localStorage.getItem(\"isBackgroundWhite\") === \"true\",\r\n\r\n  showCover: \r\n    localStorage.getItem(\"showCover\") === null \r\n    ? CONFIG.showCover\r\n    : localStorage.getItem(\"showCover\") === \"true\",\r\n\r\n  clockBackground:\r\n    localStorage.getItem(\"clockBackground\") === null\r\n    ? CONFIG.clockBackground\r\n    : localStorage.getItem(\"clockBackground\") === \"true\",\r\n\r\n  backgroundImage:\r\n    localStorage.getItem(\"backgroundImage\") ||\r\n    CONFIG.backgroundImage,\r\n\r\n  tileMinWidth:\r\n    localStorage.getItem(\"tileMinWidth\") ||\r\n    CONFIG.tileMinWidth,\r\n\r\n  tileHeight:\r\n    localStorage.getItem(\"tileHeight\") ||\r\n    CONFIG.tileHeight,\r\n\r\n  tileGap:\r\n    localStorage.getItem(\"tileGap\") ||\r\n    CONFIG.tileGap,\r\n\r\n  navbarOpacity:\r\n    localStorage.getItem(\"navbarOpacity\") ||\r\n    CONFIG.navbarOpacity,\r\n\r\n  navbarColor:\r\n    JSON.parse(localStorage.getItem(\"navbarColor\")) ||\r\n    CONFIG.navbarColor,\r\n\r\n  coverColor:\r\n    JSON.parse(localStorage.getItem(\"coverColor\")) ||\r\n    CONFIG.coverColor,\r\n\r\n  coverTextColor:\r\n    JSON.parse(localStorage.getItem(\"coverTextColor\")) ||\r\n    CONFIG.coverTextColor,\r\n\r\n  pages:\r\n    JSON.parse(localStorage.getItem(\"pages\")) ||\r\n    CONFIG.pages,\r\n};\r\n\r\n//After loading the data, set it to state\r\nuserData.set(data);\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let yourName;\r\n  let showCover;\r\n  let coverColor;\r\n  let coverTextColor;\r\n\r\n  userData.subscribe((data) => {\r\n    yourName = data.yourName;\r\n    showCover = data.showCover;\r\n    coverColor = data.coverColor;\r\n    coverTextColor = data.coverTextColor;\r\n  });\r\n\r\n  //Creating a second variable for showCover\r\n  //that doesn't change when state updates\r\n  //Otherwise the cover would show when saving changes\r\n  let showCoverAtLoad = showCover;\r\n\r\n  //Any time showCoverAtLoad changes (it shouldn't)\r\n  //Hide it after 1.5 seconds\r\n  $: if (showCoverAtLoad) {\r\n    setTimeout(function () {\r\n      showCoverAtLoad = false;\r\n    }, 1500);\r\n  }\r\n</script>\r\n\r\n{#if showCoverAtLoad}\r\n  <div\r\n    id=\"cover\"\r\n    style=\"\r\n      background-color: \r\n        rgb({coverColor.r},{coverColor.g},{coverColor.b}); \r\n      color: \r\n        rgb({coverTextColor.r},{coverTextColor.g},{coverTextColor.b});\"\r\n  >\r\n    <div id=\"coverNameBox\">\r\n      <h1>{yourName}</h1>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #cover {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    animation: remove-cover-up 0.35s;\r\n    animation-fill-mode: forwards;\r\n    animation-delay: 0.8s;\r\n    z-index: 995;\r\n  }\r\n  #coverNameBox {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n  #coverNameBox h1 {\r\n    font-size: 9vw;\r\n    font-weight: 500;\r\n    animation: title-disappear 0.35s;\r\n    animation-delay: 0.35s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 999;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n</style>\r\n","<script>\r\n  const onClickChromeTabs = (elem) => {\r\n    chrome.tabs.create({ url: `chrome://${elem}` });\r\n  };\r\n</script>\r\n\r\n<div id=\"browserQuickNavBox\">\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"history\")}>\r\n    <i class=\"fas fa-history browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"downloads\")}>\r\n    <i class=\"fas fa-download browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"bookmarks\")}>\r\n    <i class=\"fas fa-bookmark browserQuickNavButton\" />\r\n  </a>\r\n  <!-- svelte-ignore a11y-invalid-attribute -->\r\n  <a href=\"#\" on:click={() => onClickChromeTabs(\"extensions\")}>\r\n    <i class=\"fas fa-puzzle-piece browserQuickNavButton\" />\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  #browserQuickNavBox {\r\n    position: absolute;\r\n    left: 2vw;\r\n    z-index: 20;\r\n  }\r\n  .browserQuickNavButton {\r\n    color: rgba(220, 220, 220, 0.75);\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    padding: 5px 10px 5px 10px;\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n\r\n  let clockBackground;\r\n\r\n  userData.subscribe((data) => {\r\n    clockBackground = data.clockBackground;\r\n  });\r\n\r\n  let time = new Date();\r\n  let hours = (\"0\" + time.getHours()).slice(-2);\r\n  let minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n\r\n  //Update time every second\r\n  setInterval(() => {\r\n    time = new Date();\r\n    hours = (\"0\" + time.getHours()).slice(-2);\r\n    minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n  }, 1000);\r\n</script>\r\n\r\n<!--Use clockbg class only if clockBackground is true-->\r\n<div id=\"time\" class:clockbg={clockBackground}>\r\n  {hours}:<span id=\"minutes\">{minutes}</span>\r\n</div>\r\n\r\n<style>\r\n  #time {\r\n    position: absolute;\r\n    font-size: 3.6vw;\r\n    right: 2vw;\r\n    color: white;\r\n    border-radius: 12px;\r\n    padding: 3px 5px;\r\n    line-height: 4.6vw;\r\n  }\r\n  #minutes {\r\n    font-size: 2.6vw;\r\n    color: rgb(236, 236, 236);\r\n  }\r\n  .clockbg {\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #time {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1921px) and (max-height: 769px) {\r\n    #time {\r\n      font-size: 3vw;\r\n      line-height: 3.4vw;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  let showGithub = false;\r\n\r\n  //innerWidth will get the window innerWidth\r\n  let innerWidth = 0;\r\n\r\n  setInterval(function () {\r\n    let chance = Math.floor(Math.random() * 200);\r\n\r\n    //Only show github logo if random chance matches\r\n    //and window width is bigger than 799 pixels\r\n    if (chance == 1 && innerWidth > 799) {\r\n      showGithub = true;\r\n    } else {\r\n      showGithub = false;\r\n    }\r\n  }, 15000);\r\n</script>\r\n\r\n<svelte:window bind:innerWidth />\r\n\r\n{#if showGithub}\r\n  <div id=\"randomGithub\">\r\n    <a href=\"https://github.com/KlibrDM\">\r\n      <i class=\"fab fa-github\" style=\"color: white\" />\r\n    </a>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #randomGithub {\r\n    position: absolute;\r\n    left: 2vw;\r\n    font-size: 3vw;\r\n    animation: wobble-hor-bottom 0.8s infinite;\r\n  }\r\n  @media screen and (max-width: 799px) {\r\n    #randomGithub {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import Clock from \"./Clock.svelte\";\r\n  import RandomGithub from \"./RandomGithub.svelte\";\r\n  import { userData } from \"../../store\";\r\n\r\n  let searchQuery = \"\"; //Binded to input\r\n  let navbarOpacity;\r\n  let navbarColor;\r\n\r\n  userData.subscribe((data) => {\r\n    navbarOpacity = data.navbarOpacity;\r\n    navbarColor = data.navbarColor;\r\n  });\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery !== \"\") {\r\n      window.location.replace(\r\n        \"https://www.google.com/search?q=\" + escapeHTML(searchQuery)\r\n      );\r\n    }\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n</script>\r\n\r\n<div\r\n  id=\"searchbarBox\"\r\n  style=\"background-color: rgba({navbarColor.r},{navbarColor.g},{navbarColor.b},{navbarOpacity})\"\r\n>\r\n  <RandomGithub />\r\n  <form id=\"searchbar\" on:submit={handleSearch}>\r\n    <input\r\n      id=\"searchInput\"\r\n      type=\"search\"\r\n      autocomplete=\"off\"\r\n      placeholder=\"Search\"\r\n      bind:value={searchQuery}\r\n    />\r\n    <button id=\"searchButton\">\r\n      <i class=\"fas fa-search\" style=\"color: white\" />\r\n    </button>\r\n  </form>\r\n  <Clock />\r\n</div>\r\n\r\n<style>\r\n  #searchbarBox {\r\n    flex-basis: 25%;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  #searchbar {\r\n    width: 50vw;\r\n    border-radius: 100px;\r\n    border: 2px solid;\r\n    border-color: rgba(220, 220, 220, 0.4);\r\n    display: flex;\r\n    background-color: rgba(100, 100, 100, 0.25);\r\n  }\r\n  #searchInput {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    color: white;\r\n    text-indent: 15px;\r\n    border: 0;\r\n    min-height: 40px;\r\n    height: 7vh;\r\n    min-width: 50px;\r\n    flex-grow: 1;\r\n    font-size: 1.1em;\r\n  }\r\n  #searchInput::placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput::-ms-input-placeholder {\r\n    color: white;\r\n  }\r\n  #searchInput:focus {\r\n    outline: none;\r\n  }\r\n  #searchInput:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 30px white inset !important;\r\n    box-shadow: 0 0 0 30px white inset !important;\r\n    border-radius: 100px;\r\n  }\r\n  #searchButton {\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border: 0;\r\n    color: white;\r\n  }\r\n  #searchButton:focus {\r\n    border-radius: 100px;\r\n    outline: none !important;\r\n    outline-style: none;\r\n    box-shadow: none;\r\n    border-color: transparent;\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    #searchbar {\r\n      width: 75vw;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../store\";\r\n\r\n  let pages = [];\r\n  let tileMinWidth;\r\n  let tileHeight;\r\n  let tileGap;\r\n\r\n  userData.subscribe((data) => {\r\n    pages = data.pages;\r\n    tileMinWidth = data.tileMinWidth;\r\n    tileHeight = data.tileHeight;\r\n    tileGap = data.tileGap;\r\n  });\r\n</script>\r\n\r\n<!--This will show the pages!!!-->\r\n<div class=\"speedDial\">\r\n  <div class=\"speedDialBox\">\r\n    <div class=\"buttons\" style=\"gap: {tileGap}px\">\r\n      {#each pages as page}\r\n        {#if page.isActive}\r\n          <!-- svelte-ignore a11y-missing-content -->\r\n          <a\r\n            href={page.link}\r\n            class=\"pageButton\"\r\n            style=\" background-image: url('static/images/thumbnails/{page.imageName}');\r\n                    min-width: {tileMinWidth}vh;\r\n                    height: {tileHeight}vh;\"\r\n          />\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .speedDialBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n    overflow-x: hidden;\r\n    padding-top: 2em;\r\n    padding-bottom: 2em;\r\n    box-sizing: border-box;\r\n  }\r\n  .buttons {\r\n    width: 75vw;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 0px;\r\n  }\r\n  .pageButton {\r\n    min-width: 180px;\r\n    flex-grow: 1;\r\n    background-position: center;\r\n    background-size: cover;\r\n    z-index: 0;\r\n    box-shadow: 0px 0px 10px rgba(20, 20, 20, 0.2);\r\n  }\r\n  .pageButton:hover {\r\n    animation: pop-out 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 2;\r\n  }\r\n  .pageButton:not(:hover) {\r\n    animation: pop-back 0.25s;\r\n    animation-fill-mode: forwards;\r\n    z-index: 1;\r\n    transition: z-index 0.25s;\r\n  }\r\n</style>\r\n","<script>\r\n  export let settingsData;\r\n  export let saveSettings;\r\n  let unsavedSettings = false;\r\n</script>\r\n\r\n<form id=\"settingsform\">\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_yourName\">Your name</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"set_yourName\"\r\n      name=\"set_yourName\"\r\n      class=\"settingsTextInput\"\r\n      bind:value={settingsData.yourName}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_isBackgroundWhite\">White background</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_isBackgroundWhite\"\r\n      name=\"set_isBackgroundWhite\"\r\n      bind:checked={settingsData.isBackgroundWhite}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_showCover\">Show cover</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_showCover\"\r\n      name=\"set_showCover\"\r\n      bind:checked={settingsData.showCover}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_clockBackground\">Clock background</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"set_clockBackground\"\r\n      name=\"set_clockBackground\"\r\n      bind:checked={settingsData.clockBackground}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileMinimumWidth\">Tile minimum width</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"10\"\r\n      max=\"300\"\r\n      step=\"1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileMinimumWidth\"\r\n      name=\"set_tileMinimumWidth\"\r\n      bind:value={settingsData.tileMinWidth}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileHeight\">Tile height</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"200\"\r\n      step=\"1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileHeight\"\r\n      name=\"set_tileHeight\"\r\n      bind:value={settingsData.tileHeight}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_tileGap\">Tile gap</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"500\"\r\n      step=\"1\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_tileGap\"\r\n      name=\"set_tileGap\"\r\n      bind:value={settingsData.tileGap}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"set_navbarOpacity\">Navbar opacity</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"1\"\r\n      step=\"0.01\"\r\n      class=\"settingsNumberInput\"\r\n      id=\"set_navbarOpacity\"\r\n      name=\"set_navbarOpacity\"\r\n      bind:value={settingsData.navbarOpacity}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Navbar color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorR\"\r\n      name=\"set_navbarColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.navbarColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorG\"\r\n      name=\"set_navbarColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.navbarColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_navbarColorB\"\r\n      name=\"set_navbarColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.navbarColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Cover color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorR\"\r\n      name=\"set_coverColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.coverColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorG\"\r\n      name=\"set_coverColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.coverColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverColorB\"\r\n      name=\"set_coverColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.coverColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  <div class=\"settingsInput\">\r\n    <label for=\"\">Cover text color</label>\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorR\"\r\n      name=\"set_coverTextColorR\"\r\n      style=\"border: 1px solid #fc4343;\"\r\n      bind:value={settingsData.coverTextColor.r}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorG\"\r\n      name=\"set_coverTextColorG\"\r\n      style=\"border: 1px solid #24b143;\"\r\n      bind:value={settingsData.coverTextColor.g}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n    <input\r\n      type=\"number\"\r\n      min=\"0\"\r\n      max=\"255\"\r\n      class=\"settingsMultiNumberInput\"\r\n      id=\"set_coverTextColorB\"\r\n      name=\"set_coverTextColorB\"\r\n      style=\"border: 1px solid #4286f4;\"\r\n      bind:value={settingsData.coverTextColor.b}\r\n      on:input={() => {\r\n        unsavedSettings = true;\r\n      }}\r\n    />\r\n  </div>\r\n\r\n  {#if unsavedSettings}\r\n    <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n  {/if}\r\n\r\n  <button\r\n    on:click={(e) => {\r\n      saveSettings(settingsData, e);\r\n      unsavedSettings = false;\r\n    }}\r\n    type=\"submit\"\r\n    class=\"saveSettingsButton\"\r\n  >\r\n    Save\r\n  </button>\r\n</form>\r\n\r\n<style>\r\n  .settingsInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 5px;\r\n  }\r\n  .settingsInput label {\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n  }\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .settingsNumberInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .settingsMultiNumberInput {\r\n    width: 50px;\r\n    margin-right: 1px;\r\n    padding: 2px 4px;\r\n    border-radius: 10px;\r\n    outline: none;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsMultiNumberInput {\r\n      width: 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  export let changeBackground;\r\n  let bg, fileinput;\r\n\r\n  const onFileSelected = (e) => {\r\n    let image = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (e) => {\r\n      bg = e.target.result;\r\n      changeBackground(bg);\r\n    };\r\n  };\r\n</script>\r\n\r\n<div id=\"customBackgrounds\">\r\n  <h4>Custom Background</h4>\r\n  <button\r\n    class=\"chan\"\r\n    on:click={() => {\r\n      fileinput.click();\r\n    }}\r\n  >\r\n    Upload image\r\n  </button>\r\n  <input\r\n    style=\"display:none\"\r\n    type=\"file\"\r\n    accept=\".jpg, .jpeg, .png\"\r\n    on:change={(e) => onFileSelected(e)}\r\n    bind:this={fileinput}\r\n  />\r\n</div>\r\n\r\n<style>\r\n  h4 {\r\n    margin-block-start: 0.8em;\r\n    margin-block-end: 0.2em;\r\n  }\r\n  button {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n  }\r\n</style>\r\n","<script>\r\n  import CustomBackgrounds from \"./CustomBackgrounds.svelte\";\r\n\r\n  export let backgrounds;\r\n  export let changeBackground;\r\n</script>\r\n\r\n<div id=\"settingsBackgrounds\">\r\n  {#each backgrounds as bg, index}\r\n    <img\r\n      src=\"static/images/bg/{bg}.jpg\"\r\n      alt=\"Background {index}\"\r\n      class=\"backgroundImageSelector\"\r\n      on:click={() => changeBackground(bg)}\r\n    />\r\n  {/each}\r\n</div>\r\n<small>\r\n  Background images provided by <a href=\"https://pixabay.com/\">Pixabay</a>\r\n</small>\r\n<CustomBackgrounds {changeBackground} />\r\n\r\n<style>\r\n  #settingsBackgrounds {\r\n    white-space: nowrap;\r\n    overflow-x: scroll;\r\n    display: flex;\r\n    gap: 3px;\r\n  }\r\n  .backgroundImageSelector {\r\n    max-width: 100px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n","<script>\r\n  export let settingsData;\r\n  export let deletePage;\r\n  export let addPage;\r\n  export let saveSettings;\r\n  export let movePage;\r\n  let unsavedPages = false;\r\n  let addPageInput = \"\"; //Binded to input\r\n</script>\r\n\r\n<div id=\"settingsPages\">\r\n  <div id=\"settingsPagesList\">\r\n    {#each settingsData.pages as page, index}\r\n      <div class=\"settingsPagesListPage\">\r\n        <div class=\"settingsPagesGroupLeft\">\r\n          <div class=\"settingsPagesMoveButtons\">\r\n            <button\r\n              on:click={() => {\r\n                movePage(index, \"up\");\r\n                unsavedPages = true;\r\n              }}\r\n            >\r\n              <i class=\"fa-solid fa-angle-up\" />\r\n            </button>\r\n            <button\r\n              on:click={() => {\r\n                movePage(index, \"down\");\r\n                unsavedPages = true;\r\n              }}\r\n            >\r\n              <i class=\"fa-solid fa-angle-down\" />\r\n            </button>\r\n          </div>\r\n          <label for=\"page\">{page.link}</label>\r\n        </div>\r\n        <div class=\"settingsPageListButtons\">\r\n          <input type=\"checkbox\" name=\"page\" bind:checked={page.isActive} />\r\n          <input\r\n            on:click={() => {\r\n              deletePage(index);\r\n              unsavedPages = true;\r\n            }}\r\n            type=\"button\"\r\n            class=\"pageDeleteButton\"\r\n            value=\"X\"\r\n          />\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <form class=\"settingsPageInput\">\r\n    <label for=\"set_newPageBox\">Link</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"set_newPageBox\"\r\n      class=\"settingsTextInput\"\r\n      bind:value={addPageInput}\r\n    />\r\n    <button\r\n      on:click={(e) => {\r\n        addPage(addPageInput, e);\r\n\r\n        //Clear page input after adding it\r\n        addPageInput = \"\";\r\n\r\n        unsavedPages = true;\r\n      }}\r\n      type=\"submit\"\r\n      class=\"addPageButton\"\r\n    >\r\n      Add\r\n    </button>\r\n  </form>\r\n\r\n  {#if unsavedPages}\r\n    <small class=\"unsavedWarning\">You have unsaved settings.</small>\r\n  {/if}\r\n\r\n  <button\r\n    on:click={(e) => {\r\n      saveSettings(settingsData, e);\r\n      unsavedPages = false;\r\n    }}\r\n    type=\"submit\"\r\n    class=\"saveSettingsButton\"\r\n  >\r\n    Save\r\n  </button>\r\n</div>\r\n\r\n<style>\r\n  .settingsTextInput {\r\n    padding: 3px 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid gray;\r\n  }\r\n  .saveSettingsButton {\r\n    margin-top: 8px;\r\n    padding: 8px 20px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n  }\r\n  .addPageButton {\r\n    padding: 4px 15px;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #0b1;\r\n  }\r\n  #settingsPages {\r\n    background-color: rgb(245, 245, 245);\r\n    border: 1px solid lightgray;\r\n    padding: 8px 8px;\r\n    border-radius: 20px;\r\n    overflow-x: auto;\r\n  }\r\n  #settingsPagesList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n  }\r\n  .settingsPagesListPage {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 4px 6px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n  }\r\n  .settingsPagesGroupLeft {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n  }\r\n  .settingsPagesListPage label {\r\n    overflow-wrap: anywhere;\r\n  }\r\n  .settingsPagesMoveButtons {\r\n    width: 14px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .settingsPagesMoveButtons button {\r\n    width: inherit;\r\n    height: 12px;\r\n    font-size: 10px;\r\n    padding: 0;\r\n    border: 0;\r\n    cursor: pointer;\r\n    color: black;\r\n    background-color: rgb(238, 218, 34);\r\n  }\r\n  .settingsPagesMoveButtons button:first-child {\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n  }\r\n  .settingsPagesMoveButtons button:last-child {\r\n    border-bottom-left-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .settingsPageListButtons {\r\n    align-self: center;\r\n    display: flex;\r\n  }\r\n  .pageDeleteButton {\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: red;\r\n    cursor: pointer;\r\n  }\r\n  .settingsPageInput {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 5px;\r\n  }\r\n  .settingsPageInput input {\r\n    flex-grow: 1;\r\n  }\r\n  .unsavedWarning {\r\n    display: block;\r\n    color: red;\r\n    margin-top: 8px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    .settingsPageInput {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { userData } from \"../../store\";\r\n  import { backgrounds, knownPages } from \"../../data/config\";\r\n  import { saveConfig, saveBackground } from \"../../data/storage\";\r\n\r\n  import SettingsForm from \"./SettingsForm.svelte\";\r\n  import Backgrounds from \"./Backgrounds.svelte\";\r\n  import Pages from \"./Pages.svelte\";\r\n\r\n  let settingsData = {}; //Local data for settings\r\n  let isPanelShown = false;\r\n\r\n  const toggleSettingsPanel = () => {\r\n    isPanelShown = !isPanelShown;\r\n  };\r\n\r\n  //Subscribe to the entire userData\r\n  userData.subscribe((data) => {\r\n    settingsData = data;\r\n  });\r\n\r\n  const saveSettings = (settingsData, event) => {\r\n    event.preventDefault();\r\n\r\n    //Update state\r\n    userData.update((state) => {\r\n      state.yourName = escapeHTML(settingsData.yourName);\r\n      state.isBackgroundWhite = settingsData.isBackgroundWhite;\r\n      state.showCover = settingsData.showCover;\r\n      state.clockBackground = settingsData.clockBackground;\r\n      state.tileMinWidth = settingsData.tileMinWidth;\r\n      state.tileHeight = settingsData.tileHeight;\r\n      state.tileGap = settingsData.tileGap;\r\n      state.navbarOpacity = settingsData.navbarOpacity;\r\n      state.navbarColor = settingsData.navbarColor;\r\n      state.coverColor = settingsData.coverColor;\r\n      state.coverTextColor = settingsData.coverTextColor;\r\n      state.pages = settingsData.pages;\r\n      return state;\r\n    });\r\n\r\n    //Save to localstorage\r\n    saveConfig(settingsData);\r\n  };\r\n\r\n  const changeBackground = (bg) => {\r\n    settingsData.backgroundImage = bg;\r\n\r\n    try {\r\n      //Try saving to local storage if it doesn't exceed max size\r\n      saveBackground(settingsData.backgroundImage);\r\n\r\n      //Update background state IF it didn't fail saving to localstorage\r\n      userData.update((state) => {\r\n        state.backgroundImage = settingsData.backgroundImage;\r\n        return state;\r\n      });\r\n    } catch {\r\n      alert(\r\n        \"Background image is too large and it couldn't be saved\\n\\nPlease resize/compress the image and try again\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const addPage = (addPageInput, event) => {\r\n    event.preventDefault();\r\n\r\n    //Will add http:// if user didn't already do it\r\n    let linkToAdd = checkWebsite(addPageInput);\r\n\r\n    //Update pages state\r\n    settingsData.pages.push({\r\n      link: escapeHTML(linkToAdd),\r\n      imageName: getImageNameFor(linkToAdd),\r\n      isActive: true,\r\n    });\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const deletePage = (index) => {\r\n    //Delete 1 element from specified index\r\n    settingsData.pages.splice(index, 1);\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const movePage = (index, direction) => {\r\n    //Return if the move is not possible\r\n    if (direction === \"up\" && index == 0) {\r\n      return;\r\n    }\r\n    if (direction === \"down\" && index == settingsData.pages.length - 1) {\r\n      return;\r\n    }\r\n\r\n    //Get current item\r\n    let item = settingsData.pages[index];\r\n\r\n    //Remove current item from old location\r\n    settingsData.pages.splice(index, 1);\r\n\r\n    //Add current item in the direction\r\n    if (direction === \"up\") {\r\n      settingsData.pages.splice(index - 1, 0, item);\r\n    } else if (direction === \"down\") {\r\n      settingsData.pages.splice(index + 1, 0, item);\r\n    }\r\n\r\n    //Trigger list re-render\r\n    settingsData.pages = settingsData.pages;\r\n  };\r\n\r\n  const checkWebsite = (pageName) => {\r\n    if (pageName.substring(0, 4) == \"http\") {\r\n      return pageName;\r\n    } else {\r\n      return \"http://\" + pageName;\r\n    }\r\n  };\r\n\r\n  const getImageNameFor = (link) => {\r\n    //Get page name from provided link\r\n    let name = extractWebsiteName(link).toLowerCase();\r\n\r\n    if (knownPages.includes(name)) {\r\n      //Return the image name if the extension has it\r\n      return name + \".jpg\";\r\n    } else {\r\n      //Return the image for the first letter\r\n      return name[0] + \".jpg\";\r\n    }\r\n  };\r\n\r\n  const extractWebsiteName = (link) => {\r\n    let sitename = link;\r\n\r\n    //Remove http(s)://\r\n    sitename = sitename.substring(sitename.indexOf(\"://\") + 3);\r\n\r\n    //Remove www. if existent\r\n    if (sitename.substring(0, 3) == \"www\") {\r\n      sitename = sitename.substring(4);\r\n    }\r\n\r\n    //Remove ending (.com etc) (if found)\r\n    if (sitename.lastIndexOf(\".\") != -1) {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    //Do it twice for those that have .co\r\n    if (sitename.slice(-3) == \".co\") {\r\n      sitename = sitename.substring(0, sitename.lastIndexOf(\".\"));\r\n    }\r\n\r\n    return sitename;\r\n  };\r\n\r\n  let entityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\",\r\n    \"`\": \"&#x60;\",\r\n  };\r\n  function escapeHTML(string) {\r\n    return String(string).replace(/[<>\"'`]/g, function (s) {\r\n      return entityMap[s];\r\n    });\r\n  }\r\n</script>\r\n\r\n<button on:click={toggleSettingsPanel} id=\"settingsButton\">\r\n  <i class=\"fas fa-sliders-h\" />\r\n</button>\r\n\r\n{#if isPanelShown}\r\n  <div id=\"settingsPanel\">\r\n    <h2>Settings</h2>\r\n    <SettingsForm {settingsData} {saveSettings} />\r\n    <hr />\r\n    <h2>Background</h2>\r\n    <Backgrounds {backgrounds} {changeBackground} />\r\n    <hr />\r\n    <h2>Pages</h2>\r\n    <Pages {settingsData} {deletePage} {addPage} {saveSettings} {movePage} />\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  h2 {\r\n    margin-block-start: 0.4em;\r\n    margin-block-end: 0.4em;\r\n  }\r\n  hr {\r\n    margin-block-start: 0.9em;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n  }\r\n  #settingsButton {\r\n    position: absolute;\r\n    top: 2vh;\r\n    right: 2vw;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(60, 60, 60, 0.5);\r\n    border-radius: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 5;\r\n  }\r\n  #settingsPanel {\r\n    padding: 20px 40px;\r\n    position: absolute;\r\n    background-color: white;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 3;\r\n    max-height: 100vh;\r\n    max-width: 450px;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    #settingsPanel {\r\n      width: 100vw;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import \"./data/storage\";\r\n  import { userData } from \"./store\";\r\n\r\n  import Cover from \"./components/Cover.svelte\";\r\n  import QuickNav from \"./components/QuickNav.svelte\";\r\n  import SearchBar from \"./components/SearchBar/SearchBar.svelte\";\r\n  import SpeedDial from \"./components/SpeedDial.svelte\";\r\n  import Settings from \"./components/Settings/Settings.svelte\";\r\n\r\n  let backgroundImage;\r\n  let isBackgroundWhite = false;\r\n\r\n  userData.subscribe((data) => {\r\n    backgroundImage = data.backgroundImage;\r\n    isBackgroundWhite = data.isBackgroundWhite;\r\n  });\r\n\r\n  //Update background image url when background image changes\r\n  $: backgroundImageUrl = \"static/images/bg/\" + backgroundImage + \".jpg\";\r\n</script>\r\n\r\n<!--Use the url made above if user selects image provided by the extension (bgXXX)-->\r\n<main\r\n  style={isBackgroundWhite\r\n    ? \"\"\r\n    : backgroundImage.length > 5\r\n    ? \"background-image: url(\" + backgroundImage + \");\"\r\n    : \"background-image: url(\" + backgroundImageUrl + \");\"}\r\n>\r\n  <Cover />\r\n  <QuickNav />\r\n  <SearchBar />\r\n  <SpeedDial />\r\n  <Settings />\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-attachment: fixed;\r\n    background-repeat: no-repeat;\r\n  }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","toggle_class","toggle","classList","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","backgrounds","knownPages","subscriber_queue","userData","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","writable","yourName","localStorage","getItem","isBackgroundWhite","showCover","clockBackground","backgroundImage","tileMinWidth","tileHeight","tileGap","navbarOpacity","navbarColor","JSON","parse","r","g","coverColor","coverTextColor","pages","link","imageName","isActive","div1","div0","h1","create_if_block","showCoverAtLoad","setTimeout","$$invalidate","div","a0","a1","a2","a3","onClickChromeTabs","elem","chrome","tabs","span","time","Date","hours","getHours","slice","minutes","getMinutes","setInterval","showGithub","innerWidth","chance","Math","floor","random","form","button","searchQuery","entityMap","preventDefault","window","location","replace","String","s","a_href_value","if_block","div2","small","label0","input0","label1","input1","checked","label2","input2","div3","label3","input3","div4","label4","input4","div5","label5","input5","div6","label6","input6","div7","label7","input7","div8","label8","input8","input9","input10","div9","label9","input11","input12","input13","div10","label10","input14","input15","input16","settingsData","saveSettings","unsavedSettings","e","h4","bg","fileinput","changeBackground","onFileSelected","image","files","reader","FileReader","readAsDataURL","onload","result","click","$$value","img","img_src_value","t2_value","button0","button1","label","t2","each_value","deletePage","addPage","movePage","unsavedPages","addPageInput","h20","hr0","h21","hr1","h22","isPanelShown","checkWebsite","pageName","substring","getImageNameFor","extractWebsiteName","toLowerCase","includes","sitename","lastIndexOf","escapeHTML","string","state","setItem","stringify","saveConfig","saveBackground","alert","linkToAdd","direction","item","main","backgroundImageUrl","body"],"mappings":"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"}